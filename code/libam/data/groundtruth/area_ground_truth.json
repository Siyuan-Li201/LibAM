{
    "exjson___cknit":
    [
        "exjson_get_val_from_key",
        "yypush_buffer_state",
        "yylex_destroy",
        "yydestruct",
        "yy_load_buffer_state",
        "push_double",
        "add_array_ptr",
        "print_exjson",
        "add_array_string",
        "yyrealloc",
        "exjson_get_val_from_index",
        "add_object_string",
        "yyrestart",
        "yy_switch_to_buffer",
        "yy_init_buffer",
        "yy_create_buffer",
        "yy_fatal_error",
        "yyerror",
        "push_string",
        "yy_init_globals",
        "_exjson_strcat_",
        "add_object_double",
        "decode_json",
        "add_object_object",
        "yy_flush_buffer",
        "yy_scan_bytes",
        "exjson_get_array_or_object_from_key",
        "destroy_stack",
        "add_array_double",
        "yy_get_next_buffer",
        "yyparse",
        "push_int_tag",
        "yyunput",
        "INIT_STACK_V",
        "yy_delete_buffer",
        "yy_scan_buffer",
        "add_array_int",
        "yy_scan_string",
        "yy_try_NUL_trans",
        "add_array_array",
        "push_int",
        "yyensure_buffer_stack",
        "add_object_ptr",
        "input",
        "INIT_EXJSON_V",
        "destroy_exjson",
        "yypop_buffer_state",
        "add_object_array",
        "yy_get_previous_state",
        "INIT_STACK",
        "encode_json",
        "add_object_int",
        "push",
        "pop",
        "destroy_stack2",
        "exjson_get_array_or_object_from_index",
        "add_array_object",
        "INIT_EXJSON",
        "yylex"
    ],
    "exserver___cknit":
    [
        "decode_json",
        "add_object_double",
        "_exjson_strcat_",
        "yy_get_next_buffer",
        "yy_switch_to_buffer",
        "push_int",
        "INIT_EXJSON",
        "yy_try_NUL_trans",
        "yypop_buffer_state",
        "encode_json",
        "destroy_exjson",
        "push_string",
        "add_object_object",
        "INIT_STACK",
        "yy_init_globals",
        "destroy_stack2",
        "push_double",
        "yyrealloc",
        "pop",
        "add_array_ptr",
        "add_object_string",
        "yypush_buffer_state",
        "yylex",
        "destroy_stack",
        "yyparse",
        "exjson_get_array_or_object_from_index",
        "add_object_ptr",
        "add_array_int",
        "add_object_int",
        "print_exjson",
        "yy_load_buffer_state",
        "yy_get_previous_state",
        "add_array_array",
        "yy_scan_buffer",
        "add_object_array",
        "yyunput",
        "add_array_double",
        "exjson_get_val_from_index",
        "add_array_object",
        "yy_scan_string",
        "yyfree",
        "yyerror",
        "yy_create_buffer",
        "push_int_tag",
        "yy_scan_bytes",
        "add_array_string",
        "push",
        "input",
        "yy_flush_buffer",
        "yy_init_buffer",
        "yy_fatal_error",
        "yy_delete_buffer",
        "yyrestart",
        "INIT_STACK_V",
        "exjson_get_val_from_key",
        "yydestruct",
        "yylex_destroy",
        "exjson_get_array_or_object_from_key",
        "yyensure_buffer_stack",
        "INIT_EXJSON_V"
    ],
    "lzbench___brotli":
    [
        "PrepareH41",
        "BrotliHistogramBitCostDistanceCommand.part.2",
        "BrotliCompressFragmentFastImpl9",
        "BrotliEncoderCompress",
        "BrotliCompareAndPushToQueueDistance",
        "InitZopfliCostModel.isra.17",
        "BrotliCreateHqZopfliBackwardReferences",
        "BrotliCalculateRingBufferSize",
        "InitBlockSplitterCommand.constprop.4",
        "WriteMetaBlockInternal",
        "StoreCommands",
        "EvaluateNode.constprop.20",
        "PrepareH42",
        "BrotliCreateBackwardReferences",
        "BrotliCompareAndPushToQueueCommand",
        "StoreCompressedMetaBlockHeader",
        "BrotliDecoderStateCleanup",
        "RefineEntropyCodesLiteral.constprop.6",
        "BrotliDecoderCreateInstance",
        "BrotliInitMemoryManager",
        "ShouldMergeBlock",
        "BrotliClusterHistogramsLiteral",
        "BrotliCompressFragmentFast",
        "BrotliHistogramBitCostDistanceLiteral.part.1",
        "BrotliBuildHuffmanTable",
        "SafeDecodeSymbol",
        "BrotliBuildCodeLengthsHuffmanTable",
        "BrotliCompressFragmentTwoPassImpl15.isra.8",
        "BrotliCompressFragmentFastImpl11",
        "BrotliCompareAndPushToQueueLiteral",
        "GetHashTable",
        "DecodeCommandBlockSwitch",
        "BrotliIsMostlyUTF8",
        "BrotliPopulationCostCommand",
        "DecodeDistanceBlockSwitch",
        "BrotliTransformDictionaryWord",
        "InitBlockSplitterLiteral.constprop.5",
        "BrotliStoreMetaBlockHeader_0",
        "BuildHistograms.constprop.6",
        "EncodeWindowBits",
        "BrotliDecoderStateMetablockBegin",
        "ClusterBlocksDistance",
        "BrotliZopfliCreateCommands",
        "SafeDecodeCommandBlockSwitch",
        "ShouldCompress",
        "ContextBlockSplitterFinishBlock",
        "BrotliCompressFragmentFastImpl15",
        "StoreVarLenUint8",
        "BrotliFindAllStaticDictionaryMatches",
        "BrotliEstimateBitCostsForLiterals",
        "PrepareH6",
        "BrotliStoreMetaBlockFast",
        "BuildAndStoreBlockSplitCode",
        "BrotliHistogramBitCostDistanceDistance.part.3",
        "BuildAndStoreLiteralPrefixCode",
        "BrotliHistogramCombineLiteral",
        "BrotliStoreUncompressedMetaBlock",
        "RefineEntropyCodesCommand.constprop.11",
        "BuildAndStoreCommandPrefixCode",
        "BrotliEnsureRingBuffer",
        "PrepareH5",
        "StoreSymbolWithContext",
        "BrotliCompressFragmentTwoPassImpl13.isra.6",
        "BrotliBuildMetaBlockGreedy",
        "BrotliCompressFragmentTwoPassImpl17.isra.10",
        "ReadHuffmanCode",
        "ClusterBlocksLiteral",
        "BlockSplitterFinishBlockDistance",
        "DecodeMetaBlockLength",
        "BuildAndStoreBlockSwitchEntropyCodes",
        "BrotliWriteHuffmanTree",
        "InjectFlushOrPushOutput",
        "BrotliOptimizeHistograms",
        "BrotliStoreMetaBlock",
        "BlockSplitterAddSymbolLiteral",
        "BrotliZopfliComputeShortestPath",
        "BlockSplitterAddSymbolCommand",
        "BrotliPopulationCostLiteral",
        "SafeDecodeLiteralBlockSwitch",
        "BrotliAllocate",
        "BrotliStoreHuffmanTree",
        "BrotliSetDepth",
        "BrotliEncoderDestroyInstance",
        "GetBrotliStorage",
        "BrotliCompressBufferQuality10",
        "BrotliHistogramReindexCommand",
        "ComputeDistanceCost",
        "BrotliCompressFragmentFastImpl13",
        "BuildAndStoreHuffmanTree",
        "BlockSplitIteratorNext",
        "StoreSymbol",
        "StoreDataWithHuffmanCodes",
        "BrotliCompressFragmentTwoPassImpl14.isra.7",
        "BrotliClusterHistogramsCommand",
        "PrepareH55",
        "BrotliHistogramCombineDistance",
        "BrotliCompressFragmentTwoPassImpl8.isra.1",
        "SafeProcessCommands",
        "ProcessCommands",
        "UpdateNodes",
        "InverseMoveToFrontTransform",
        "BlockSplitterAddSymbolDistance",
        "PrepareH40",
        "BrotliInitDistanceParams",
        "UpdateBits.constprop.0",
        "BrotliDecoderDecompressStream",
        "EmitUncompressedMetaBlock_0",
        "BrotliCompressFragmentTwoPassImpl10.isra.3",
        "BrotliPopulationCostDistance",
        "ComputeShortestPathFromNodes",
        "BrotliEncoderCreateInstance",
        "BrotliHistogramRemapLiteral",
        "BlockSplitterFinishBlockCommand",
        "BrotliHistogramCombineCommand",
        "BrotliBuildSimpleHuffmanTable",
        "BrotliHistogramRemapDistance",
        "BrotliDecoderStateCleanupAfterMetablock",
        "DecodeVarLenUint8.isra.6",
        "EncodeContextMap",
        "BrotliCompressFragmentTwoPassImpl11.isra.4",
        "BrotliClusterHistogramsDistance",
        "WrapRingBuffer",
        "BrotliCompressFragmentTwoPassImpl9.isra.2",
        "BrotliHistogramReindexLiteral",
        "EmitUncompressedMetaBlock",
        "BrotliCompressFragmentTwoPass",
        "PrepareH65",
        "ClusterBlocksCommand",
        "BrotliDecoderDecompress",
        "BrotliBuildHistogramsWithContext",
        "StoreTrivialContextMap.part.5",
        "BrotliInitEncoderDictionary",
        "BrotliHistogramReindexDistance",
        "CopyUncompressedBlockToOutput",
        "RefineEntropyCodesDistance.constprop.16",
        "SetCost",
        "BrotliInitZopfliNodes",
        "BrotliStoreMetaBlockHeader",
        "BrotliConvertBitDepthsToSymbols",
        "InitBlockSplitterDistance.constprop.3",
        "BrotliCreateHuffmanTree",
        "BrotliSplitBlock",
        "BrotliBuildMetaBlock",
        "EncodeData",
        "SafeDecodeDistanceBlockSwitch",
        "BlockSplitterFinishBlockLiteral",
        "BrotliStoreMetaBlockTrivial",
        "BrotliBuildAndStoreHuffmanTreeFast",
        "BrotliCompressFragmentTwoPassImpl12.isra.5",
        "BrotliEncoderCompressStream",
        "ChooseDistanceParams",
        "BrotliDecoderHuffmanTreeGroupInit",
        "WriteRingBuffer",
        "BrotliOptimizeHuffmanCountsForRle",
        "BrotliDestroyBlockSplit",
        "BrotliCreateZopfliBackwardReferences",
        "BrotliDecoderDestroyInstance",
        "DecodeLiteralBlockSwitch",
        "BrotliHistogramRemapCommand",
        "PrepareH35",
        "BrotliDecoderStateInit",
        "BrotliWarmupBitReader",
        "ZopfliCostModelSetFromLiteralCosts",
        "DecodeContextMap",
        "BrotliDecoderTakeOutput",
        "BrotliCompressFragmentTwoPassImpl16.isra.9",
        "BrotliDefaultFreeFunc",
        "BrotliGetDictionary",
        "BrotliInitBlockSplit",
        "BrotliDefaultAllocFunc_0",
        "BrotliDefaultAllocFunc",
        "BrotliHistogramBitCostDistanceLiteral",
        "BrotliHistogramBitCostDistanceDistance",
        "BrotliFree",
        "BrotliHistogramBitCostDistanceCommand",
        "BrotliGetTransforms",
        "BrotliDefaultFreeFunc_0",
        "BrotliInitBitReader"
    ],
    "lzbench___bsc":
    [
        "divsufsort",
        "divbwt"
    ],
    "lzbench___bzip2":
    [
        "BZ2_bzDecompressEnd",
        "BZ2_bzWrite",
        "fallbackSort",
        "bsPutUInt32",
        "bzopen_or_bzdopen",
        "BZ2_bzCompress",
        "BZ2_compressBlock",
        "BZ2_hbAssignCodes",
        "BZ2_hbCreateDecodeTables",
        "BZ2_bzread",
        "BZ2_bzWriteOpen",
        "BZ2_bzWriteClose64",
        "BZ2_bzopen",
        "BZ2_bzReadClose",
        "BZ2_bzclose",
        "BZ2_bzReadOpen",
        "BZ2_bzCompressEnd",
        "BZ2_bzRead",
        "BZ2_blockSort",
        "BZ2_bzBuffToBuffDecompress",
        "BZ2_decompress",
        "BZ2_bzwrite",
        "BZ2_bzdopen",
        "BZ2_bzCompressInit",
        "BZ2_indexIntoF",
        "add_pair_to_block",
        "BZ2_bzBuffToBuffCompress",
        "BZ2_bzDecompressInit",
        "BZ2_hbMakeCodeLengths",
        "BZ2_bzWriteClose",
        "handle_compress.isra.2",
        "BZ2_bzDecompress",
        "BZ2_bz__AssertH__fail",
        "default_bzalloc",
        "default_bzfree"
    ],
    "lzbench___csc":
    [
        "_ZN2LZ15compress_normalEjb",
        "_ZN5Model17len_price_rebuildEv",
        "_ZN7Filters13Inverse_DeltaEPhjj",
        "_ZN10CSCEncoder7DestroyEv",
        "_ZN11MatchFinder18FindMatchWithPriceEP5ModeljP6MFUnitPjjj",
        "_ZN10CSCDecoder10DecompressEPhPjj",
        "_ZN2LZ11ap_backwardEi",
        "CSCEnc_Encode",
        "_ZN5Model16GetMatchLenPriceEjj",
        "_ZN2LZ5ResetEv",
        "_ZN5Model15GetLiteralPriceEjjj",
        "_ZN7Filters11Inverse_E89EPhj",
        "_ZN7Filters11Forward_E89EPhj",
        "CSCEnc_WriteProperties",
        "_ZN2LZ15DuplicateInsertEPhj",
        "_ZN7Filters13Forward_DeltaEPhjj",
        "_ZN11MatchFinder10find_matchEP6MFUnitPjjj",
        "_ZN5Model7DestroyEv",
        "_ZN5Model14EncodeRep0Len1Ev",
        "_ZN5MemIO7DestroyEv",
        "_ZN2LZ12EncodeNormalEPhjj",
        "_ZN5Model17GetMatchDistPriceEjj",
        "_ZN5Model11CompressBadEPhj",
        "_ZN10CSCEncoder4InitEPK9_CSCPropsP5MemIOP8ISzAlloc",
        "_ZN10CSCDecoder17decode_matchlen_2Ev",
        "_ZN5Model17encode_matchlen_2Ej",
        "_ZN10CSCEncoder8CompressEPhj",
        "_ZN7Filters11Foward_DictEPhj",
        "_ZN5Model15GetRepDistPriceEjj",
        "CSCEncProps_Init",
        "_ZN5Model4InitEP5CoderP8ISzAlloc",
        "_ZN2LZ4InitEPK9_CSCPropsP5ModelP8ISzAlloc",
        "CSCEnc_Encode_Flush",
        "_ZN8Analyzer7AnalyzeEPhjPj",
        "CSCDec_Create",
        "_ZN8Analyzer15get_channel_idxEPhj",
        "_ZN11MatchFinder9FindMatchEPjjj",
        "CSCDec_Decode",
        "_ZN5Coder11RC_ShiftLowEv",
        "_ZN11MatchFinder9normalizeEv",
        "_ZN2LZ13encode_nonlitE6MFUnit",
        "_ZN7Filters8E89flushEv",
        "_ZN5Model16CompressLiteralsEPhj",
        "_ZN10CSCDecoder9lz_decodeEPhPjj",
        "_ZN10CSCEncoder5FlushEv",
        "_ZN5Coder4InitEP5MemIOP8ISzAlloc",
        "_ZN7Filters10E89forwardEi",
        "_ZN5Model13CompressDeltaEPhj",
        "_ZN2LZ16IsDuplicateBlockEPhj",
        "_ZN5Model5ResetEv",
        "_ZN5Coder5FlushEv",
        "_ZN7Filters12MakeWordTreeEv",
        "_ZN7Filters12Inverse_DictEPhj",
        "_ZN8Analyzer9GetDltBpbEPhjj",
        "_ZN5Model9EncodeIntEj",
        "_ZN10CSCEncoder8WriteEOFEv",
        "CSCEnc_Destroy",
        "_ZN5Coder7DestroyEv",
        "CSCDec_Destroy",
        "_ZN2LZ17compress_advancedEj",
        "_ZN11MatchFinder4InitEPhjjjjjP8ISzAlloc",
        "_ZN2LZ16compress_mf_skipEj",
        "_ZN8Analyzer4InitEv",
        "_ZN5Model13EncodeLiteralEj",
        "_ZN5Model11CompressRLEEPhj",
        "_ZN2LZ7DestroyEv",
        "_ZN11MatchFinder8SlidePosEjjj",
        "_ZN5Model17encode_matchlen_1Ej",
        "_ZN11MatchFinder17SecondMatchBetterE6MFUnitS0_",
        "_ZN7Filters13E89cache_byteEi",
        "_ZN5Model18EncodeRepDistMatchEjj",
        "_ZN7Filters7DestroyEv",
        "CSCEnc_Create",
        "_ZN5MemIO9ReadBlockEPhRji",
        "_ZN5Coder11EncDirect16Ejj",
        "CSCDec_ReadProperties",
        "_ZN10CSCDecoder12lz_copy2dictEPhj",
        "_ZN7Filters10E89inverseEi",
        "_ZN10CSCEncoder14compress_blockEPhjj",
        "_ZN11MatchFinder8TestFindEjPhj",
        "_Z10stdio_readPvS_Pm",
        "_ZN5Model16GetRep0Len1PriceEj",
        "_ZN5MemIO10WriteBlockEPhji",
        "_ZN5Model11EncodeMatchEjj",
        "_ZN11MatchFinder12SlidePosFastEjj",
        "_ZN10CSCEncoder17GetCompressedSizeEv",
        "_ZN10CSCDecoder17decode_matchlen_1Ev.part.1",
        "_ZN10CSCDecoder17decode_matchlen_2Ev.part.2",
        "_ZN10CSCDecoder19coder_decode_directEj.part.0"
    ],
    "lzbench___gipfeli":
    [
        "_ZN4util11compression13NewedMemBlockD0Ev",
        "_ZN4util11compression7gipfeli11BlockReader12GetNextBlockEv",
        "_ZN4util11compression7gipfeli12EncodeLengthEPNS0_6SourceEPNS0_4SinkE",
        "_ZN4util11compression7gipfeli7Gipfeli15CompressorStateD2Ev",
        "_ZN4util11compression7gipfeli7Gipfeli17DecompressorState18ReallocateCommandsEi",
        "_ZN4util11compression7gipfeli18EntropyCodeBuilder10FindLimitsEPh",
        "_ZN4util11compression7gipfeli6Reader6Read64EPm",
        "_ZN4util11compression7gipfeli18DecompressCommandsEPcPKcjPj",
        "_ZN4util11compression7gipfeli6Reader8ReadSlowEPcmm",
        "_ZN4util11compression7gipfeli7Gipfeli11RawCompressERKSsPc",
        "_ZN4util11compression7gipfeli6Writer7OnErrorEv",
        "_ZN4util11compression7gipfeli6Writer13AllocateBlockEv",
        "_ZN4util11compression7gipfeli4LZ7716CompressFragmentEPKcmS4_PPcPjPS7_S7_",
        "_ZN4util11compression7gipfeli7Gipfeli21InternalRawUncompressEPKcmPcm",
        "_ZN4util11compression7gipfeli6ReaderD0Ev",
        "_ZN4util11compression22UncheckedByteArraySink6AppendEPKcm",
        "_ZN4util11compression7gipfeli7Gipfeli16UncompressStreamEPNS0_6SourceEPNS0_4SinkE",
        "_ZN4util11compression7gipfeli7Entropy16CompressCommandsEPKjjPc",
        "_ZN4util11compression13NewedMemBlockD2Ev",
        "_ZN4util11compression7gipfeli11BlockReaderD0Ev",
        "_ZN4util11compression7gipfeli7Gipfeli14CompressStreamEPNS0_6SourceEPNS0_4SinkE",
        "_ZN4util11compression7gipfeli7Gipfeli10UncompressERKSsPSs",
        "_ZN4util11compression7gipfeli7Gipfeli27GetUncompressedLengthStreamEPNS0_6SourceEPm",
        "_ZN4util11compression7gipfeli7GipfeliD0Ev",
        "_ZN4util11compression7gipfeli4LZ7714ResetHashTableEi",
        "_ZN4util11compression7gipfeli4LZ77C2Ei",
        "_ZN4util11compression7gipfeli7Gipfeli27InternalRawUncompressStreamEPNS0_6SourceEPNS0_4SinkEm",
        "_ZN4util11compression7gipfeli11BlockReaderD2Ev",
        "_ZN4util11compression7gipfeli4LZ77D2Ev",
        "_ZN4util11compression7gipfeli7Entropy8CompressEPKhjPKjjPc",
        "_ZN4util11compression7gipfeli18EntropyCodeBuilder18ProduceSymbolOrderEPhPiS4_",
        "_ZN4util11compression7gipfeli7Entropy23BuildEntropyCodeBitmaskEPKiPh",
        "_ZN4util11compression7gipfeli14DecompressMaskEjPcPhS3_",
        "_ZN4util11compression7gipfeli7Gipfeli13RawUncompressEPKcmPcm",
        "_ZN4util11compression7gipfeli24DecompressCommandsStreamEPNS1_6ReaderEjPj",
        "_ZN4util11compression7gipfeli7Gipfeli15CompressorState14ReallocateLZ77Ei",
        "_ZN4util11compression7gipfeli7GipfeliD2Ev",
        "_ZN4util11compression7gipfeli7Gipfeli8CompressERKSsPSs"
    ],
    "lzbench___libdeflate":
    [
        "libdeflate_gzip_decompress_ex",
        "libdeflate_alloc_compressor",
        "deflate_compress_greedy",
        "libdeflate_gzip_compress",
        "deflate_compress_lazy",
        "deflate_make_huffman_code",
        "libdeflate_deflate_compress_bound",
        "_libdeflate_setup_cpu_features",
        "do_end_block_check",
        "heapify_subtree",
        "deflate_make_huffman_codes",
        "libdeflate_deflate_compress",
        "deflate_write_block_header",
        "libdeflate_crc32",
        "sort_symbols",
        "deflate_compress_near_optimal",
        "deflate_flush_output",
        "deflate_decompress_bmi2",
        "deflate_decompress_default",
        "dispatch",
        "build_decode_table",
        "deflate_write_uncompressed_block",
        "deflate_flush_block",
        "libdeflate_deflate_decompress",
        "libdeflate_gzip_decompress",
        "libdeflate_deflate_decompress_ex",
        "libdeflate_gzip_compress_bound",
        "libdeflate_free_decompressor",
        "libdeflate_alloc_decompressor",
        "_libdeflate_deflate_get_compression_level",
        "libdeflate_free_compressor"
    ],
    "lzbench___liblzg":
    [
        "LZG_Decode",
        "LZG_Encode",
        "_LZG_SetHeader",
        "_LZG_CalcChecksum",
        "_LZG_UpdateLastPos",
        "LZG_EncodeFull"
    ],
    "lzbench___lzlib":
    [
        "LZ_compress_restart_member",
        "LZ_decompress_finished",
        "Mb_adjust_array",
        "do_compress",
        "LZ_compress_sync_flush",
        "LZ_decompress_finish",
        "LZ_decompress_write_size",
        "LZe_sequence_optimizer",
        "LZ_compress_total_out_size",
        "Rd_try_reload",
        "LZ_compress_open",
        "LZ_compress_read",
        "LZ_decompress_close",
        "LZ_compress_finished",
        "LZ_compress_write",
        "LZ_decompress_sync_to_member",
        "Mb_init",
        "Rd_find_header",
        "LZeb_try_full_flush",
        "LZ_compress_data_position",
        "Cb_write_data",
        "FLZe_encode_member",
        "FLZe_longest_match_len",
        "LZd_try_verify_trailer",
        "LZeb_encode_pair",
        "LZeb_reset",
        "LZ_compress_write_size",
        "LZ_compress_total_in_size",
        "LZ_compress_close",
        "LZ_decompress_reset",
        "Cb_read_data.part.5",
        "LZ_decompress_read",
        "LZ_compress_member_finished",
        "LZe_get_match_pairs",
        "LZ_decompress_write",
        "LZ_compress_member_position",
        "LZ_compress_finish",
        "verify_encoder",
        "LZ_decompress_open",
        "LZ_compress_errno",
        "LZ_min_dictionary_size",
        "LZ_decompress_errno"
    ],
    "lzbench___lzo":
    [
        "lzo1f_1_compress",
        "lzo1x_1_15_compress",
        "do_compress_6",
        "lzo1y_1_compress_core",
        "lzo1x_1_compress_core",
        "do_compress_1",
        "STORE_RUN_0",
        "lzo1y_1_compress",
        "do_compress_17",
        "STORE_RUN",
        "lzo1b_9_compress",
        "lzo1z_decompress_dict_safe",
        "lzo1c_999_compress_callback",
        "do_compress_19",
        "do_compress_13",
        "do_compress_0",
        "_lzo_config_check",
        "lzo1y_decompress_dict_safe",
        "len_of_coded_match",
        "do_compress_8",
        "store_run",
        "lzo1f_999_compress",
        "do_compress_11",
        "lzo2a_999_compress_callback",
        "do_compress_5",
        "do_compress_18",
        "lzo1x_999_compress_dict",
        "better_match_1",
        "lzo1z_999_compress_level",
        "lzo1a_99_compress",
        "do_compress_20",
        "lzo1x_999_compress_level",
        "lzo1x_1_15_compress_core",
        "lzo1a_compress",
        "lzo1b_3_compress",
        "lzo1x_1_12_compress",
        "len_of_coded_match_1",
        "lzo1z_999_compress_internal",
        "find_match_4",
        "lzo1x_optimize",
        "better_match_0",
        "_lzo1c_store_run",
        "find_match_2",
        "find_match_5",
        "__lzo_init_v2",
        "lzo1b_7_compress",
        "find_match_1",
        "do_compress_9",
        "lzo1b_999_compress",
        "lzo1x_999_compress",
        "do_compress_2",
        "lzo1b_5_compress",
        "lzo1y_optimize",
        "code_match",
        "lzo1b_8_compress",
        "_lzo1c_do_compress",
        "do_compress_7",
        "STORE_RUN_1",
        "find_match_0",
        "lzo1x_1_11_compress",
        "do_compress_15",
        "len_of_coded_match_0",
        "lzo1b_2_compress",
        "_lzo1b_store_run",
        "lzo1x_999_compress_internal",
        "lzo1z_999_compress_dict",
        "lzo1b_999_compress_callback",
        "_lzo1b_do_compress",
        "lzo1y_999_compress_internal",
        "do_compress_3",
        "lzo1x_1_12_compress_core",
        "do_compress_14",
        "lzo1f_999_compress_callback",
        "do_compress",
        "lzo1_compress",
        "lzo1b_1_compress",
        "do_compress_4",
        "lzo1a_decompress",
        "STORE_RUN_2",
        "lzo1_99_compress",
        "do_compress_21",
        "lzo1b_4_compress",
        "lzo1y_999_compress_dict",
        "code_match_1",
        "lzo1c_999_compress",
        "lzo1x_1_11_compress_core",
        "do_compress_10",
        "store_run_0",
        "code_match_0",
        "lzo1b_99_compress",
        "better_match",
        "lzo1x_1_compress",
        "lzo1b_6_compress",
        "lzo1z_999_compress",
        "lzo1_decompress",
        "lzo1y_999_compress",
        "do_compress_12",
        "lzo1y_999_compress_level",
        "do_compress_16",
        "find_match",
        "find_match_3",
        "lzo1x_decompress_dict_safe",
        "lzo1c_1_compress",
        "lzo1c_7_compress",
        "lzo1c_6_compress",
        "lzo1c_5_compress",
        "lzo1c_4_compress",
        "lzo1c_2_compress",
        "lzo1c_8_compress",
        "lzo2a_999_compress",
        "lzo1c_9_compress",
        "lzo_memmove",
        "lzo_memcmp",
        "lzo1c_99_compress",
        "lzo1c_3_compress",
        "lzo_memset",
        "lzo_memcpy"
    ],
    "lzbench___minizip":
    [
        "lzma_free",
        "lzma_alone_decoder",
        "add_pair_to_block",
        "BZ2_bzDecompressInit",
        "lzma_decoder_reset",
        "lzma_lzma_encoder_memusage",
        "lzma_strm_init",
        "BZ2_hbCreateDecodeTables",
        "lzma_end",
        "lzma_lzma_encoder_init",
        "lzma_lzma_encoder_reset",
        "lzma_mf_bt2_find",
        "lzma_mf_bt4_skip",
        "lzma_lz_encoder_memusage",
        "lzma_encoder_init",
        "lzma_lzma_optimum_fast",
        "alone_decoder_end",
        "lzma_mf_hc4_find",
        "get_literal_price",
        "BZ2_hbMakeCodeLengths",
        "lzma_mf_bt4_find",
        "BZ2_bzBuffToBuffCompress",
        "lzma_code",
        "lzma_lzma_decoder_create",
        "BZ2_indexIntoF",
        "lzma_next_filter_init",
        "lzma_lzma_lclppb_decode",
        "lz_encoder_update",
        "BZ2_bzCompressEnd",
        "bt_skip_func",
        "lzma_lzma_props_encode",
        "lz_encode",
        "lz_encoder_prepare",
        "BZ2_decompress",
        "hc_find_func",
        "lzma_lzma_preset",
        "BZ2_compressBlock",
        "lzma_bufcpy",
        "length_update_prices",
        "lzma_next_filter_update",
        "alone_decode",
        "lz_decoder_end",
        "lzma_mf_find",
        "lzma_encode",
        "lzma_alloc",
        "lzma_alone_decoder_init",
        "lzma_mf_bt3_find",
        "BZ2_bzBuffToBuffDecompress",
        "bt_find_func",
        "alone_encoder_end",
        "handle_compress.isra.2",
        "lzma_lzma_decoder_init",
        "lz_encoder_end",
        "BZ2_hbAssignCodes",
        "lzma_lzma_encode",
        "lzma_lzma_lclppb_encode",
        "lzma_lz_decoder_init",
        "alone_encoder_init",
        "lz_decode",
        "lzma_mf_bt3_skip",
        "lzma_alone_encoder",
        "is_options_valid",
        "BZ2_blockSort",
        "bsPutUInt32",
        "lzma_mf_hc3_find",
        "alone_encode",
        "lzma_mf_hc4_skip",
        "BZ2_bzDecompressEnd",
        "lzma_alloc_zero",
        "lzma_lzma_decoder_memusage",
        "lzma_mf_bt2_skip",
        "BZ2_bzCompressInit",
        "BZ2_bzCompress",
        "lzma_lz_encoder_init",
        "decode_buffer",
        "length_encoder_reset",
        "lzma_lzma_optimum_normal",
        "move_pos",
        "lzma_decoder_init",
        "BZ2_bzDecompress",
        "lzma_lzma_encoder_create",
        "lzma_lzma_props_decode",
        "lzma_decode",
        "lzma_mf_hc3_skip",
        "lzma_lz_decoder_uncompressed",
        "lzma_lz_decoder_memusage",
        "lzma_next_end",
        "lzma_lzma_decoder_memusage_nocheck"
    ],
    "lzbench___precomp":
    [
        "BrotliCalculateRingBufferSize",
        "BrotliCompressFragmentTwoPassImpl17.isra.10",
        "BrotliCompressFragmentTwoPassImpl8.isra.1",
        "lzma_lz_decoder_init",
        "alone_decode",
        "BrotliEstimateBitCostsForLiterals",
        "BrotliPopulationCostDistance",
        "BZ2_bzDecompressInit",
        "BrotliCompressFragmentTwoPassImpl16.isra.9",
        "CreateBackwardReferencesNH65.isra.45",
        "scan_tree",
        "DecodeMetaBlockLength",
        "lzma_lzma_encode",
        "deflateGetDictionary",
        "BrotliHistogramRemapDistance",
        "lzma_bufcpy",
        "BuildAndStoreBlockSwitchEntropyCodes",
        "BrotliDecoderTakeOutput",
        "EncodeContextMap",
        "deflateInit2_",
        "adler32_combine_.part.0",
        "inflateStateCheck",
        "lzma_lz_encoder_init",
        "lzma_code",
        "syncsearch",
        "alone_encode",
        "BrotliBuildAndStoreHuffmanTreeFast",
        "BrotliCompressFragmentTwoPassImpl13.isra.6",
        "BrotliBuildHistogramsWithContext",
        "BrotliHistogramCombineCommand",
        "lzma_lzma_lclppb_decode",
        "lzma_lzma_decoder_create",
        "BZ2_bzWriteClose64",
        "BuildHistograms.constprop.6",
        "BrotliCompressFragmentTwoPassImpl9.isra.2",
        "lzma_lzma_optimum_normal",
        "BrotliCompressFragmentTwoPassImpl11.isra.4",
        "lz_encode",
        "InitBlockSplitterCommand.constprop.4",
        "DecodeVarLenUint8.isra.6",
        "lzma_lzma_decoder_memusage",
        "ProcessCommands",
        "BlockSplitterFinishBlockCommand",
        "alone_encoder_init",
        "ChooseDistanceParams",
        "BrotliCompressFragmentFastImpl9",
        "lzma_mf_find",
        "ComputeDistanceCost",
        "BlockSplitterAddSymbolLiteral",
        "BrotliDecoderCreateInstance",
        "deflatePending",
        "BrotliStoreMetaBlockHeader",
        "deflateParams",
        "CopyUncompressedBlockToOutput",
        "CreateBackwardReferencesNH54.isra.42",
        "Shift",
        "move_pos",
        "PrepareH4.isra.18",
        "GetBrotliStorage",
        "BrotliHistogramCombineDistance",
        "BrotliEnsureRingBuffer",
        "BZ2_compressBlock",
        "BrotliCompressFragmentFastImpl11",
        "BrotliHistogramCombineLiteral",
        "fill_window",
        "BrotliOptimizeHuffmanCountsForRle",
        "BrotliCompressFragmentTwoPassImpl15.isra.8",
        "EmitUncompressedMetaBlock",
        "StoreVarLenUint8",
        "lzma_mf_hc4_skip",
        "alone_encoder_end",
        "BrotliBuildMetaBlock",
        "lzma_next_filter_init",
        "deflateReset",
        "DecodeCommandBlockSwitch",
        "lzma_mf_hc3_find",
        "inflateMark",
        "deflateCopy",
        "BrotliClusterHistogramsDistance",
        "lzma_mf_bt4_find",
        "inflateReset2",
        "send_tree",
        "lz_encoder_end",
        "BrotliCompressBufferQuality10",
        "CreateBackwardReferencesNH40.isra.39",
        "BrotliDecoderDecompressStream",
        "RefineEntropyCodesDistance.constprop.16",
        "inflateCodesUsed",
        "CreateBackwardReferencesNH42.isra.41",
        "inflateReset",
        "ShouldCompress",
        "BrotliHistogramRemapCommand",
        "PrepareH2.isra.10",
        "CreateBackwardReferencesNH6.isra.38",
        "CreateBackwardReferencesNH2.isra.34",
        "BZ2_hbAssignCodes",
        "BZ2_bzRead",
        "lzma_mf_hc3_skip",
        "BrotliStoreMetaBlockHeader_0",
        "BrotliPopulationCostLiteral",
        "inflateInit_",
        "BZ2_indexIntoF",
        "BrotliInitMemoryManager",
        "length_encoder_reset",
        "BrotliOptimizeHistograms",
        "BrotliSetDepth",
        "WriteRingBuffer",
        "BrotliBuildCodeLengthsHuffmanTable",
        "deflate",
        "SafeDecodeDistanceBlockSwitch",
        "BrotliDecoderHuffmanTreeGroupInit",
        "InjectFlushOrPushOutput",
        "inflate_fast",
        "lzma_encode",
        "BZ2_bzclose",
        "bt_skip_func",
        "BrotliBuildSimpleHuffmanTable",
        "lz_encoder_prepare",
        "BZ2_bzDecompressEnd",
        "CreateBackwardReferencesNH35.isra.43",
        "BrotliSplitBlock",
        "BrotliZopfliCreateCommands",
        "lzma_alloc_zero",
        "lz_decode",
        "longest_match",
        "lzma_lzma_lclppb_encode",
        "PrepareH55",
        "CreateBackwardReferencesNH55.isra.44",
        "adler32_z",
        "BrotliBuildMetaBlockGreedy",
        "length_update_prices",
        "deflateStateCheck",
        "BrotliCompareAndPushToQueueCommand",
        "add_pair_to_block",
        "read_buf",
        "StoreSymbol",
        "SafeDecodeLiteralBlockSwitch",
        "inflateEnd",
        "InitBlockSplitterLiteral.constprop.5",
        "BrotliHistogramReindexDistance",
        "handle_compress.isra.2",
        "GetHashTable",
        "BZ2_bzCompressInit",
        "inflateInit2_",
        "ClusterBlocksCommand",
        "BrotliDestroyBlockSplit",
        "lzma_alone_decoder_init",
        "BrotliAllocate",
        "PrepareH65",
        "InitZopfliCostModel.isra.17",
        "BrotliBuildHuffmanTable",
        "SafeDecodeCommandBlockSwitch",
        "BZ2_bzReadClose",
        "lzma_lz_encoder_memusage",
        "deflatePrime",
        "lzma_decoder_reset",
        "lzma_end",
        "BZ2_bzWrite",
        "BlockSplitIteratorNext",
        "BZ2_bzWriteClose",
        "slide_hash",
        "EvaluateNode.constprop.20",
        "deflateSetDictionary",
        "compress_block",
        "lzma_decoder_init",
        "BrotliCompressFragmentFast",
        "BrotliEncoderCompressStream",
        "get_literal_price",
        "lzma_alone_encoder",
        "BrotliHistogramReindexCommand",
        "BrotliCompressFragmentTwoPassImpl14.isra.7",
        "BrotliDecoderDecompress",
        "DecodeContextMap",
        "deflateTune",
        "ClusterBlocksLiteral",
        "BrotliDecoderStateMetablockBegin",
        "_ZNSt6vectorISsSaISsEEaSERKS1_",
        "PrepareH42",
        "BrotliCreateBackwardReferences",
        "SetCost",
        "ZopfliCostModelSetFromLiteralCosts",
        "lz_decoder_end",
        "deflateBound",
        "BrotliEncoderCreateInstance",
        "deflate_fast",
        "BrotliStoreHuffmanTree",
        "UpdateLastProcessedPos.isra.57",
        "StoreTrivialContextMap.part.5",
        "ShouldMergeBlock",
        "BlockSplitterAddSymbolCommand",
        "inflatePrime",
        "BrotliTransformDictionaryWord",
        "InverseMoveToFrontTransform",
        "build_tree",
        "EmitUncompressedMetaBlock_0",
        "BlockSplitterFinishBlockDistance",
        "BZ2_hbCreateDecodeTables",
        "lzma_lzma_encoder_memusage",
        "deflateResetKeep",
        "BrotliWriteHuffmanTree",
        "UpdateBits.constprop.0",
        "BrotliDecoderStateCleanup",
        "BrotliHistogramBitCostDistanceLiteral.part.1",
        "BZ2_bzReadOpen",
        "BrotliHistogramBitCostDistanceCommand.part.2",
        "gf2_matrix_square",
        "lzma_lzma_preset",
        "BuildAndStoreCommandPrefixCode",
        "alone_decoder_end",
        "ComputeShortestPathFromNodes",
        "deflate_slow",
        "inflate",
        "BZ2_bzDecompress",
        "bt_find_func",
        "BrotliCreateHuffmanTree",
        "lzma_mf_bt2_skip",
        "lzma_lzma_decoder_init",
        "StoreCommands",
        "BrotliCompressFragmentFastImpl15",
        "BrotliCompressFragmentTwoPass",
        "PrepareH40",
        "lzma_mf_bt3_skip",
        "ShouldCompress.part.56",
        "hc_find_func",
        "lzma_mf_bt4_skip",
        "inflateGetHeader",
        "BrotliCreateZopfliBackwardReferences",
        "bzopen_or_bzdopen",
        "BlockSplitterAddSymbolDistance",
        "BuildAndStoreHuffmanTree",
        "inflateValidate",
        "BrotliStoreUncompressedMetaBlock",
        "StoreSymbolWithContext",
        "BZ2_bzCompress",
        "lzma_lzma_encoder_reset",
        "BZ2_bzwrite",
        "BrotliDecoderStateCleanupAfterMetablock",
        "deflateEnd",
        "inflateSetDictionary",
        "CreateBackwardReferencesNH41.isra.40",
        "CreateBackwardReferencesNH3.isra.35",
        "RefineEntropyCodesCommand.constprop.11",
        "deflate_stored",
        "lzma_encoder_init",
        "lzma_mf_hc4_find",
        "decode_buffer",
        "PrepareHROLLING_FAST.isra.38.part.39",
        "inflateCopy",
        "BrotliFindAllStaticDictionaryMatches",
        "EncodeData",
        "InitBlockSplitterDistance.constprop.3",
        "BZ2_blockSort",
        "_tr_align",
        "BrotliCompressFragmentFastImpl13",
        "PrepareH6",
        "fallbackSort",
        "deflateInit_",
        "PrepareH5",
        "BrotliCompareAndPushToQueueDistance",
        "BrotliClusterHistogramsCommand",
        "BZ2_bzdopen",
        "BrotliWarmupBitReader",
        "CreateBackwardReferencesNH4.isra.36",
        "BrotliInitZopfliNodes",
        "BrotliHistogramRemapLiteral",
        "BlockSplitterFinishBlockLiteral",
        "ClusterBlocksDistance",
        "BZ2_hbMakeCodeLengths",
        "updatewindow",
        "BrotliDecoderStateInit",
        "BrotliStoreMetaBlock",
        "BrotliCompressFragmentTwoPassImpl10.isra.3",
        "BZ2_bzCompressEnd",
        "_tr_flush_block",
        "BZ2_decompress",
        "ContextBlockSplitterFinishBlock",
        "lzma_alloc",
        "bi_windup",
        "BuildAndStoreBlockSplitCode",
        "lzma_strm_init",
        "EncodeWindowBits",
        "is_options_valid",
        "inflate_table",
        "StoreCompressedMetaBlockHeader",
        "BrotliIsMostlyUTF8",
        "BZ2_bzWriteOpen",
        "inflateGetDictionary",
        "PrepareH3.isra.14",
        "BZ2_bz__AssertH__fail",
        "lz_encoder_update",
        "crc32_combine_",
        "lzma_lzma_encoder_create",
        "BrotliConvertBitDepthsToSymbols",
        "lzma_lzma_optimum_fast",
        "BrotliZopfliComputeShortestPath",
        "BZ2_bzBuffToBuffDecompress",
        "lzma_next_filter_update",
        "lzma_lzma_props_decode",
        "inflateResetKeep",
        "BrotliStoreMetaBlockTrivial",
        "BZ2_bzread",
        "inflateSyncPoint",
        "DecodeDistanceBlockSwitch",
        "BrotliCompareAndPushToQueueLiteral",
        "InitializeH6.isra.23",
        "UpdateNodes",
        "BZ2_bzopen",
        "BZ2_bzBuffToBuffCompress",
        "BrotliInitEncoderDictionary",
        "SafeProcessCommands",
        "BuildAndStoreLiteralPrefixCode",
        "PrepareH35",
        "RefineEntropyCodesLiteral.constprop.6",
        "BrotliInitDistanceParams",
        "lzma_free",
        "inflateUndermine",
        "_tr_stored_block",
        "BrotliHistogramBitCostDistanceDistance.part.3",
        "ReadHuffmanCode",
        "bsPutUInt32",
        "_tr_init",
        "WriteMetaBlockInternal",
        "BrotliCreateHqZopfliBackwardReferences",
        "BrotliCompressFragmentTwoPassImpl12.isra.5",
        "BrotliEncoderCompress",
        "PrepareH41",
        "lzma_decode",
        "lzma_lzma_encoder_init",
        "inflateSync",
        "deflateSetHeader",
        "BrotliEncoderDestroyInstance",
        "BrotliStoreMetaBlockFast",
        "crc32_little",
        "lzma_alone_decoder",
        "bi_flush",
        "SafeDecodeSymbol",
        "lzma_mf_bt2_find",
        "BrotliPopulationCostCommand",
        "lzma_mf_bt3_find",
        "BrotliHistogramReindexLiteral",
        "lzma_next_end.part.0",
        "lzma_lzma_props_encode",
        "BrotliClusterHistogramsLiteral",
        "PrepareH54.isra.34",
        "pqdownheap",
        "flush_pending",
        "BrotliDecoderDestroyInstance",
        "StoreDataWithHuffmanCodes",
        "CreateBackwardReferencesNH5.isra.37",
        "DecodeLiteralBlockSwitch",
        "WrapRingBuffer"
    ],
    "lzbench___xz":
    [
        "lzma_end",
        "lzma_strm_init",
        "lzma_next_filter_update",
        "lz_decoder_end",
        "hc_find_func",
        "bt_skip_func",
        "lzma_mf_bt3_skip",
        "lzma_next_filter_init",
        "lzma_mf_hc4_skip",
        "lzma_mf_bt4_find",
        "lzma_alloc",
        "lzma_mf_find",
        "lzma_lzma_lclppb_encode",
        "alone_decoder_end",
        "alone_encoder_init",
        "lzma_lzma_preset",
        "lz_encoder_prepare",
        "lzma_encoder_init",
        "lzma_lzma_decoder_memusage",
        "decode_buffer",
        "lzma_free",
        "lzma_mf_hc3_skip",
        "lzma_decode",
        "lzma_lzma_props_decode",
        "lzma_lzma_decoder_create",
        "lzma_mf_bt3_find",
        "lz_encoder_update",
        "lzma_lzma_optimum_fast",
        "lzma_next_end.part.0",
        "lzma_lzma_encoder_reset",
        "lzma_bufcpy",
        "lzma_lzma_props_encode",
        "bt_find_func",
        "get_literal_price",
        "lz_encoder_end",
        "lzma_lz_encoder_memusage",
        "lzma_lzma_encode",
        "lzma_lzma_encoder_memusage",
        "is_options_valid",
        "lzma_mf_bt4_skip",
        "lzma_mf_bt2_skip",
        "alone_decode",
        "lzma_mf_hc4_find",
        "lzma_decoder_reset",
        "lzma_decoder_init",
        "lz_encode",
        "lzma_lzma_optimum_normal",
        "lzma_code",
        "lzma_lzma_decoder_init",
        "alone_encoder_end",
        "lzma_alone_encoder",
        "alone_encode",
        "lzma_lzma_lclppb_decode",
        "lzma_mf_hc3_find",
        "lz_decode",
        "lzma_alone_decoder_init",
        "lzma_lz_encoder_init",
        "lzma_lzma_encoder_init",
        "lzma_encode",
        "lzma_lzma_encoder_create",
        "move_pos",
        "lzma_alone_decoder",
        "lzma_mf_bt2_find",
        "length_update_prices",
        "length_encoder_reset",
        "lzma_lz_decoder_init",
        "lzma_alloc_zero",
        "lzma_lz_decoder_uncompressed",
        "lzma_lz_decoder_memusage",
        "lzma_next_end",
        "lzma_lzma_decoder_memusage_nocheck"
    ],
    "lzbench___zlib":
    [
        "deflate_stored",
        "inflateSync",
        "gz_open",
        "gzvprintf",
        "inflate_fast",
        "inflateStateCheck",
        "build_tree",
        "gz_skip",
        "inflateSyncPoint",
        "deflate_fast",
        "_tr_stored_block",
        "_tr_flush_block",
        "gzdirect",
        "gz_write",
        "gz_fetch",
        "gzrewind",
        "gzclearerr",
        "gzread",
        "gz_avail",
        "gzopen64",
        "adler32_z",
        "deflateBound",
        "inflateGetDictionary",
        "inflateSetDictionary",
        "inflate",
        "gz_comp",
        "adler32_combine_.part.0",
        "gzdopen",
        "gzflush",
        "gf2_matrix_square",
        "inflateInit2_",
        "deflateCopy",
        "gzfwrite",
        "gz_init",
        "inflateCodesUsed",
        "deflateParams",
        "gzgetc_",
        "inflateResetKeep",
        "gz_look",
        "inflateEnd",
        "read_buf",
        "inflateUndermine",
        "scan_tree",
        "gzgetc",
        "_tr_init",
        "deflateInit_",
        "gzoffset64",
        "deflate_slow",
        "deflatePrime",
        "inflateReset",
        "gzclose_r",
        "slide_hash",
        "_tr_align",
        "deflatePending",
        "deflateSetHeader",
        "crc32_combine_",
        "gzungetc",
        "deflateTune",
        "gz_zero",
        "gzfread",
        "deflate",
        "deflateResetKeep",
        "deflateInit2_",
        "syncsearch",
        "inflateCopy",
        "deflateEnd",
        "gzopen",
        "bi_windup",
        "deflateGetDictionary",
        "pqdownheap",
        "gzsetparams",
        "inflateValidate",
        "gzclose_w",
        "inflateGetHeader",
        "gz_read",
        "deflateReset",
        "compress_block",
        "inflate_table",
        "inflateReset2",
        "gz_load",
        "fill_window",
        "gzprintf",
        "gzseek64",
        "deflateSetDictionary",
        "bi_flush",
        "gzclose",
        "inflateMark",
        "gz_decomp",
        "inflatePrime",
        "gzseek",
        "gzputs",
        "gzgets",
        "gz_error",
        "gzputc",
        "inflateInit_",
        "gzwrite",
        "updatewindow",
        "send_tree",
        "longest_match",
        "flush_pending",
        "crc32_little",
        "deflateStateCheck"
    ],
    "lzbench___zlib-ng":
    [
        "deflate_slow",
        "crc32_little",
        "read_buf",
        "build_tree",
        "compress_block",
        "scan_tree",
        "flush_pending",
        "gz_skip",
        "deflate_fast",
        "gz_open",
        "gz_load",
        "gz_read",
        "gz_look",
        "gz_zero",
        "bi_flush",
        "pqdownheap",
        "gz_fetch",
        "gz_comp",
        "gz_init",
        "gz_write",
        "bi_windup",
        "inflateStateCheck",
        "syncsearch",
        "deflateStateCheck",
        "deflate_stored",
        "fill_window",
        "gz_decomp",
        "gz_error",
        "send_tree",
        "gz_avail"
    ],
    "lzbench___zstd":
    [
        "ZSTD_createDDict",
        "BIT_reloadDStream",
        "ZSTD_initCDict_internal",
        "ZSTD_getCParamsFromCDict",
        "ZSTD_BtFindBestMatch_extDict_selectMLS.constprop.7",
        "ZSTD_initDStream_usingDict",
        "ZSTD_count_1",
        "ZSTD_compressBlock_doubleFast_extDict",
        "ZSTD_ldm_getTableSize",
        "ZSTD_count_2segments_2",
        "ZSTD_DCtx_refPrefix",
        "HUF_decompress4X_hufOnly_wksp_bmi2",
        "ZSTD_buildSeqTable",
        "ZSTD_compressBlock_lazy_extDict",
        "ZSTD_adjustCParams",
        "ZSTD_compressStream2_simpleArgs",
        "ZSTD_copyCCtx",
        "ZSTD_DCtx_loadDictionary",
        "ZSTDMT_initCStream_internal",
        "ZSTD_initCStream_usingDict",
        "ZSTD_NCountCost",
        "ZSTD_compressBlock_doubleFast_dictMatchState",
        "ZSTD_decompressSequencesLong_bmi2.constprop.8",
        "FSE_decompress_wksp",
        "ZSTD_compressBlock_internal",
        "HUF_decompress4X1_DCtx_wksp",
        "ZSTD_CCtx_refPrefix_advanced",
        "ZSTDMT_freeCCtxPool",
        "ZSTD_createCDict_byReference",
        "ZSTD_CCtx_reset",
        "HUF_decompress4X2",
        "ZSTD_checkContinuity",
        "ZSTDMT_createCompressionJob",
        "ZSTD_compressBegin_advanced_internal",
        "ZSTDMT_compressCCtx",
        "ZSTD_decompressBound",
        "ZSTD_decompressBegin_usingDDict",
        "ZSTD_estimateCCtxSize_usingCCtxParams",
        "HUF_decompress1X2_DCtx",
        "ZSTD_execSequenceLast7.isra.3",
        "ZSTD_BtFindBestMatch_dictMatchState_selectMLS.constprop.8",
        "ZSTD_CCtxParams_getParameter",
        "HUF_decompress1X_usingDTable_bmi2",
        "ZSTD_freeCStream",
        "ZSTD_DCtx_loadDictionary_byReference",
        "ZSTD_ldm_skipSequences",
        "ZSTD_estimateDStreamSize_fromFrame",
        "HUF_decompress4X_usingDTable",
        "FSE_readNCount",
        "ZSTD_freeCDict",
        "ZSTD_compressBlock_lazy2_dictMatchState",
        "ZSTD_ldm_makeEntryAndInsertByTag.isra.5",
        "ZSTD_compressBlock_btultra",
        "ZSTD_compressBlock_btlazy2_dictMatchState",
        "ZSTD_freeCCtxParams",
        "HIST_count_wksp",
        "HUF_compress1X_wksp",
        "HUF_compress1X_repeat",
        "HUF_buildCTable_wksp",
        "ZSTD_setBasePrices",
        "ZSTD_decompressSequencesLong_default.constprop.10",
        "HUF_decompress4X_hufOnly",
        "ZSTD_compress_usingCDict",
        "ZSTD_compress2",
        "FSE_writeNCount_generic",
        "ZSTD_insertAndFindFirstIndexHash3",
        "HUF_readStats",
        "HUF_writeCTable",
        "ZSTD_compressBegin_usingCDict",
        "ZSTD_sizeof_CDict",
        "HUF_decompress1X1_usingDTable_internal_bmi2",
        "ZSTD_cParam_getBounds",
        "HUF_decompress1X1_DCtx",
        "ZSTD_CCtxParams_init_advanced",
        "FSE_decompress",
        "ZSTDMT_compressStream_generic",
        "ZSTD_compress_advanced",
        "ZSTDMT_getBuffer",
        "ZSTD_compress_usingDict",
        "ZSTD_selectEncodingType",
        "ZSTD_initStats_ultra",
        "ZSTD_createCDict_advanced",
        "HUF_decompress4X1_DCtx_wksp_bmi2",
        "ZSTDMT_freeCCtx",
        "ZSTD_DCtx_reset",
        "ZSTD_ldm_adjustParameters",
        "ZSTD_overflowCorrectIfNeeded",
        "ZSTD_getFrameHeader_advanced",
        "ZSTD_compressBlock_greedy_dictMatchState",
        "ZSTD_buildCTable",
        "ZSTD_createDStream",
        "BIT_initDStream",
        "FSE_normalizeCount",
        "sort_typeBstar.isra.2",
        "ZSTD_compress_insertDictionary",
        "HUF_decodeStreamX1",
        "ZSTD_compressBegin_advanced",
        "ZSTD_decompress",
        "ZSTD_updateTree",
        "ZSTDMT_freeBufferPool",
        "ZSTD_decompressBlock_internal",
        "HUF_selectDecoder",
        "ZSTD_decompressDCtx",
        "ZSTD_count_2segments",
        "ZSTD_compressBegin_usingDict",
        "HIST_count_parallel_wksp",
        "FSE_compress_wksp",
        "ZSTD_ldm_blockCompress",
        "ZSTD_copyDDictParameters",
        "HUF_compress1X",
        "HUF_readDTableX2",
        "ZSTDMT_initCStream_usingCDict",
        "ZSTD_compressBlock_lazy2",
        "ZSTD_insertBt1",
        "ZSTD_estimateCCtxSize",
        "FSE_writeNCount",
        "ZSTD_createCCtx",
        "HUF_decompress1X1",
        "ZSTD_fillHashTable",
        "ZSTD_decompress_usingDDict",
        "ZSTD_decodeSeqHeaders",
        "ZSTD_initCStream_internal",
        "ZSTD_DCtx_refPrefix_advanced",
        "ZSTD_DUBT_findBestMatch",
        "ZSTD_initCStream_usingCDict",
        "ZSTD_dParam_getBounds",
        "ZSTD_DCtx_setMaxWindowSize",
        "ZSTDMT_compressionJob",
        "HUF_decompress4X_hufOnly_wksp",
        "HUF_compressCTable_internal",
        "HUF_readDTableX1_wksp",
        "ZSTD_decodeLiteralsBlock",
        "ZSTD_estimateCCtxSize_usingCParams",
        "ZSTD_createCStream",
        "UTIL_prepareFileList",
        "ZSTD_rawLiteralsCost",
        "ZSTD_rescaleFreqs",
        "FSE_buildCTable_rle",
        "ZSTD_resetCStream",
        "HUF_decompress1X2_usingDTable_internal_default",
        "ZSTD_calloc",
        "ZSTD_initStaticDStream",
        "ZSTD_createCCtx_advanced",
        "ZSTDMT_releaseAllJobResources",
        "ZSTDMT_sizeof_CCtx",
        "ZSTD_frameHeaderSize_internal",
        "ZSTD_compressBlock_fast_extDict",
        "UTIL_isDirectory",
        "ZSTD_fillDoubleHashTable",
        "HUF_decompress1X1_usingDTable_internal_default",
        "ZSTD_sizeof_DDict",
        "HUF_decompress4X1",
        "ZSTD_decompressStream_simpleArgs",
        "ZSTD_DCtx_setParameter",
        "ZSTD_CCtx_refCDict",
        "ZSTDMT_compressStream",
        "ZSTD_compressCCtx",
        "ZSTDMT_compress_advanced_internal",
        "divbwt",
        "ZSTD_initCStream_usingCDict_advanced",
        "ZSTD_litLengthPrice.isra.6",
        "HUF_compress4X_wksp",
        "ZSTD_createCDict",
        "HUF_decompress4X2_DCtx",
        "HUF_decompress4X_DCtx",
        "ZSTD_sizeof_CCtx",
        "ZSTD_initStaticCCtx",
        "ZSTD_CCtx_loadDictionary",
        "ZSTD_estimateCDictSize",
        "ZSTD_compress_advanced_internal",
        "ZSTDMT_getMTCtxParameter",
        "ZSTD_decodeFrameHeader",
        "ZSTD_compressContinue",
        "ZSTDMT_serialState_reset",
        "ZSTD_compressStream",
        "ZSTD_estimateCDictSize_advanced",
        "HUF_compress",
        "ZSTDMT_resetCStream",
        "ZSTD_loadDEntropy",
        "ZSTD_compressRleLiteralsBlock",
        "ZSTD_insertAndFindFirstIndex_internal.isra.1",
        "ZSTD_initStaticCDict",
        "ZSTD_initCStream_advanced",
        "ZSTD_estimateCStreamSize_usingCParams",
        "ZSTD_loadDictionaryContent",
        "ZSTD_compressBound",
        "ZSTD_decompress_usingDict",
        "ZSTD_getCParamsFromCCtxParams",
        "ZSTD_loadZstdDictionary",
        "ZSTD_compressEnd",
        "ZSTD_createDCtx_advanced",
        "ZSTD_initCStream",
        "ZSTD_count_2segments_1",
        "ZSTD_compress",
        "ZSTD_compressBlock_greedy",
        "ZSTD_compressBlock_doubleFast_extDict_generic",
        "ZSTD_adjustCParams_internal",
        "FSE_optimalTableLog_internal",
        "ZSTD_assignParamsToCCtxParams",
        "ZSTD_compressBlock_btopt_dictMatchState",
        "ZSTD_compressBlock_lazy",
        "HUF_decompress1X1_DCtx_wksp",
        "ZSTD_initCCtx",
        "ZSTD_compressBlock_btlazy2",
        "ZSTD_sizeof_matchState",
        "FSE_compress2",
        "ZSTDMT_compress_advanced",
        "HUF_decompress4X1_DCtx",
        "HUF_readCTable",
        "ZSTD_count",
        "ZSTD_fracWeight",
        "HUF_decompress1X1_DCtx_wksp_bmi2",
        "ZSTD_ldm_fillFastTables",
        "HUF_compress1X_usingCTable_internal_bmi2",
        "ZSTDMT_expandBufferPool",
        "HUF_decodeStreamX2",
        "HUF_decompress4X2_usingDTable_internal_default",
        "ZSTD_estimateCCtxSize_usingCCtxParams.part.22",
        "HUF_decompress4X2_usingDTable",
        "ZSTD_compressContinue_internal",
        "ZSTD_compressBegin",
        "HUF_decompress",
        "ZSTDMT_endStream",
        "ZSTD_initDStream",
        "ZSTDMT_updateCParams_whileCompressing",
        "HUF_decompress4X2_DCtx_wksp",
        "ZSTD_compressBlock_fast",
        "HUF_decompress1X2_DCtx_wksp",
        "ZSTD_reset_matchState",
        "HUF_compress_internal",
        "ZSTD_compressBlock_btultra_extDict",
        "ZSTDMT_CCtxParam_setMTCtxParameter",
        "HIST_countFast_wksp",
        "HIST_count",
        "ZSTD_freeDDict",
        "ZSTD_compressBlock_fast_dictMatchState",
        "ZSTD_CCtx_refPrefix",
        "ZSTD_flushStream",
        "ZSTD_referenceExternalSequences",
        "ZSTD_CCtx_loadDictionary_advanced",
        "ZSTD_seqToCodes",
        "ZSTD_getFrameContentSize",
        "ZSTD_updateRep",
        "ZSTD_compressBlock_btultra_dictMatchState",
        "ZSTD_initStaticDDict",
        "ZSTD_freeCCtx",
        "ZSTD_updateDUBT.isra.2",
        "ZSTD_decompressBegin",
        "ZSTD_cParam_withinBounds",
        "ZSTD_createDDict_advanced",
        "ZSTD_count_2segments_0",
        "HUF_decompress1X2",
        "ZSTD_compressBlock_btultra2",
        "ZSTD_compressBegin_usingCDict_advanced",
        "ZSTD_initDDict_internal",
        "ZSTD_compressLiterals",
        "HUF_decompress4X_usingDTable_bmi2",
        "ZSTD_CCtx_loadDictionary_byReference",
        "ZSTD_noCompressLiterals",
        "divsufsort",
        "ZSTD_compressBlock_lazy2_extDict",
        "ZSTDMT_flushStream_internal",
        "tr_introsort.constprop.4",
        "HUF_decompress4X1_usingDTable",
        "ZSTD_compressBlock_greedy_extDict",
        "ZSTD_clearAllDicts",
        "ZSTD_writeFrameHeader.isra.15",
        "HUF_decompress4X1_usingDTable_internal_default",
        "ZSTD_initStaticDCtx",
        "HUF_decompress4X2_usingDTable_internal_bmi2",
        "ZSTDMT_flushProduced",
        "HUF_decompress4X1_usingDTable_internal_bmi2",
        "ZSTD_estimateCStreamSize",
        "FSE_compress_usingCTable_generic",
        "ZSTD_free",
        "ZSTDMT_expandJobsTable",
        "ZSTD_compressBlock_btopt_extDict",
        "ZSTD_updateStats",
        "ZSTD_decompressBegin_usingDict",
        "FSE_buildDTable",
        "ZSTD_encodeSequences_bmi2",
        "ZSTD_resetCCtx_internal",
        "FSE_decompress_usingDTable",
        "HUF_readDTableX1",
        "ZSTD_createDDict_byReference",
        "ZSTD_literalsContribution",
        "ZSTD_findFrameSizeInfo",
        "ZSTDMT_initJobCCtxParams",
        "ZSTD_createCStream_advanced",
        "HUF_decompress1X_DCtx_wksp",
        "ZSTD_dParam_withinBounds",
        "ZSTD_compressBlock",
        "ZSTD_compressBlock_btopt",
        "ZSTD_encodeSequences",
        "ZSTD_makeCCtxParamsFromCParams",
        "FSE_compress",
        "HUF_compress4X_usingCTable_internal",
        "ZSTD_getDictID_fromFrame",
        "ZSTDMT_initCStream_advanced",
        "FSE_buildCTable_wksp",
        "ZSTDMT_flushStream",
        "ZSTD_initDStream_usingDDict",
        "ZSTD_initDCtx_internal",
        "ZSTD_estimateCStreamSize_usingCCtxParams",
        "ZSTD_findDecompressedSize",
        "ZSTD_getcBlockSize",
        "ZSTD_DCtx_refDDict",
        "HIST_count_simple",
        "ZSTD_checkCParams",
        "FSE_buildCTable",
        "ZSTD_getCParams",
        "HUF_decompress1X2_usingDTable_internal_bmi2",
        "ZSTD_CCtx_setParameter",
        "HUF_decompress1X_DCtx",
        "ZSTD_decompressSequences_bmi2.constprop.9",
        "XXH64_mergeRound",
        "ZSTD_createCCtxParams",
        "ZSTD_compressBegin_internal",
        "ZSTD_decompressMultiFrame",
        "ZSTD_DCtx_loadDictionary_advanced",
        "ZSTD_ldm_generateSequences",
        "ZSTD_compressStream2",
        "ZSTD_sizeof_DCtx",
        "ZSTD_createDCtx",
        "ZSTD_HcFindBestMatch_dictMatchState_selectMLS.constprop.5",
        "HUF_compress1X_usingCTable_internal_default",
        "HUF_compress2",
        "ZSTD_decompressStream",
        "ZSTD_count_0",
        "HUF_decompress4X2_DCtx_wksp_bmi2",
        "ss_mintrosort.constprop.10",
        "ZSTDMT_releaseBuffer",
        "ZSTD_compress_usingCDict_advanced",
        "ZSTD_initFseState",
        "ZSTDMT_waitForLdmComplete",
        "ss_swapmerge.constprop.6",
        "ZSTD_initCStream_srcSize",
        "ZSTD_decompressContinue",
        "ZSTD_buildFSETable",
        "ZSTD_getDDict",
        "ZSTD_reduceTable",
        "ZSTD_BtFindBestMatch_selectMLS.constprop.9",
        "ZSTDMT_initCStream",
        "ZSTD_compressBlock_lazy_dictMatchState",
        "ZSTD_getParams",
        "HUF_compress4X_repeat",
        "ZSTD_compressBlock_fast_extDict_generic",
        "ZSTD_decompressBlock",
        "ZSTD_endStream",
        "ZSTD_CCtxParams_setParameter",
        "ZSTD_compressBlock_btlazy2_extDict",
        "HUF_readDTableX2_wksp",
        "ZSTD_getDecompressedSize",
        "ZSTD_copy8",
        "ZSTD_invalidateRepCodes",
        "ZSTD_findFrameCompressedSize",
        "ZSTD_copy16",
        "ZSTD_getErrorString",
        "ZSTD_getDictID_fromDict",
        "ZSTD_insertAndFindFirstIndex",
        "ZSTD_freeDStream",
        "ZSTD_malloc",
        "ZSTD_freeDCtx",
        "ZSTD_resetSeqStore",
        "ZSTD_copyDCtx",
        "ZSTD_CCtx_getParameter",
        "ZSTD_frameHeaderSize",
        "ZSTD_getErrorCode",
        "ZSTD_initStaticCStream",
        "ZSTD_resetDStream",
        "ZSTD_getErrorName",
        "ZSTD_DDict_dictSize",
        "ZSTD_ldm_getMaxNbSeq",
        "ZSTD_getDictID_fromDDict",
        "ZSTD_sizeof_DStream",
        "ZSTD_DDict_dictContent",
        "ZSTD_getFrameHeader",
        "ZSTD_writeLastEmptyBlock",
        "ZSTD_isError",
        "ZSTD_sizeof_CStream",
        "ZSTD_selectBlockCompressor",
        "ZSTD_createDStream_advanced",
        "ZSTD_DCtx_setFormat"
    ],
    "minizip___bzip2":
    [
        "BZ2_hbCreateDecodeTables",
        "BZ2_bzBuffToBuffDecompress",
        "add_pair_to_block",
        "BZ2_bzDecompressInit",
        "BZ2_hbMakeCodeLengths",
        "BZ2_bzCompressEnd",
        "BZ2_bzDecompress",
        "BZ2_bzDecompressEnd",
        "BZ2_compressBlock",
        "BZ2_hbAssignCodes",
        "BZ2_blockSort",
        "bsPutUInt32",
        "handle_compress.isra.2",
        "BZ2_bzCompress",
        "BZ2_decompress",
        "BZ2_bzCompressInit",
        "BZ2_bzBuffToBuffCompress",
        "BZ2_indexIntoF"
    ],
    "minizip___xz":
    [
        "lzma_decoder_init",
        "lzma_mf_bt2_find",
        "lzma_lz_decoder_init",
        "alone_encoder_end",
        "lzma_properties_size",
        "lzma_lzma_optimum_normal",
        "move_pos",
        "lzma_lzma_encode",
        "lzma_code",
        "lzma_alone_decoder_init",
        "lzma_strm_init",
        "lz_decoder_end",
        "lzma_lzma_encoder_create",
        "lzma_alone_encoder",
        "lzma_mf_bt2_skip",
        "lzma_lzma_lclppb_encode",
        "is_options_valid",
        "lzma_bufcpy",
        "lzma_alloc_zero",
        "lzma_mf_bt4_find",
        "lzma_lz_encoder_init",
        "lz_encoder_prepare",
        "lzma_lzma_preset",
        "lzma_lz_encoder_memusage",
        "length_encoder_reset",
        "lzma_lzma_decoder_init",
        "lzma_lzma_decoder_create",
        "lzma_mf_bt4_skip",
        "lzma_next_filter_init",
        "lzma_lzma_encoder_reset",
        "decode_buffer",
        "hc_find_func",
        "lzma_mf_hc3_skip",
        "lzma_next_filter_update",
        "lzma_end",
        "lzma_mf_bt3_find",
        "lzma_mf_hc4_find",
        "lz_encoder_update",
        "lzma_lzma_optimum_fast",
        "alone_encode",
        "lzma_mf_bt3_skip",
        "lzma_lzma_decoder_memusage",
        "lzma_lzma_encoder_memusage",
        "lzma_encoder_init",
        "alone_encoder_init",
        "length_update_prices",
        "lz_encode",
        "bt_skip_func",
        "lzma_decoder_reset",
        "lzma_lzma_props_encode",
        "lzma_alone_decoder",
        "lzma_decode",
        "lzma_mf_find",
        "alone_decode",
        "bt_find_func",
        "lzma_mf_hc3_find",
        "get_literal_price",
        "lzma_free",
        "lz_encoder_end",
        "lzma_encode",
        "lzma_lzma_encoder_init",
        "lz_decode",
        "lzma_alloc",
        "lzma_lzma_props_decode",
        "lzma_lzma_lclppb_decode",
        "alone_decoder_end",
        "lzma_mf_hc4_skip",
        "lzma_lz_decoder_uncompressed",
        "lzma_lz_decoder_memusage",
        "lzma_properties_encode",
        "lzma_next_end",
        "lzma_lzma_decoder_memusage_nocheck"
    ],
    "precomp___brotli":
    [
        "InitBlockSplitterDistance.constprop.3",
        "BlockSplitIteratorNext",
        "ShouldMergeBlock",
        "WriteRingBuffer",
        "SetCost",
        "PrepareH65",
        "BrotliCompressFragmentFast",
        "BrotliSetDepth",
        "EvaluateNode.constprop.20",
        "UpdateNodes",
        "BuildAndStoreLiteralPrefixCode",
        "BrotliOptimizeHuffmanCountsForRle",
        "ComputeDistanceCost",
        "BrotliDecoderHuffmanTreeGroupInit",
        "BrotliStoreUncompressedMetaBlock",
        "BuildAndStoreHuffmanTree",
        "BlockSplitterFinishBlockDistance",
        "BlockSplitterAddSymbolLiteral",
        "SafeDecodeCommandBlockSwitch",
        "BrotliDecoderTakeOutput",
        "BrotliCompressFragmentTwoPassImpl9.isra.2",
        "EncodeContextMap",
        "BrotliStoreMetaBlockTrivial",
        "SafeDecodeDistanceBlockSwitch",
        "ComputeShortestPathFromNodes",
        "BrotliDecoderDecompressStream",
        "BrotliHistogramRemapCommand",
        "BrotliStoreHuffmanTree",
        "PrepareH55",
        "PrepareH42",
        "BrotliHistogramCombineDistance",
        "BrotliCompressFragmentTwoPassImpl17.isra.10",
        "RefineEntropyCodesLiteral.constprop.6",
        "BlockSplitterAddSymbolDistance",
        "StoreCompressedMetaBlockHeader",
        "EmitUncompressedMetaBlock_0",
        "BrotliWriteHuffmanTree",
        "ContextBlockSplitterFinishBlock",
        "BrotliPopulationCostLiteral",
        "BrotliCalculateRingBufferSize",
        "ClusterBlocksCommand",
        "BrotliHistogramBitCostDistanceCommand.part.2",
        "BrotliBuildAndStoreHuffmanTreeFast",
        "BrotliCompareAndPushToQueueDistance",
        "CopyUncompressedBlockToOutput",
        "DecodeVarLenUint8.isra.6",
        "PrepareH40",
        "BuildAndStoreBlockSwitchEntropyCodes",
        "RefineEntropyCodesCommand.constprop.11",
        "BrotliCreateZopfliBackwardReferences",
        "InverseMoveToFrontTransform",
        "BrotliDecoderStateCleanup",
        "SafeProcessCommands",
        "EncodeWindowBits",
        "UpdateBits.constprop.0",
        "BrotliConvertBitDepthsToSymbols",
        "BrotliCompressFragmentFastImpl11",
        "DecodeLiteralBlockSwitch",
        "StoreSymbolWithContext",
        "BrotliOptimizeHistograms",
        "PrepareH5",
        "InitZopfliCostModel.isra.17",
        "BrotliHistogramReindexCommand",
        "PrepareH6",
        "StoreVarLenUint8",
        "BrotliBuildHuffmanTable",
        "StoreCommands",
        "BrotliCompressFragmentTwoPass",
        "StoreSymbol",
        "ReadHuffmanCode",
        "BrotliEncoderCompressStream",
        "ShouldCompress",
        "BrotliAllocate",
        "BrotliSplitBlock",
        "PrepareH35",
        "ClusterBlocksLiteral",
        "DecodeMetaBlockLength",
        "BrotliCompressFragmentFastImpl15",
        "EmitUncompressedMetaBlock",
        "BlockSplitterFinishBlockCommand",
        "BrotliWarmupBitReader",
        "InitBlockSplitterLiteral.constprop.5",
        "BrotliCompressFragmentTwoPassImpl13.isra.6",
        "BlockSplitterFinishBlockLiteral",
        "BrotliDecoderStateMetablockBegin",
        "BrotliClusterHistogramsDistance",
        "BrotliHistogramBitCostDistanceLiteral.part.1",
        "BrotliCompressFragmentFastImpl9",
        "BrotliCreateHqZopfliBackwardReferences",
        "BrotliDecoderDestroyInstance",
        "ProcessCommands",
        "BrotliCompressFragmentTwoPassImpl11.isra.4",
        "GetHashTable",
        "WrapRingBuffer",
        "BrotliInitMemoryManager",
        "BrotliCompareAndPushToQueueCommand",
        "BrotliEstimateBitCostsForLiterals",
        "BrotliIsMostlyUTF8",
        "BrotliInitEncoderDictionary",
        "SafeDecodeLiteralBlockSwitch",
        "BrotliStoreMetaBlock",
        "BrotliHistogramReindexDistance",
        "EncodeData",
        "BrotliHistogramCombineCommand",
        "BrotliTransformDictionaryWord",
        "BrotliCreateHuffmanTree",
        "StoreTrivialContextMap.part.5",
        "BrotliFindAllStaticDictionaryMatches",
        "SafeDecodeSymbol",
        "BrotliBuildHistogramsWithContext",
        "DecodeCommandBlockSwitch",
        "BrotliCompareAndPushToQueueLiteral",
        "BrotliDestroyBlockSplit",
        "BrotliEncoderCompress",
        "BrotliPopulationCostDistance",
        "BuildAndStoreCommandPrefixCode",
        "ClusterBlocksDistance",
        "BrotliHistogramRemapLiteral",
        "BrotliEncoderDestroyInstance",
        "BrotliCompressFragmentTwoPassImpl12.isra.5",
        "BrotliHistogramReindexLiteral",
        "BrotliDecoderStateInit",
        "RefineEntropyCodesDistance.constprop.16",
        "BrotliBuildSimpleHuffmanTable",
        "BrotliDecoderStateCleanupAfterMetablock",
        "BlockSplitterAddSymbolCommand",
        "BrotliCompressFragmentTwoPassImpl8.isra.1",
        "InjectFlushOrPushOutput",
        "BrotliDecoderDecompress",
        "BuildAndStoreBlockSplitCode",
        "DecodeContextMap",
        "BrotliCompressFragmentTwoPassImpl14.isra.7",
        "BrotliHistogramBitCostDistanceDistance.part.3",
        "WriteMetaBlockInternal",
        "GetBrotliStorage",
        "BrotliCompressBufferQuality10",
        "PrepareH41",
        "BrotliCreateBackwardReferences",
        "DecodeDistanceBlockSwitch",
        "BrotliCompressFragmentTwoPassImpl15.isra.8",
        "BrotliBuildMetaBlock",
        "BrotliCompressFragmentTwoPassImpl16.isra.9",
        "BrotliInitZopfliNodes",
        "BrotliDecoderCreateInstance",
        "BrotliCompressFragmentTwoPassImpl10.isra.3",
        "BrotliBuildMetaBlockGreedy",
        "BrotliClusterHistogramsCommand",
        "BrotliHistogramCombineLiteral",
        "BrotliPopulationCostCommand",
        "BrotliZopfliCreateCommands",
        "BrotliZopfliComputeShortestPath",
        "BrotliEnsureRingBuffer",
        "BrotliStoreMetaBlockHeader",
        "BrotliEncoderCreateInstance",
        "BrotliBuildCodeLengthsHuffmanTable",
        "BuildHistograms.constprop.6",
        "StoreDataWithHuffmanCodes",
        "ChooseDistanceParams",
        "BrotliCompressFragmentFastImpl13",
        "InitBlockSplitterCommand.constprop.4",
        "BrotliHistogramRemapDistance",
        "ZopfliCostModelSetFromLiteralCosts",
        "BrotliStoreMetaBlockFast",
        "BrotliStoreMetaBlockHeader_0",
        "BrotliClusterHistogramsLiteral",
        "BrotliInitDistanceParams",
        "BrotliGetDictionary",
        "BrotliInitBlockSplit",
        "BrotliDefaultAllocFunc_0",
        "BrotliDefaultAllocFunc",
        "BrotliHistogramBitCostDistanceDistance",
        "BrotliFree",
        "BrotliHistogramBitCostDistanceCommand",
        "BrotliGetTransforms",
        "BrotliHistogramBitCostDistanceLiteral",
        "BrotliDefaultFreeFunc_0",
        "BrotliDefaultFreeFunc",
        "BrotliInitBitReader"
    ],
    "precomp___bzip2":
    [
        "bsPutUInt32",
        "bzopen_or_bzdopen",
        "BZ2_bzWrite",
        "BZ2_bzReadOpen",
        "BZ2_bzCompress",
        "BZ2_bzWriteClose",
        "BZ2_bzDecompress",
        "BZ2_hbAssignCodes",
        "BZ2_bzRead",
        "BZ2_bzReadClose",
        "BZ2_bzDecompressInit",
        "BZ2_bzBuffToBuffCompress",
        "BZ2_hbMakeCodeLengths",
        "BZ2_bzCompressInit",
        "BZ2_blockSort",
        "BZ2_decompress",
        "BZ2_bzdopen",
        "BZ2_bzBuffToBuffDecompress",
        "BZ2_bzwrite",
        "fallbackSort",
        "add_pair_to_block",
        "BZ2_bzDecompressEnd",
        "handle_compress.isra.2",
        "BZ2_hbCreateDecodeTables",
        "BZ2_compressBlock",
        "BZ2_indexIntoF",
        "BZ2_bzopen",
        "BZ2_bzread",
        "BZ2_bzWriteOpen",
        "BZ2_bzCompressEnd",
        "BZ2_bz__AssertH__fail",
        "BZ2_bzclose",
        "BZ2_bzWriteClose64"
    ],
    "precomp___libblosc":
    [
        "deflateResetKeep",
        "deflatePrime",
        "build_tree",
        "inflateCopy",
        "send_tree",
        "inflateInit2_",
        "deflateReset",
        "inflateSync",
        "inflateReset",
        "crc32_combine_",
        "inflateGetDictionary",
        "longest_match",
        "compress_block",
        "deflateParams",
        "deflateSetDictionary",
        "inflateEnd",
        "inflateInit_",
        "inflateSetDictionary",
        "_tr_stored_block",
        "fill_window",
        "deflate_fast",
        "inflate_table",
        "deflateCopy",
        "inflate_fast",
        "deflateEnd",
        "_tr_init",
        "inflate",
        "_tr_align",
        "deflate",
        "deflateInit_",
        "_tr_flush_block",
        "deflate_slow",
        "deflateInit2_",
        "deflate_stored"
    ],
    "precomp___minizip":
    [
        "lzma_decode",
        "bt_find_func",
        "alone_encoder_end",
        "BZ2_hbAssignCodes",
        "lzma_next_filter_init",
        "BZ2_bzBuffToBuffDecompress",
        "lzma_lzma_encoder_reset",
        "lz_decoder_end",
        "lzma_code",
        "lzma_lzma_lclppb_encode",
        "alone_encoder_init",
        "handle_compress.isra.2",
        "lzma_mf_hc3_find",
        "lzma_alone_decoder",
        "BZ2_bzDecompressEnd",
        "length_update_prices",
        "lzma_lzma_encode",
        "lzma_alone_decoder_init",
        "lz_encoder_end",
        "lzma_decoder_init",
        "lzma_lzma_props_decode",
        "BZ2_compressBlock",
        "hc_find_func",
        "lzma_lz_encoder_init",
        "bsPutUInt32",
        "decode_buffer",
        "lzma_alone_encoder",
        "lzma_lzma_decoder_create",
        "alone_decoder_end",
        "lzma_end",
        "lzma_lzma_props_encode",
        "lzma_mf_hc4_find",
        "lzma_lz_encoder_memusage",
        "lzma_properties_size",
        "length_encoder_reset",
        "lz_encoder_prepare",
        "lzma_mf_bt3_find",
        "lzma_strm_init",
        "BZ2_bzCompress",
        "lzma_lzma_encoder_memusage",
        "BZ2_hbMakeCodeLengths",
        "alone_encode",
        "lz_encoder_update",
        "lzma_lzma_encoder_create",
        "lzma_free",
        "lzma_mf_hc3_skip",
        "lzma_lzma_preset",
        "lzma_lzma_optimum_normal",
        "lzma_encode",
        "BZ2_indexIntoF",
        "BZ2_bzBuffToBuffCompress",
        "BZ2_bzCompressEnd",
        "lz_decode",
        "get_literal_price",
        "lzma_lzma_encoder_init",
        "lzma_lzma_optimum_fast",
        "lzma_lzma_lclppb_decode",
        "move_pos",
        "BZ2_blockSort",
        "lzma_decoder_reset",
        "lzma_alloc",
        "lzma_mf_bt2_find",
        "lzma_mf_hc4_skip",
        "lzma_mf_bt3_skip",
        "lzma_alloc_zero",
        "lz_encode",
        "BZ2_hbCreateDecodeTables",
        "lzma_mf_find",
        "alone_decode",
        "BZ2_decompress",
        "lzma_mf_bt4_find",
        "lzma_mf_bt2_skip",
        "lzma_next_filter_update",
        "lzma_mf_bt4_skip",
        "lzma_lzma_decoder_memusage",
        "BZ2_bzDecompressInit",
        "BZ2_bzCompressInit",
        "lzma_bufcpy",
        "bt_skip_func",
        "lzma_lz_decoder_init",
        "lzma_encoder_init",
        "lzma_lzma_decoder_init",
        "add_pair_to_block",
        "is_options_valid",
        "BZ2_bzDecompress",
        "lzma_lz_decoder_uncompressed",
        "lzma_lz_decoder_memusage",
        "lzma_properties_encode",
        "lzma_next_end",
        "lzma_lzma_decoder_memusage_nocheck"
    ],
    "precomp___xz":
    [
        "lzma_simple_props_decode",
        "lzma_alone_decoder_init",
        "lzma2_encode",
        "lzma_simple_powerpc_decoder_init",
        "lzma_mf_hc3_skip",
        "lzma_mf_bt3_find",
        "lzma_simple_powerpc_encoder_init",
        "lzma_index_memusage",
        "block_encoder_end",
        "lzma_end",
        "lzma_alloc",
        "lzma_free",
        "lzma_lz_encoder_init",
        "bt_find_func",
        "lzma_block_header_size",
        "lzma_crc32",
        "lzma_delta_coder_init",
        "lzma_sha256_init",
        "lzma_stream_header_decode",
        "lzma_lzma_decoder_memusage",
        "stream_encoder_update",
        "lzma_index_hash_append",
        "lzma_lzma_lclppb_encode",
        "lzma_check_init",
        "lzma_index_padding_size",
        "block_decoder_end",
        "lzma_block_header_encode",
        "stream_decode",
        "lzma_index_init",
        "lzma2_encoder_init",
        "lzma_lzma_decoder_init",
        "lzma_simple_sparc_decoder_init",
        "lzma_lzma_optimum_normal",
        "lz_decoder_end",
        "lzma_alone_encoder",
        "lzma_index_hash_init",
        "validate_chain.part.0",
        "lzma_mf_bt4_skip",
        "lzma_block_total_size",
        "lzma_stream_decoder_init",
        "lzma_stream_footer_decode",
        "hc_find_func",
        "lzma_outq_init",
        "lzma_stream_flags_compare",
        "index_stream_init",
        "alone_encode",
        "lzma_block_compressed_size",
        "lzma_lzma_encoder_create",
        "lzma_mf_hc4_find",
        "lzma_simple_ia64_encoder_init",
        "lz_decode",
        "lzma_lzma_preset",
        "lzma_simple_arm_encoder_init",
        "lzma_stream_decoder",
        "lzma_lzma_encode",
        "lzma_outq_memusage",
        "lzma_block_decoder",
        "lzma_sha256_finish",
        "lzma_block_uncomp_encode",
        "lzma_index_encoder_init",
        "lzma_raw_encoder_init",
        "index_tree_append",
        "lzma_index_stream_flags",
        "block_buffer_encode.part.1",
        "lzma_decoder_init",
        "stream_encode_mt",
        "lzma_sha256_update",
        "lzma_simple_arm_decoder_init",
        "lzma_index_iter_next",
        "lzma_next_filter_init",
        "lzma_alone_decoder",
        "lzma_index_hash_size",
        "lzma_bufcpy",
        "lzma_delta_decoder_init",
        "lzma_delta_coder_memusage",
        "lzma_mt_block_size",
        "simple_code",
        "stream_encoder_mt_end",
        "lzma_index_buffer_decode",
        "move_pos",
        "lzma_mf_bt4_find",
        "index_decoder_init",
        "lzma_lzma_props_decode",
        "delta_coder_end",
        "length_encoder_reset",
        "lzma_raw_coder_init",
        "lzma2_decoder_init",
        "lzma_filters_copy",
        "lzma_mf_find",
        "lzma_simple_x86_decoder_init",
        "lzma_index_hash_decode",
        "lz_encode",
        "lzma_lzma2_decoder_init",
        "lzma_index_stream_size",
        "index_decode",
        "worker_error.isra.2",
        "lzma_stream_encoder",
        "length_update_prices",
        "lzma_block_buffer_encode",
        "lzma_block_encoder",
        "lzma_lzma_encoder_reset",
        "lzma_block_unpadded_size.part.0",
        "lzma_lzma_encoder_init",
        "lzma_block_decoder_init",
        "get_literal_price",
        "lzma_index_encoder",
        "lzma_lzma_encoder_memusage",
        "lzma_index_file_size",
        "lzma_encode",
        "lzma_index_end",
        "lzma_stream_footer_encode",
        "lzma_mf_bt2_skip",
        "alone_encoder_end",
        "lzma_lzma_optimum_fast",
        "lzma_outq_end",
        "lzma_delta_encoder_init",
        "threads_stop.isra.3",
        "lzma_block_buffer_bound64",
        "lzma_easy_preset",
        "index_tree_node_end",
        "stream_encode",
        "lzma_simple_sparc_encoder_init",
        "index_cat_helper",
        "lzma_block_encoder_init",
        "lzma_lzma_lclppb_decode",
        "alone_encoder_init",
        "index_init_plain",
        "block_encode",
        "iter_set_info",
        "lzma_simple_x86_encoder_init",
        "lzma_index_size",
        "threads_end.isra.6",
        "lzma_crc64",
        "lzma_check_update",
        "index_encode",
        "lzma_outq_is_readable",
        "lzma_next_filter_update",
        "lzma2_decode",
        "lzma_filter_flags_encode",
        "lzma_lz_encoder_memusage",
        "lzma_vli_decode",
        "lzma_encoder_init",
        "lz_encoder_update",
        "lzma_mf_hc3_find",
        "lzma_index_append",
        "lzma_index_stream_padding",
        "get_options",
        "lzma_lzma2_props_decode",
        "lzma_simple_armthumb_decoder_init",
        "lzma_index_buffer_encode",
        "lzma_strm_init",
        "lzma_index_decoder",
        "lzma_alloc_zero",
        "lzma_delta_props_decode",
        "lzma_filter_flags_decode",
        "lzma_vli_size",
        "lzma_filters_update",
        "lzma_raw_coder_memusage",
        "lzma_outq_read",
        "lzma_stream_header_encode",
        "transform",
        "alone_decoder_end",
        "lzma_decode",
        "lzma_vli_encode",
        "lzma_get_progress",
        "simple_coder_end",
        "lzma_lzma2_encoder_init",
        "lzma_stream_encoder_mt",
        "lzma_code",
        "index_tree_next",
        "lzma_raw_decoder_init",
        "lzma_raw_encoder",
        "stream_encoder_end",
        "lz_encoder_prepare",
        "lzma_lzma_props_encode",
        "x86_coder_init",
        "lzma_stream_encoder_mt_memusage",
        "lzma_lzma_decoder_create",
        "hash_append",
        "index_stream_end",
        "lzma_mf_bt3_skip",
        "index_decoder_memconfig",
        "lzma_index_cat",
        "lzma_next_end.part.0",
        "is_options_valid",
        "lzma_mf_hc4_skip",
        "lzma_properties_size",
        "lzma_index_iter_locate",
        "lzma2_decoder_end",
        "stream_decoder_end",
        "stream_encoder_init",
        "lzma2_encoder_end",
        "alone_decode",
        "lzma_lz_decoder_init",
        "index_decoder_end",
        "lzma_check_finish",
        "lzma_properties_decode",
        "worker_start",
        "lzma_properties_encode",
        "lzma_delta_props_encode",
        "lzma_raw_decoder",
        "copy_or_code",
        "decode_buffer",
        "free_properties.isra.0",
        "lzma_outq_get_buf",
        "lzma_decoder_reset",
        "bt_skip_func",
        "lz_encoder_end",
        "lzma_mf_bt2_find",
        "lzma_filter_flags_size",
        "lzma_block_header_decode",
        "lzma_lzma2_encoder_memusage",
        "lzma_simple_armthumb_encoder_init",
        "get_progress",
        "lzma_simple_coder_init",
        "block_decode",
        "lzma_index_dup",
        "stream_encoder_mt_init",
        "lzma_simple_ia64_decoder_init",
        "lzma_lzma2_decoder_memusage",
        "lzma_lz_decoder_uncompressed",
        "lzma_index_iter_init",
        "lzma_block_buffer_bound",
        "lzma_lz_decoder_memusage",
        "lzma_index_hash_end",
        "lzma_check_is_supported",
        "lzma_index_memused",
        "lzma_cputhreads",
        "lzma_raw_encoder_memusage",
        "lzma_physmem",
        "lzma_raw_decoder_memusage",
        "lzma_check_size",
        "lzma_index_prealloc",
        "lzma_block_unpadded_size",
        "lzma_next_end",
        "lzma_index_block_count",
        "lzma_lzma_decoder_memusage_nocheck"
    ],
    "precomp___zlib":
    [
        "inflatePrime",
        "fill_window",
        "_tr_align",
        "send_tree",
        "flush_pending",
        "inflateGetHeader",
        "deflateStateCheck",
        "adler32_combine_.part.0",
        "crc32_combine_",
        "read_buf",
        "inflateSyncPoint",
        "deflateEnd",
        "deflate_fast",
        "syncsearch",
        "inflateReset2",
        "deflatePrime",
        "deflateReset",
        "bi_flush",
        "inflateValidate",
        "deflatePending",
        "slide_hash",
        "inflate",
        "inflateEnd",
        "adler32_z",
        "inflateGetDictionary",
        "inflateInit_",
        "inflateSync",
        "updatewindow",
        "deflateBound",
        "inflateReset",
        "deflateGetDictionary",
        "deflateParams",
        "build_tree",
        "gf2_matrix_square",
        "_tr_init",
        "inflateCopy",
        "inflateInit2_",
        "inflate_fast",
        "deflate_stored",
        "deflateInit2_",
        "deflateCopy",
        "compress_block",
        "_tr_stored_block",
        "deflateSetHeader",
        "crc32_little",
        "deflateSetDictionary",
        "inflateMark",
        "bi_windup",
        "inflateStateCheck",
        "deflateTune",
        "inflateUndermine",
        "inflateCodesUsed",
        "scan_tree",
        "longest_match",
        "inflate_table",
        "deflate_slow",
        "pqdownheap",
        "deflateInit_",
        "_tr_flush_block",
        "inflateResetKeep",
        "deflate",
        "inflateSetDictionary",
        "deflateResetKeep"
    ],
    "precomp___zlib-ng":
    [
        "send_tree",
        "flush_pending",
        "bi_windup",
        "deflate_stored",
        "crc32_little",
        "read_buf",
        "deflateStateCheck",
        "syncsearch",
        "deflate_fast",
        "deflate_slow",
        "build_tree",
        "fill_window",
        "compress_block",
        "pqdownheap",
        "inflateStateCheck",
        "bi_flush",
        "scan_tree"
    ],
    "turbobench___brotli":
    [
        "BrotliHistogramRemapDistance",
        "WrapRingBuffer",
        "ComputeShortestPathFromNodes",
        "BrotliDecoderTakeOutput",
        "BrotliCompressFragmentFast",
        "WriteMetaBlockInternal",
        "PrepareH65",
        "BrotliEncoderDestroyInstance",
        "ChooseDistanceParams",
        "BrotliCompressFragmentTwoPassImpl10.isra.3",
        "BrotliCompressBufferQuality10",
        "ShouldMergeBlock",
        "BrotliCreateHqZopfliBackwardReferences",
        "BrotliEstimateBitCostsForLiterals",
        "ClusterBlocksDistance",
        "BrotliCompressFragmentFastImpl13",
        "SafeDecodeLiteralBlockSwitch",
        "CopyUncompressedBlockToOutput",
        "BrotliCreateBackwardReferences",
        "BrotliHistogramReindexCommand",
        "GetBrotliStorage",
        "BrotliDecoderHuffmanTreeGroupInit",
        "BrotliCompressFragmentFastImpl11",
        "PrepareH6",
        "BrotliStoreMetaBlockHeader_0",
        "BrotliHistogramBitCostDistanceLiteral.part.1",
        "BrotliStoreMetaBlockTrivial",
        "PrepareH41",
        "StoreTrivialContextMap.part.5",
        "EmitUncompressedMetaBlock",
        "StoreSymbol",
        "BlockSplitterAddSymbolDistance",
        "SafeProcessCommands",
        "InitBlockSplitterCommand.constprop.4",
        "StoreCommands",
        "BrotliDecoderStateCleanupAfterMetablock",
        "BrotliWarmupBitReader",
        "ClusterBlocksCommand",
        "BrotliBuildHuffmanTable",
        "BrotliHistogramBitCostDistanceCommand.part.2",
        "BlockSplitterFinishBlockCommand",
        "PrepareH55",
        "BrotliStoreMetaBlockFast",
        "BrotliCompareAndPushToQueueLiteral",
        "PrepareH35",
        "BrotliHistogramRemapLiteral",
        "BrotliCompressFragmentTwoPassImpl14.isra.7",
        "BuildAndStoreLiteralPrefixCode",
        "BrotliClusterHistogramsCommand",
        "BlockSplitterFinishBlockLiteral",
        "BrotliDecoderStateInit",
        "EmitUncompressedMetaBlock_0",
        "StoreVarLenUint8",
        "BlockSplitterAddSymbolLiteral",
        "BrotliFindAllStaticDictionaryMatches",
        "BrotliIsMostlyUTF8",
        "DecodeVarLenUint8.isra.6",
        "EncodeData",
        "BrotliEncoderCompress",
        "BrotliCreateZopfliBackwardReferences",
        "BrotliCompressFragmentTwoPassImpl15.isra.8",
        "GetHashTable",
        "BrotliWriteHuffmanTree",
        "BrotliCompressFragmentTwoPassImpl17.isra.10",
        "PrepareH5",
        "PrepareH40",
        "ShouldCompress",
        "BrotliClusterHistogramsLiteral",
        "BrotliCreateHuffmanTree",
        "BrotliEncoderCreateInstance",
        "BrotliPopulationCostDistance",
        "BrotliBuildCodeLengthsHuffmanTable",
        "RefineEntropyCodesLiteral.constprop.6",
        "BrotliStoreMetaBlockHeader",
        "BrotliPopulationCostCommand",
        "BrotliBuildHistogramsWithContext",
        "BuildAndStoreHuffmanTree",
        "RefineEntropyCodesDistance.constprop.16",
        "BlockSplitterAddSymbolCommand",
        "BrotliCompressFragmentFastImpl15",
        "BrotliStoreMetaBlock",
        "BrotliHistogramBitCostDistanceDistance.part.3",
        "BrotliCompressFragmentTwoPassImpl9.isra.2",
        "BrotliHistogramReindexLiteral",
        "ReadHuffmanCode",
        "DecodeMetaBlockLength",
        "BrotliInitEncoderDictionary",
        "BrotliCompressFragmentTwoPassImpl12.isra.5",
        "BrotliCompressFragmentTwoPassImpl16.isra.9",
        "StoreDataWithHuffmanCodes",
        "BrotliZopfliComputeShortestPath",
        "BrotliHistogramReindexDistance",
        "BrotliInitDistanceParams",
        "BrotliPopulationCostLiteral",
        "BrotliBuildMetaBlockGreedy",
        "BrotliEnsureRingBuffer",
        "ComputeDistanceCost",
        "BrotliDecoderDecompressStream",
        "UpdateNodes",
        "BlockSplitIteratorNext",
        "BlockSplitterFinishBlockDistance",
        "ProcessCommands",
        "PrepareH42",
        "BrotliCompressFragmentFastImpl9",
        "BrotliOptimizeHuffmanCountsForRle",
        "EvaluateNode.constprop.20",
        "BrotliHistogramRemapCommand",
        "BrotliInitMemoryManager",
        "BrotliDecoderCreateInstance",
        "SafeDecodeSymbol",
        "BrotliCompareAndPushToQueueCommand",
        "BuildAndStoreBlockSwitchEntropyCodes",
        "DecodeContextMap",
        "BrotliInitZopfliNodes",
        "BrotliDecoderSetParameter",
        "BuildAndStoreCommandPrefixCode",
        "SafeDecodeCommandBlockSwitch",
        "BrotliBuildSimpleHuffmanTable",
        "InverseMoveToFrontTransform",
        "BrotliDecoderDecompress",
        "BrotliHistogramCombineLiteral",
        "RefineEntropyCodesCommand.constprop.11",
        "BrotliClusterHistogramsDistance",
        "BrotliDestroyBlockSplit",
        "BrotliDecoderDestroyInstance",
        "DecodeDistanceBlockSwitch",
        "InitZopfliCostModel.isra.17",
        "BrotliHistogramCombineCommand",
        "BrotliCompressFragmentTwoPassImpl8.isra.1",
        "BrotliBuildMetaBlock",
        "ZopfliCostModelSetFromLiteralCosts",
        "EncodeWindowBits",
        "ClusterBlocksLiteral",
        "BrotliOptimizeHistograms",
        "BrotliCalculateRingBufferSize",
        "BrotliDecoderStateCleanup",
        "StoreSymbolWithContext",
        "BrotliSplitBlock",
        "WriteRingBuffer",
        "BrotliCompressFragmentTwoPass",
        "EncodeContextMap",
        "SetCost",
        "BrotliEncoderCompressStream",
        "DecodeCommandBlockSwitch",
        "BuildAndStoreBlockSplitCode",
        "BrotliCompareAndPushToQueueDistance",
        "SafeDecodeDistanceBlockSwitch",
        "StoreCompressedMetaBlockHeader",
        "UpdateBits.constprop.0",
        "InjectFlushOrPushOutput",
        "InitBlockSplitterDistance.constprop.3",
        "BrotliStoreUncompressedMetaBlock",
        "BrotliCompressFragmentTwoPassImpl13.isra.6",
        "BrotliStoreHuffmanTree",
        "BrotliSetDepth",
        "BrotliBuildAndStoreHuffmanTreeFast",
        "BrotliAllocate",
        "BrotliCompressFragmentTwoPassImpl11.isra.4",
        "BrotliHistogramCombineDistance",
        "ContextBlockSplitterFinishBlock",
        "BrotliConvertBitDepthsToSymbols",
        "BuildHistograms.constprop.6",
        "DecodeLiteralBlockSwitch",
        "BrotliDecoderStateMetablockBegin",
        "InitBlockSplitterLiteral.constprop.5",
        "BrotliZopfliCreateCommands",
        "BrotliTransformDictionaryWord",
        "BrotliDefaultFreeFunc",
        "BrotliGetDictionary",
        "BrotliInitBlockSplit",
        "BrotliDefaultAllocFunc_0",
        "BrotliDefaultAllocFunc",
        "BrotliHistogramBitCostDistanceLiteral",
        "BrotliHistogramBitCostDistanceDistance",
        "BrotliFree",
        "BrotliHistogramBitCostDistanceCommand",
        "BrotliGetTransforms",
        "BrotliDefaultFreeFunc_0",
        "BrotliInitBitReader"
    ],
    "turbobench___bsc":
    [
        "bsc_lzp_decompress",
        "bsc_qlfc_static_decode_block",
        "bsc_detect_segments",
        "_Z22bsc_decompress_inplacePhiii",
        "_Z24bsc_qlfc_adaptive_decodePKhPhP20QlfcStatisticalModel",
        "bsc_init",
        "_Z25bsc_coder_compress_serialPKhPhii",
        "bsc_detect_contextsorder",
        "bsc_reorder_reverse",
        "_Z24bsc_qlfc_adaptive_encodePKhPhS1_iiP20QlfcStatisticalModel",
        "bsc_adler32",
        "_Z26bsc_qlfc_init_static_modelv",
        "_Z26bsc_detect_segments_serialP20BscSegmentationModelPKhi",
        "bsc_qlfc_static_encode_block",
        "_Z23bsc_estimate_reorderingP18BscReorderingModeli",
        "bsc_qlfc_adaptive_decode_block",
        "_Z20bsc_lzp_decode_blockPKhS0_Phii",
        "_Z18bsc_qlfc_transformPKhPhiS1_",
        "_Z23bsc_lzp_compress_serialPKhPhiii",
        "bsc_lzp_compress",
        "bsc_bwt_decode",
        "divbwt",
        "_Z22bsc_qlfc_static_encodePKhPhS1_iiP20QlfcStatisticalModel",
        "_Z20bsc_compress_inplacePhiiiiii",
        "bsc_compress",
        "bsc_store",
        "bsc_coder_compress",
        "_ZL22bsc_unbwt_biPSI_serialPhPjii",
        "_ZL26bsc_estimate_contextsorderPKhi",
        "_Z29bsc_detect_segments_recursiveP20BscSegmentationModelS0_PKhiPiii",
        "_Z22bsc_coder_encode_blockPKhPhiii",
        "bsc_qlfc_adaptive_encode_block",
        "_Z22bsc_coder_decode_blockPKhPhi",
        "_Z22bsc_qlfc_static_decodePKhPhP20QlfcStatisticalModel",
        "bsc_detect_recordsize",
        "bsc_coder_decompress",
        "_Z20bsc_lzp_encode_blockPKhS0_PhS1_ii",
        "divsufsort",
        "_Z22bsc_coder_split_blocksPKhiiPiS1_",
        "bsc_bwt_encode",
        "bsc_reorder_forward",
        "bsc_block_info",
        "_ZL25bsc_unbwt_mergedTL_serialPhPjii",
        "bsc_decompress",
        "bsc_zero_malloc",
        "bsc_platform_init",
        "bsc_free",
        "bsc_coder_init",
        "_Z19bsc_qlfc_init_modelP20QlfcStatisticalModel",
        "bsc_qlfc_init",
        "bsc_malloc"
    ],
    "turbobench___bzip2":
    [
        "BZ2_bzread",
        "BZ2_bzWrite",
        "BZ2_bzDecompressInit",
        "BZ2_bzReadClose",
        "BZ2_bzBuffToBuffCompress",
        "BZ2_indexIntoF",
        "bzopen_or_bzdopen",
        "handle_compress.isra.2",
        "BZ2_bzclose",
        "BZ2_hbMakeCodeLengths",
        "BZ2_bzWriteOpen",
        "BZ2_bzReadOpen",
        "BZ2_bzBuffToBuffDecompress",
        "BZ2_bzCompress",
        "add_pair_to_block",
        "BZ2_decompress",
        "BZ2_bzopen",
        "BZ2_bz__AssertH__fail",
        "BZ2_bzRead",
        "bsPutUInt32",
        "BZ2_hbAssignCodes",
        "BZ2_hbCreateDecodeTables",
        "BZ2_compressBlock",
        "BZ2_bzWriteClose",
        "BZ2_bzWriteClose64",
        "BZ2_bzCompressEnd",
        "BZ2_bzDecompress",
        "BZ2_bzDecompressEnd",
        "BZ2_bzwrite",
        "BZ2_bzdopen",
        "fallbackSort",
        "BZ2_blockSort",
        "BZ2_bzCompressInit"
    ],
    "turbobench___libblosc":
    [
        "HUF_decompress1X1_DCtx_wksp",
        "LZ4_saveDictHC",
        "LZ4_decompress_fast_continue",
        "ZSTD_createCDict_advanced",
        "ZSTD_selectEncodingType",
        "ZSTD_initCStream_usingCDict",
        "ZSTD_sizeof_DCtx",
        "XXH64_reset",
        "ZSTD_seqToCodes",
        "ZSTD_fillHashTable",
        "ZSTD_freeCCtxParams",
        "LZ4_compress_continue",
        "ZSTD_decompress_usingDict",
        "HUF_decompress4X1_DCtx_wksp",
        "FSE_buildCTable",
        "ZSTD_initStaticCDict",
        "ZSTD_decompressBound",
        "ZSTD_initStaticDDict",
        "ZSTD_estimateCDictSize",
        "ZSTD_initCStream_srcSize",
        "LZ4_memcpy_using_offset",
        "FSE_compress_wksp",
        "ZSTDMT_compress_advanced_internal",
        "ZSTD_noCompressLiterals",
        "ZSTD_decodeSeqHeaders",
        "ZSTD_initCStream_advanced",
        "XXH32_update",
        "ZSTD_BtFindBestMatch_selectMLS.constprop.9",
        "ZSTD_DUBT_findBestMatch",
        "HUF_decompress4X_usingDTable_bmi2",
        "ZSTD_ldm_blockCompress",
        "LZ4_decompress_fast_extDict",
        "ZSTD_endStream",
        "LZ4_resetStream_fast",
        "LZ4_compressHC2_withStateHC",
        "ZSTD_compressBlock_btlazy2",
        "ZSTD_getCParamsFromCDict",
        "ZSTD_compress",
        "ZSTD_compressBegin_advanced_internal",
        "HUF_decompress4X2_usingDTable",
        "HUF_decompress4X_hufOnly_wksp",
        "HUF_compress4X_wksp",
        "ZSTDMT_sizeof_CCtx",
        "ZSTD_initCStream",
        "ZSTD_compressLiterals",
        "ZSTD_compressBlock_btopt",
        "FSE_optimalTableLog_internal",
        "ZSTD_CCtx_refPrefix_advanced",
        "ZSTD_createCStream",
        "LZ4_loadDictHC",
        "HUF_decodeStreamX2",
        "LZ4_decompress_safe_forceExtDict",
        "ZSTD_CCtx_reset",
        "ZSTD_CCtx_setParameter",
        "HIST_count",
        "ZSTDMT_flushProduced",
        "LZ4_compress_fast_extState_fastReset",
        "HUF_decompress1X2_usingDTable_internal_bmi2",
        "LZ4_decompress_safe_continue",
        "LZ4_compress_destSize",
        "deflateInit_",
        "ZSTD_estimateDStreamSize_fromFrame",
        "HUF_decompress1X_DCtx_wksp",
        "ZSTD_createDDict_advanced",
        "LZ4_saveDict",
        "inflate_table",
        "deflate_stored",
        "deflate",
        "ZSTD_compressBlock_doubleFast_extDict_generic",
        "deflate_fast",
        "HUF_compress1X_repeat",
        "ZSTD_compressBlock_btopt_dictMatchState",
        "HUF_decompress4X2_DCtx_wksp",
        "LZ4_compress_fast_extState",
        "ZSTD_createCDict_byReference",
        "HUF_compress1X_usingCTable_internal_default",
        "HUF_readDTableX1",
        "ZSTDMT_compressionJob",
        "LZ4_compress_HC_continue_destSize",
        "LZ4_compressHC2",
        "ZSTD_compressBlock_lazy_dictMatchState",
        "ZSTD_adjustCParams",
        "HUF_decompress4X1",
        "crc32_combine_",
        "LZ4_resetStreamStateHC",
        "ZSTD_createDStream",
        "LZ4_resetStreamHC_fast",
        "HUF_decompress1X_DCtx",
        "ZSTD_execSequenceEnd.isra.3",
        "ZSTD_compressStream",
        "ZSTD_compressBlock_btultra_extDict",
        "ZSTD_estimateCStreamSize_usingCParams",
        "ZSTDMT_compressStream",
        "HUF_compress1X",
        "ZSTD_freeDCtx",
        "HUF_decompress1X1_DCtx_wksp_bmi2",
        "HUF_readCTable",
        "ZSTD_CCtx_refCDict",
        "ZSTD_compressBlock_doubleFast_extDict",
        "build_tree",
        "inflateGetDictionary",
        "ZSTD_checkCParams",
        "ZSTD_loadDEntropy",
        "inflateInit_",
        "LZ4_compress_fast_force",
        "ZSTDMT_freeBufferPool",
        "ZSTD_resetDStream",
        "FSE_compress",
        "LZ4_attach_dictionary",
        "ZSTD_getFrameContentSize",
        "FSE_normalizeCount",
        "HIST_count_parallel_wksp",
        "deflate_slow",
        "ZSTD_compressBlock_fast_extDict_generic",
        "ZSTD_count_2segments_2",
        "_tr_init",
        "inflateEnd",
        "HUF_readDTableX1_wksp",
        "ZSTDMT_CCtxParam_setMTCtxParameter",
        "inflateCopy",
        "ZSTD_buildSeqTable",
        "ZSTD_resetCCtx_internal",
        "ZSTD_decompressBlock",
        "ZSTD_buildFSETable",
        "ZSTD_ldm_getTableSize",
        "HUF_decompress4X_hufOnly_wksp_bmi2",
        "ZSTD_decompressBlock_internal",
        "LZ4_decompress_safe",
        "LZ4_decompress_safe_usingDict",
        "ZSTD_compressBlock_btlazy2_dictMatchState",
        "deflateInit2_",
        "ZSTD_initStats_ultra",
        "ZSTD_initCStream_usingCDict_advanced",
        "ZSTD_estimateCStreamSize",
        "ZSTD_decompressDCtx",
        "HUF_decompress4X_hufOnly",
        "ZSTD_NCountCost",
        "ZSTD_insertAndFindFirstIndexHash3",
        "LZ4_initStream",
        "ZSTD_DCtx_loadDictionary_advanced",
        "ZSTD_BtFindBestMatch_dictMatchState_selectMLS.constprop.8",
        "deflateEnd",
        "ZSTD_getDictID_fromFrame",
        "ZSTD_DCtx_setMaxWindowSize",
        "inflateReset",
        "HUF_decompress4X2_usingDTable_internal_bmi2",
        "ZSTD_DCtx_refDDict",
        "HUF_decompress1X2",
        "ZSTD_decompress",
        "ZSTD_rescaleFreqs",
        "send_tree",
        "HUF_buildCTable_wksp",
        "LZ4_compress_HC_extStateHC_fastReset",
        "HUF_decompress1X1_usingDTable_internal_bmi2",
        "LZ4_decompress_safe_withPrefix64k",
        "LZ4_decompress_safe_partial",
        "ZSTD_resetCStream",
        "HUF_decompress4X2_usingDTable_internal_default",
        "ZSTD_compress2",
        "ZSTDMT_flushStream",
        "ZSTD_decodeLiteralsBlock",
        "HUF_decompress1X2_DCtx_wksp",
        "HUF_decompress4X1_usingDTable_internal_default",
        "HUF_compress2",
        "ZSTD_insertAndFindFirstIndex_internal.isra.1",
        "deflateReset",
        "ZSTD_createCCtx",
        "inflateBack",
        "ZSTD_compress_usingDict",
        "ZSTD_updateStats",
        "XXH64_digest",
        "ZSTD_compressBlock_doubleFast",
        "ZSTD_compressBlock_lazy",
        "ZSTD_compress_advanced_internal",
        "ZSTD_estimateCCtxSize_usingCParams",
        "ZSTDMT_compressStream_generic",
        "ZSTD_free",
        "ZSTD_encodeSequences",
        "inflateSync",
        "HUF_compress1X_usingCTable_internal_bmi2",
        "ZSTDMT_initCStream_advanced",
        "HUF_decompress4X2",
        "ZSTD_compressBlock_internal",
        "LZ4_compressHC_continue",
        "LZ4_decompress_safe_withSmallPrefix",
        "ZSTD_compressBlock_lazy_extDict",
        "fill_window",
        "ZSTDMT_initCStream",
        "ZSTD_count_0",
        "ZSTD_fillDoubleHashTable",
        "HUF_decompress4X1_usingDTable_internal_bmi2",
        "ZSTD_findDecompressedSize",
        "compress2",
        "ZSTD_DCtx_refPrefix_advanced",
        "ZSTD_decompressSequences_bmi2.constprop.9",
        "inflateInit2_",
        "ZSTD_ldm_adjustParameters",
        "LZ4_compressHC_withStateHC",
        "ZSTDMT_initCStream_usingCDict",
        "compress_block",
        "ZSTD_compress_usingCDict_advanced",
        "ZSTD_cParam_getBounds",
        "ZSTD_getSequences",
        "HIST_count_wksp",
        "FSE_writeNCount",
        "LZ4_createHC",
        "LZ4_decompress_fast_usingDict",
        "ZSTD_storeSeq",
        "ZSTD_updateRep",
        "HUF_compress4X_repeat",
        "ZSTD_compressBegin_usingCDict_advanced",
        "ZSTD_count_2segments",
        "HUF_compress1X_wksp",
        "ZSTD_count_2segments_1",
        "ZSTD_compressBlock_btopt_extDict",
        "ZSTD_createDCtx",
        "HUF_decompress",
        "_tr_flush_block",
        "HUF_readDTableX2",
        "HUF_writeCTable",
        "HUF_readStats",
        "XXH64_update",
        "LZ4_compress_HC_continue",
        "LZ4_createStreamHC",
        "ZSTD_sizeof_CCtx",
        "HUF_decompress4X2_DCtx",
        "ZSTD_compressBlock_fast_dictMatchState",
        "ZSTD_ldm_skipSequences",
        "compress",
        "HUF_compress",
        "LZ4_loadDict",
        "HUF_decompress1X2_DCtx",
        "ZSTDMT_initCStream_internal",
        "ZSTD_buildCTable",
        "ZSTD_compressBlock_lazy2_extDict",
        "ZSTD_count",
        "ZSTD_initDStream_usingDict",
        "ZSTD_compressBlock_fast_extDict",
        "ZSTD_compressBlock_doubleFast_dictMatchState",
        "ZSTD_initCStream_internal",
        "ZSTD_BtFindBestMatch_extDict_selectMLS.constprop.7",
        "ZSTD_freeDDict",
        "deflateParams",
        "ZSTD_HcFindBestMatch_dictMatchState_selectMLS.constprop.5",
        "ZSTD_checkContinuity",
        "HUF_compressCTable_internal",
        "ZSTD_createDCtx_advanced",
        "inflateSetDictionary",
        "HIST_count_simple",
        "ZSTD_compress_advanced",
        "ZSTD_compressBlock_lazy2_dictMatchState",
        "ZSTD_estimateCStreamSize_usingCCtxParams",
        "ZSTD_decompressBegin_usingDict",
        "HUF_decompress4X_usingDTable",
        "HUF_decompress1X2_usingDTable_internal_default",
        "ZSTD_encodeSequences_bmi2",
        "ZSTD_count_2segments_0",
        "ZSTD_CCtx_loadDictionary_advanced",
        "FSE_compress2",
        "ZSTD_decompressBegin_usingDDict",
        "inflate_fast",
        "ZSTD_decompress_usingDDict",
        "deflateResetKeep",
        "ZSTD_decompressStream",
        "ZSTDMT_resetCStream",
        "FSE_buildCTable_wksp",
        "ZSTD_initDStream_usingDDict",
        "ZSTD_CCtxParams_init_advanced",
        "HUF_decompress4X1_DCtx",
        "ZSTD_estimateCCtxSize",
        "BIT_initDStream",
        "deflatePrime",
        "LZ4_compress_fast",
        "FSE_decompress_usingDTable",
        "ZSTD_freeCDict",
        "ZSTD_copyCCtx",
        "ZSTD_compressBegin_usingDict",
        "ZSTDMT_freeCCtx",
        "ZSTD_safecopy",
        "deflateCopy",
        "ZSTD_compressBlock_btultra_dictMatchState",
        "ZSTDMT_endStream",
        "ZSTD_compressBlock_btultra2",
        "HIST_countFast_wksp",
        "FSE_decompress",
        "ZSTD_createCCtx_advanced",
        "HUF_decompress1X_usingDTable_bmi2",
        "ZSTD_copyDDictParameters",
        "FSE_buildDTable",
        "_tr_align",
        "ZSTDMT_createCompressionJob",
        "uncompress",
        "ZSTD_createCDict",
        "LZ4_createStream",
        "LZ4_compress_HC_destSize",
        "LZ4_compress_HC_extStateHC",
        "ZSTDMT_compressCCtx",
        "ZSTD_getCParamsFromCCtxParams",
        "LZ4_compress_forceExtDict",
        "HUF_decompress1X1_usingDTable_internal_default",
        "deflateSetDictionary",
        "ZSTD_compressBlock_greedy_dictMatchState",
        "ZSTD_DCtx_setParameter",
        "LZ4_compressHC",
        "ZSTD_compressBlock_lazy2",
        "LZ4_compress_HC",
        "LZ4_compressHC2_continue",
        "longest_match",
        "inflate",
        "LZ4_compress_fast_continue",
        "HUF_decompress1X1",
        "ZSTDMT_serialState_reset",
        "ZSTD_DCtx_reset",
        "LZ4_decompress_fast",
        "ZSTD_ldm_generateSequences",
        "LZ4HC_compress_generic_noDictCtx.part.0",
        "ZSTD_calloc",
        "ZSTD_compressContinue",
        "HUF_readDTableX2_wksp",
        "ZSTD_estimateCCtxSize_usingCCtxParams",
        "FSE_readNCount",
        "ZSTD_compressEnd",
        "ZSTD_compressStream2",
        "HUF_decompress4X1_usingDTable",
        "ZSTD_initCStream_usingDict",
        "FSE_decompress_wksp",
        "ZSTD_loadDictionaryContent",
        "ZSTD_count_2",
        "ZSTD_count_1",
        "ZSTD_CCtxParams_setParameter",
        "LZ4_compress",
        "ZSTD_cParam_withinBounds",
        "ZSTD_createCCtxParams",
        "ZSTDMT_freeCCtxPool",
        "LZ4_compressHC2_limitedOutput_continue",
        "ZSTDMT_compress_advanced",
        "FSE_buildCTable_rle",
        "ZSTD_decompressStream_simpleArgs",
        "ZSTDMT_updateCParams_whileCompressing",
        "ZSTD_updateTree",
        "ZSTD_compressBlock",
        "HUF_decodeStreamX1",
        "ZSTD_freeCCtx",
        "ZSTD_writeFrameHeader",
        "LZ4HC_compress_optimal",
        "HUF_decompress4X_DCtx",
        "_tr_stored_block",
        "ZSTD_compressBegin_advanced",
        "ZSTD_getcBlockSize",
        "ZSTD_compressStream2_simpleArgs",
        "ZSTD_referenceExternalSequences",
        "LZ4_compress_withState",
        "ZSTD_compressBlock_greedy",
        "ZSTD_compressBlock_btultra",
        "ZSTD_compressBlock_btlazy2_extDict",
        "HUF_decompress1X1_DCtx"
    ],
    "turbobench___libdeflate":
    [
        "deflate_compress_near_optimal",
        "libdeflate_gzip_compress",
        "deflate_write_uncompressed_block",
        "libdeflate_crc32",
        "build_decode_table",
        "libdeflate_deflate_compress",
        "do_end_block_check",
        "deflate_decompress_default",
        "deflate_flush_block",
        "libdeflate_deflate_compress_bound",
        "libdeflate_gzip_decompress_ex",
        "heapify_subtree",
        "libdeflate_aligned_malloc",
        "deflate_write_block_header",
        "libdeflate_alloc_compressor",
        "libdeflate_alloc_decompressor",
        "sort_symbols",
        "deflate_compress_greedy",
        "dispatch",
        "deflate_compress_lazy",
        "deflate_make_huffman_code",
        "deflate_decompress_bmi2",
        "_libdeflate_setup_cpu_features",
        "deflate_make_huffman_codes",
        "libdeflate_deflate_decompress",
        "libdeflate_free_decompressor",
        "libdeflate_aligned_free",
        "libdeflate_malloc",
        "libdeflate_gzip_decompress",
        "libdeflate_deflate_decompress_ex",
        "libdeflate_gzip_compress_bound",
        "libdeflate_free",
        "_libdeflate_deflate_get_compression_level",
        "libdeflate_free_compressor"
    ],
    "turbobench___lzbench":
    [
        "HUF_decompress1X2_DCtx",
        "BZ2_compressBlock",
        "BrotliSplitBlock",
        "ZSTD_decodeLiteralsBlock",
        "FL2_remainingOutputSize",
        "_ZN5lzham12symbol_codec6encodeEjRNS_33quasi_adaptive_huffman_data_modelE",
        "LzmaDec_DecodeToBuf",
        "ZSTD_DCtx_reset",
        "LZ4_decompress_fast_withPrefix64k",
        "ZSTD_compressBlock_btultra",
        "ZSTD_ldm_makeEntryAndInsertByTag.isra.5",
        "do_compress_18",
        "HUF_decompress1X2_usingDTable_internal_default",
        "EncodeData",
        "Lizard_compress_extState",
        "Bt3Zip_MatchFinder_Skip",
        "find_match_2",
        "HUF_decompress1X1",
        "HUF_decompress4X2_DCtx_wksp",
        "_ZN5lzham12lzcompressor9put_bytesEPKvj",
        "LzmaEnc_PrepareForLzma2",
        "LZ4_compressHC_continue_generic",
        "do_compress_6",
        "LZ4_resetStreamStateHC",
        "LZ_decompress_write",
        "ZSTD_makeCCtxParamsFromCParams",
        "LZ4_initStream",
        "lzo1z_decompress",
        "dispatch",
        "inflateMark",
        "ZSTD_compressBlock_btultra_extDict",
        "ZSTDMT_flushStream",
        "Lizard_resetStream_MinLevel",
        "ZSTD_initCStream_internal",
        "deflateSetHeader",
        "ZSTD_estimateCStreamSize_usingCParams",
        "LZ4HC_countPattern",
        "LzmaEnc_AllocAndInit",
        "inflatePrime",
        "LZ_compress_member_finished",
        "RMF_applyParameters",
        "HUF_decompress4X2_usingDTable_internal_default",
        "compress",
        "lzham_z_inflate",
        "ZSTD_compressStream",
        "BrotliCompressFragmentTwoPassImpl17.isra.10",
        "FL2_createDStreamMt",
        "deflatePrime",
        "ZSTD_frameHeaderSize_internal",
        "DICT_construct",
        "CreateBackwardReferencesNH2.isra.34",
        "LZ4_compress_HC_extStateHC",
        "UTIL_isDirectory",
        "ZSTD_createCStream_advanced",
        "BrotliDecoderCreateInstance",
        "BrotliEncoderCreateInstance",
        "_ZN5lzham18search_accelerator15add_bytes_beginEjPKh",
        "BZ2_blockSort",
        "MatchFinder_Init",
        "HUF_readStats",
        "deflate",
        "LZ_decompress_sync_to_member",
        "lzham_z_compress2",
        "BZ2_bzWrite",
        "StoreSymbol",
        "ZSTD_createDStream",
        "_ZN5lzham20lzham_lib_decompressEPvPKhPmPhS3_j",
        "lzo1z_999_compress",
        "_Z12lzham_assertPKcS0_j",
        "_ZN5lzhamL12check_paramsEPK23lzham_decompress_params.part.0",
        "Lizard_decompress_safe",
        "HUF_decompress4X2_DCtx",
        "LzmaEnc_SetProps",
        "_ZN5lzham12symbol_codec25arith_renorm_enc_intervalEv",
        "ComputeDistanceCost",
        "BrotliWriteHuffmanTree",
        "ZSTD_freeCCtx",
        "BrotliHistogramReindexLiteral",
        "BZ2_hbCreateDecodeTables",
        "BrotliStoreMetaBlockFast",
        "fse_init_decoder_table",
        "LZMA2_getUnpackSize",
        "_ZN5lzham6vectorIhE6appendERKS1_",
        "_ZNK5lzham12lzcompressor5state12get_lit_costERNS_7CLZBaseERKNS_18search_acceleratorEjjj",
        "Lizard_writeBlock",
        "BlockSplitterAddSymbolCommand",
        "ZSTD_compressStream2_simpleArgs",
        "LZ4_compress_limitedOutput_withState",
        "LZ4_compress_fast_continue",
        "ZSTD_DCtx_refPrefix",
        "do_compress_2",
        "BrotliStoreMetaBlock",
        "ZSTD_compressBlock_btlazy2_extDict",
        "lzfse_encode_matches.part.1",
        "BrotliSetDepth",
        "do_compress_7",
        "LZMA_initMatchesPos0",
        "BZ2_bzopen",
        "_ZN5lzham12lzcompressor13extreme_parseERNS0_18parse_thread_stateE",
        "DecodeCommandBlockSwitch",
        "SetPrices_3",
        "BrotliClusterHistogramsLiteral",
        "BrotliHistogramCombineLiteral",
        "libdeflate_deflate_compress",
        "FL2_createCStream",
        "PrepareH41",
        "_ZNK5lzham12lzcompressor5state13get_pred_charERKNS_18search_acceleratorEii",
        "LZ4_saveDict",
        "ZSTDMT_compressionJob",
        "LZMA_writeRem",
        "_ZN5lzham12lzcompressor4initERKNS0_11init_paramsE",
        "handle_compress.isra.2",
        "PrepareH42",
        "LzmaEnc_InitPrices",
        "do_compress",
        "LZ4_uncompress_unknownOutputSize",
        "deflateInit2_",
        "ZSTD_checkCParams",
        "_tr_align",
        "ZSTD_decompressBlock_internal",
        "_lzo1b_store_run",
        "LZ_compress_total_out_size",
        "LZe_get_match_pairs",
        "HUF_readDTableX1_wksp",
        "do_compress_8",
        "ZSTD_count",
        "Lizard_initBlock",
        "_ZN5lzham12symbol_codec13put_bits_initEj",
        "LZ4_memcpy_using_offset",
        "BuildAndStoreHuffmanTree",
        "compress2",
        "_ZN5lzham20lzham_lib_z_compressEPhPmPKhm",
        "ZSTD_initStaticCCtx",
        "BZ2_bzRead",
        "HUF_decompress4X_hufOnly",
        "inflateSetDictionary",
        "ZSTDMT_expandBufferPool",
        "ZSTD_CCtx_setParameter",
        "build_tree",
        "LzmaEnc_Encode2",
        "lzo1x_999_compress_dict",
        "ZSTD_CCtx_refPrefix_advanced",
        "ZSTDMT_waitForLdmComplete",
        "code_match_0",
        "BZ2_bzReadOpen",
        "_ZNK5lzham12lzcompressor5state20get_full_match_costsERNS_7CLZBaseEjPyjiij",
        "ComputeShortestPathFromNodes",
        "LZ4_compressHC2_limitedOutput_continue",
        "FL2_estimateCCtxSize_usingCCtx",
        "UpdateLastProcessedPos.isra.57",
        "deflateCopy",
        "LZe_sequence_optimizer",
        "LZMA_hashCreate",
        "LzmaEnc_WriteProperties",
        "ZSTD_initCStream_usingDict",
        "XXH64",
        "libdeflate_deflate_compress_bound",
        "BrotliCompressFragmentTwoPassImpl8.isra.1",
        "HUF_decompress1X_DCtx",
        "lzfse_encode_buffer_with_scratch",
        "_ZN5lzham23lzham_lib_compress_initEPK21lzham_compress_params",
        "better_match",
        "_ZN5lzham12lzcompressor5stateaSERKS1_",
        "ZSTDMT_compressStream",
        "lzfse_decode_buffer",
        "inflateCopy",
        "PrepareH55",
        "ZSTD_decompressContinue",
        "_ZN5lzham12symbol_codec6encodeEjRNS_18adaptive_bit_modelEb",
        "lzo1y_999_compress",
        "ZSTD_compress",
        "BZ2_bzDecompressInit",
        "_ZN5lzham12lzcompressor5state7advanceERNS_7CLZBaseERKNS_18search_acceleratorERKNS0_10lzdecisionE",
        "ZSTD_reduceTable",
        "ZSTD_compressBlock_btopt_extDict",
        "ZSTD_cParam_getBounds",
        "lzo1x_optimize",
        "MatchFinder_Init_3",
        "lzo1a_99_compress",
        "LZMA_encodeRepMatchShort",
        "Lizard_compress",
        "ZSTD_DCtx_refPrefix_advanced",
        "ClusterBlocksDistance",
        "ZSTD_selectEncodingType",
        "DecodeDistanceBlockSwitch",
        "ZSTD_compressBlock_doubleFast_extDict",
        "_tr_init",
        "ZSTD_decompress",
        "LZ4HC_compress_optimal",
        "BlockSplitIteratorNext",
        "libdeflate_gzip_compress",
        "BZ2_bzReadClose",
        "RMF_buildTable",
        "ZSTD_count_2segments",
        "ZSTD_compress_usingCDict_advanced",
        "gf2_matrix_square",
        "ZSTD_decompressStream",
        "code_match_1",
        "lzham_compress_memory",
        "LZ4_compressHC_limitedOutput_withStateHC",
        "LenPriceEnc_UpdateTables",
        "longest_match",
        "_ZN5lzham21lzham_lib_z_compress2EPhPmPKhmi",
        "FL2_estimateCCtxSize",
        "LZMA_reverseOptimalChain",
        "lzvn_encode_buffer",
        "lzo1z_999_compress_level",
        "LZ4_compressHC2_withStateHC",
        "crc32_little",
        "ZSTD_decompress_usingDict",
        "BrotliBuildHistogramsWithContext",
        "LzmaEncProps_Normalize",
        "ZSTD_count_1",
        "fse_init_encoder_table",
        "FL2_estimateCCtxSize_byParams",
        "ContextBlockSplitterFinishBlock",
        "ZSTDMT_updateCParams_whileCompressing",
        "LZ4_compress_HC_continue_destSize",
        "_ZN5lzham12lzcompressor16send_final_blockEv",
        "CreateBackwardReferencesNH55.isra.44",
        "ZSTD_dParam_getBounds",
        "FL2_beginFrame",
        "ZSTD_compressBegin_advanced",
        "do_compress_5",
        "LZMA_fillAlignPrices",
        "ZSTD_DCtx_setMaxWindowSize",
        "_ZN5lzham25lzham_lib_compress_deinitEPv",
        "lzo1b_99_compress",
        "BrotliCompareAndPushToQueueCommand",
        "HUF_decompress4X_usingDTable",
        "ZSTD_seqToCodes",
        "_ZN5lzham24lzham_lib_z_inflateResetEP14lzham_z_stream",
        "BrotliEncoderDestroyInstance",
        "Lizard_decompress_safe_continue",
        "ZSTDMT_flushStream_internal",
        "BlockSplitterFinishBlockLiteral",
        "_ZN5lzham12lzcompressor22enumerate_lz_decisionsEjRKNS0_5stateERNS_6vectorINS0_17lzpriced_decisionEEEjj",
        "BZ2_bzBuffToBuffDecompress",
        "ZSTD_compressBlock_btultra_dictMatchState",
        "FL2_freeDStream",
        "BrotliStoreMetaBlockHeader",
        "ZSTD_encodeSequences_bmi2",
        "ZSTD_estimateCStreamSize",
        "LZ4HC_setExternalDict",
        "lzham_z_deflateReset",
        "_ZN5lzham18search_acceleratorD2Ev",
        "HUF_decompress1X2",
        "lzham_z_deflateInit",
        "ZSTDMT_compress_advanced_internal",
        "ZSTD_decompressStream_simpleArgs",
        "BZ2_bzDecompress",
        "BrotliBuildAndStoreHuffmanTreeFast",
        "HUF_compress1X",
        "STORE_RUN_1",
        "_ZN5lzham12symbol_codec14start_decodingEPKhmbPFvmPvRS2_RmRbES3_",
        "FL2_freeCStream",
        "RMF_bitpackIntegrityCheck",
        "do_compress_13",
        "LZ4_compressHC2_continue",
        "PrepareH35",
        "LzmaDec_DecodeToDic",
        "ZSTD_insertAndFindFirstIndex_internal.isra.1",
        "_ZN5lzham12lzcompressor5state6encodeERNS_12symbol_codecERNS_7CLZBaseERKNS_18search_acceleratorERKNS0_10lzdecisionE",
        "LZMA2_hashAlloc",
        "RC_shiftLow",
        "LZ4_compressHC2",
        "ZopfliCostModelSetFromLiteralCosts",
        "PrepareH6",
        "BrotliCompressFragmentTwoPassImpl11.isra.4",
        "PrepareH54.isra.34",
        "ZSTD_initStaticDStream",
        "ZSTD_createCCtx_advanced",
        "BrotliCompressFragmentFastImpl15",
        "LZMA_getLiteralPriceMatched",
        "RMF_structuredInit",
        "FSE_buildCTable_rle",
        "uncompress",
        "_ZN5lzham22lzham_lib_z_deflateEndEP14lzham_z_stream",
        "_ZN5lzham12lzcompressor5flushE13lzham_flush_t",
        "BrotliHistogramBitCostDistanceDistance.part.3",
        "LZ_compress_close",
        "_ZN5lzham12lzcompressor12coding_stats5printEv",
        "BrotliCompressFragmentTwoPassImpl10.isra.3",
        "HUF_decompress4X1",
        "_ZN5lzham27lzham_lib_decompress_deinitEPv",
        "ZSTD_estimateCDictSize_advanced",
        "ZSTD_CCtx_refPrefix",
        "libdeflate_gzip_decompress_ex",
        "FL2_initCStream",
        "LZ4_compress_withState",
        "ZSTD_initStaticDCtx",
        "_ZN5lzham5crc32EjPKhm",
        "PrepareHROLLING_FAST.isra.38.part.39",
        "BZ2_indexIntoF",
        "lzo1z_999_compress_internal",
        "ZSTD_buildSeqTable",
        "ZSTDMT_initJobCCtxParams",
        "deflateInit_",
        "ZSTD_compressBegin_usingCDict_advanced",
        "_ZN5lzham24lzham_lib_z_inflateInit2EP14lzham_z_streami",
        "divsufsort",
        "MatchFinder_CheckLimits",
        "store_run",
        "do_compress_19",
        "find_match_1",
        "BrotliBuildCodeLengthsHuffmanTable",
        "lzham_compress_reinit",
        "Lizard_compress_MinLevel",
        "ZSTD_compressBlock_fast",
        "LzmaEnc_Construct",
        "lzo1c_999_compress",
        "RMF_recurseLists16",
        "HUF_readDTableX2_wksp",
        "_ZN5lzham18lzham_decompressor32reset_huffman_table_update_ratesEv",
        "BrotliCreateBackwardReferences",
        "lzo1b_8_compress",
        "HUF_compress",
        "LZMA_lengthStates_updatePrices.isra.2",
        "MatchFinder_Create",
        "HUF_decompress4X_usingDTable_bmi2",
        "RMF_freeBuilderTable",
        "do_compress_14",
        "LZ_decompress_reset",
        "lzham_z_inflateEnd",
        "DICT_getBlock",
        "ZSTD_decodeSeqHeaders",
        "ZSTD_reset_matchState",
        "ZSTD_fillDoubleHashTable",
        "BrotliCompareAndPushToQueueLiteral",
        "ZSTD_getFrameHeader_advanced",
        "inflateGetHeader",
        "LZ_compress_restart_member",
        "UpdateNodes",
        "_ZN5lzham22lzham_lib_z_uncompressEPhPmPKhm",
        "BrotliPopulationCostDistance",
        "do_compress_9",
        "LZMA_getRepMatch0Price",
        "LZMA2_decodeToBuf",
        "ZSTD_initCStream_srcSize",
        "_ZN5lzham12lzcompressor14compress_blockEPKvj",
        "deflateResetKeep",
        "FSE_writeNCount",
        "read_buf",
        "sort_symbols",
        "HUF_decompress1X1_DCtx_wksp",
        "ZSTD_updateRep",
        "fastlz_decompress",
        "deflate_make_huffman_code",
        "ZSTD_compressBlock_doubleFast_dictMatchState",
        "PrepareH40",
        "ZSTD_compressBlock_greedy",
        "ZSTD_createCDict_byReference",
        "_ZN5lzham12lzcompressor15send_sync_blockE13lzham_flush_t",
        "LZ4_compressHC",
        "LZMA2_decodeToDic",
        "lzham_decompress",
        "LZ4HC_compress_generic",
        "ZSTD_freeCStream",
        "LZ4_wildCopy32",
        "_ZN5lzham12symbol_codec13stop_encodingEb",
        "lzfse_backend_match",
        "STORE_RUN",
        "FL2_createCCtxMt",
        "LZMA_lengthStates_SetPrices",
        "inflate",
        "InjectFlushOrPushOutput",
        "HUF_compress1X_repeat",
        "_ZN5lzham17lzham_lib_z_errorEi",
        "SafeDecodeCommandBlockSwitch",
        "FL2_compressCurBlock",
        "FSE_compress2",
        "RMF_bruteForceBuffered",
        "HUF_decompress4X1_DCtx_wksp",
        "lzfse_encode_init",
        "lzfse_push_match",
        "ZSTD_compressBlock_btultra2",
        "LZMA_encodeRepMatchLong",
        "ZSTD_CCtxParams_setParameter",
        "ZSTD_DCtx_refDDict",
        "ZSTDMT_CCtxParam_setMTCtxParameter",
        "BrotliCompressFragmentTwoPassImpl13.isra.6",
        "RefineEntropyCodesDistance.constprop.16",
        "fallbackSort",
        "WriteRingBuffer",
        "sort_typeBstar.isra.2",
        "lzo1b_5_compress",
        "deflateTune",
        "lzham_decompress_init",
        "find_match_3",
        "fse_init_value_decoder_table",
        "Lizard_sizeofState",
        "HUF_buildCTable_wksp",
        "deflateEnd",
        "BrotliHistogramCombineCommand",
        "lzo1b_decompress",
        "_ZN5lzham12lzcompressor5stateD2Ev",
        "GetPrice_PureRep",
        "lzo1b_1_compress",
        "_ZN5lzham12lzcompressor10state_base15partial_advanceERKNS0_10lzdecisionE",
        "ZSTD_compressBlock_lazy_dictMatchState",
        "FL2_copyCStreamOutput",
        "BrotliHistogramCombineDistance",
        "BrotliOptimizeHistograms",
        "CreateBackwardReferencesNH65.isra.45",
        "FSE_compress_wksp",
        "CheckErrors.part.4",
        "deflate_slow",
        "ZSTD_count_2segments_2",
        "_ZN5lzham12symbol_codec14start_encodingEj",
        "GetHashTable",
        "LzmaDecode",
        "LZ4_decompress_safe_partial",
        "_ZN5lzham13prefix_coding19limit_max_code_sizeEjPhj",
        "ZSTD_createDDict_advanced",
        "lzo1c_compress",
        "HUF_writeCTable",
        "ClusterBlocksLiteral",
        "bzopen_or_bzdopen",
        "BZ2_bzCompressInit",
        "FL2_estimateCStreamSize_byParams",
        "_ZN5lzham12symbol_codec5resetEv",
        "add_pair_to_block",
        "ss_swapmerge.constprop.6",
        "LZ4HC_compress_generic_noDictCtx.part.0",
        "BrotliCompressFragmentFastImpl9",
        "_Z11lzham_tracePKcP13__va_list_tag",
        "LZ_compress_write",
        "MatchFinder_SetLimits",
        "BuildAndStoreBlockSplitCode",
        "inflateInit_",
        "deflate_write_uncompressed_block",
        "ZSTDMT_serialState_reset",
        "ZSTD_buildCTable",
        "LZ4_decompress_fast_extDict",
        "_ZN5lzham16elemental_vector17increase_capacityEjbjPFvPvS1_jEb",
        "syncsearch",
        "RC_encodeBitTreeReverse",
        "ZSTD_buildFSETable",
        "HUF_compress2",
        "BZ2_bzDecompressEnd",
        "ZSTD_estimateCCtxSize_usingCParams",
        "lzham_z_uncompress",
        "_ZN5lzham12symbol_codec20encode_align_to_byteEv",
        "LZ4_saveDictHC",
        "BZ2_bzdopen",
        "_Z10lzham_failPKcS0_j",
        "LZ4_resetStreamHC_fast",
        "_lzo1c_do_compress",
        "slide_hash",
        "_ZN5lzham19lzham_lib_z_inflateEP14lzham_z_streami",
        "FL2_flushStream",
        "lzo1x_1_15_compress_core",
        "LZ4_compressHC_limitedOutput_continue",
        "ZSTD_compressBlock_lazy",
        "Cb_read_data.part.5",
        "CreateBackwardReferencesNH6.isra.38",
        "BZ2_bzWriteOpen",
        "fastlz2_compress",
        "FSE_decompress",
        "BrotliInitDistanceParams",
        "ZSTD_createDCtx",
        "DICT_shift",
        "_ZN5lzham12lzcompressor13code_decisionENS0_10lzdecisionERjS2_",
        "LZMA_getRepPrice",
        "better_match_1",
        "BrotliCompressFragmentTwoPassImpl9.isra.2",
        "BrotliPopulationCostCommand",
        "ZSTD_compressBlock_doubleFast_extDict_generic",
        "inflateResetKeep",
        "EncodeWindowBits",
        "LZ4_decompress_safe_usingDict",
        "_ZN5lzham7adler32EPKvmj",
        "ZSTD_estimateDStreamSize_fromFrame",
        "ZSTD_initCStream_advanced",
        "LZ4_compress_default",
        "ZSTD_createCStream",
        "FL2_preBeginFrame",
        "_ZN5lzhamL21lzham_default_reallocEPvmPmjS0_",
        "BrotliTransformDictionaryWord",
        "ZSTD_ldm_blockCompress",
        "LenEnc_Encode",
        "ZSTD_initStaticCDict",
        "lzo1f_decompress",
        "FL2_estimateDCtxSize",
        "LZ_decompress_read",
        "lzo1x_decompress_dict_safe",
        "lzo1b_compress",
        "CopyUncompressedBlockToOutput",
        "ZSTD_initCStream",
        "Lizard_loadDict",
        "RMF_recurseListChunk",
        "FSE_writeNCount_generic",
        "FL2_compressStream_internal",
        "LZ4_renormDictT",
        "InitBlockSplitterDistance.constprop.3",
        "ZSTD_decompressBegin_usingDict",
        "_Z9sprintf_sPcmPKcz",
        "BrotliEncoderCompress",
        "Lizard_compress_extState_MinLevel",
        "BZ2_hbMakeCodeLengths",
        "LZ4_compress_HC_extStateHC_fastReset",
        "ShouldCompress",
        "lzo1f_1_compress",
        "inflateInit2_",
        "LitEnc_Matched_GetPrice",
        "GetMatchesSpec1",
        "RangeEnc_FlushStream.part.3",
        "ZSTD_setBasePrices",
        "LitEnc_Encode",
        "FL2_compressMt",
        "do_compress_1",
        "HUF_decompress4X_DCtx",
        "FL2_decompressDCtx",
        "LZMA_tryDummy",
        "LZ_compress_read",
        "Hc_GetMatchesSpec",
        "_ZN5lzham24lzham_lib_z_deflateResetEP14lzham_z_stream",
        "lzfse_decode",
        "len_of_coded_match_0",
        "Bt4_MatchFinder_Skip",
        "STORE_RUN_0",
        "FL2_createCCtx",
        "LZ4_decompress_safe_forceExtDict",
        "ZSTD_compressBegin_usingCDict",
        "HUF_decompress4X_hufOnly_wksp",
        "_ZN5lzham11lzham_timer5startEv",
        "scan_tree",
        "lzo1b_3_compress",
        "HUF_compress4X_wksp",
        "ZSTD_sizeof_matchState",
        "SkipMatchesSpec",
        "ZSTD_cParam_withinBounds",
        "ZSTD_CCtx_loadDictionary_byReference",
        "Mb_adjust_array",
        "build_decode_table",
        "ZSTD_ldm_generateSequences",
        "FL2_initDStream_withProp",
        "ShouldCompress.part.56",
        "lzo1b_4_compress",
        "InitBlockSplitterLiteral.constprop.5",
        "LzmaDec_TryDummy",
        "PrepareH5",
        "Lizard_resetStream",
        "HUF_decompress1X_usingDTable_bmi2",
        "lzham_compress",
        "inflateBack",
        "lzo1y_999_compress_level",
        "BrotliCompressFragmentFast",
        "BlockSplitterAddSymbolLiteral",
        "RMF_recurseListsBuffered.part.3_0",
        "_ZN5lzham12symbol_codec11encode_bitsEjj",
        "ZSTD_CCtx_refCDict",
        "ZSTD_CCtx_loadDictionary_advanced",
        "DICT_needShift",
        "divbwt",
        "ZSTD_sizeof_DCtx",
        "_ZN5lzham12lzcompressor5resetEv",
        "heapify_subtree",
        "LZ_compress_total_in_size",
        "RMF_bitpackBuildTable",
        "ZSTD_compressBegin_internal",
        "HUF_compress4X_repeat",
        "ZSTD_flushStream",
        "MatchFinder_MovePos",
        "ZSTD_compressBlock_greedy_extDict",
        "ZSTD_decompressBegin_usingDDict",
        "BrotliCompressFragmentTwoPass",
        "HIST_count",
        "LZ4_compressHC_withStateHC",
        "LzmaEnc_MemPrepare",
        "UTIL_prepareFileList",
        "LZMA_initMatchesPos0Best.isra.8",
        "HUF_decompress4X1_DCtx_wksp_bmi2",
        "ZSTD_compressBlock_btopt",
        "EmitUncompressedMetaBlock_0",
        "ZSTD_compressContinue_internal",
        "lzo1y_999_compress_dict",
        "SafeDecodeLiteralBlockSwitch",
        "lzo1x_decompress",
        "MatchFinder_CreateVTable",
        "Hc4_MatchFinder_Skip",
        "DecodeLiteralBlockSwitch",
        "_ZN5lzham12lzcompressor22raw_parse_thread_stateD2Ev",
        "HUF_decompress1X1_usingDTable_internal_bmi2",
        "SafeDecodeSymbol",
        "ZSTD_decompressMultiFrame",
        "HUF_decompress1X_DCtx_wksp",
        "ZSTD_free",
        "RMF_structuredBuildTable",
        "ZSTD_compressBlock_lazy2_extDict",
        "LZ4_compress_HC_destSize",
        "send_tree",
        "BrotliWarmupBitReader",
        "do_compress_12",
        "inflateSync",
        "FSE_decompress_wksp",
        "MatchFinder_Construct",
        "LZMA2_decMemoryUsage",
        "CreateBackwardReferencesNH41.isra.40",
        "libdeflate_alloc_compressor",
        "ZSTDMT_sizeof_CCtx",
        "LZ4_compress_fast_force",
        "_ZN5lzham25lzham_lib_decompress_initEPK23lzham_decompress_params",
        "Lizard_compress_continue",
        "deflate_write_block_header",
        "ZSTDMT_freeCCtxPool",
        "Hc3Zip_MatchFinder_Skip",
        "ZSTDMT_initCStream_internal",
        "inflate_table",
        "ZSTD_loadDictionaryContent",
        "ZSTD_BtFindBestMatch_selectMLS.constprop.9",
        "LZ4_compress_fast_extState",
        "ZSTD_fillHashTable",
        "ZSTD_freeCDict",
        "lzo1x_1_11_compress",
        "ZSTD_freeCCtxParams",
        "ZSTD_NCountCost",
        "Lizard_decompress_safe_usingDict",
        "lzo1z_999_compress_dict",
        "ZSTD_ldm_skipSequences",
        "flush_pending",
        "lzo1b_999_compress",
        "lzo1f_999_compress",
        "FLZe_encode_member",
        "lzo1b_7_compress",
        "lzo1y_optimize",
        "BrotliCompressFragmentTwoPassImpl12.isra.5",
        "_ZN5lzham12symbol_codec8put_bitsEjj",
        "ZSTD_adjustCParams",
        "BrotliCompressFragmentFastImpl13",
        "HIST_count_parallel_wksp",
        "BrotliHistogramReindexDistance",
        "HUF_decompress4X1_usingDTable_internal_default",
        "ZSTD_adjustCParams_internal",
        "LZ4_decompress_safe_withPrefix64k",
        "HUF_compress4X_usingCTable_internal",
        "ZSTD_compressEnd",
        "XXH32_update",
        "_ZN5lzham12symbol_codec18decode_remove_bitsEj",
        "ZSTDMT_initCStream_usingCDict",
        "_ZN5lzham12symbol_codec15record_put_bitsEjj",
        "ZSTD_getFrameContentSize",
        "_ZN5lzham27lzham_lib_decompress_reinitEPvPK23lzham_decompress_params",
        "RMF_recurseLists16_0",
        "HUF_decompress1X1_DCtx_wksp_bmi2",
        "_ZN5lzham18search_accelerator14get_len2_matchEj",
        "deflatePending",
        "BrotliDecoderDecompressStream",
        "XXH32_digest",
        "LZ4_resetStream_fast",
        "Bt3Zip_MatchFinder_GetMatches",
        "ZSTD_compress2",
        "ZSTDMT_getBuffer",
        "ZSTD_decompressSequences_bmi2.constprop.9",
        "LZMA2_freeECtx",
        "LZ_decompress_finished",
        "ZSTD_compressCCtx",
        "ZSTD_ldm_adjustParameters",
        "BlockSplitterFinishBlockCommand",
        "RMF_structuredExtendMatch",
        "Flush",
        "_ZN5lzham25lzham_lib_compress_reinitEPv",
        "inflateStateCheck",
        "lzo1a_decompress",
        "Bt3_MatchFinder_GetMatches",
        "ZSTD_initDStream",
        "_ZN5lzham19lzham_lib_z_deflateEP14lzham_z_streami",
        "_ZN5lzham12symbol_codec11remove_bitsEj.part.5",
        "RMF_resetIncompleteBuild",
        "InverseMoveToFrontTransform",
        "LZ4_createStreamHC",
        "ZSTD_referenceExternalSequences",
        "FL2_estimateCStreamSize_usingCStream",
        "ZSTD_BtFindBestMatch_dictMatchState_selectMLS.constprop.8",
        "LZMA2_getDictSizeProp",
        "DICT_put",
        "ZSTD_estimateCCtxSize_usingCCtxParams",
        "LZ4_compress_destSize",
        "FSE_optimalTableLog_internal",
        "ZSTD_decompressBound",
        "deflate_make_huffman_codes",
        "FSE_compress",
        "ZSTD_createCDict_advanced",
        "Cb_write_data",
        "uncompress2",
        "_ZN5lzham12lzcompressor13optimal_parseERNS0_18parse_thread_stateE",
        "updatewindow",
        "BrotliBuildSimpleHuffmanTable",
        "BrotliClusterHistogramsDistance",
        "RMF_memoryUsage",
        "FL2_compressCCtx",
        "ZSTD_createCDict",
        "RMF_structuredLimitLengths",
        "adler32_combine_.part.0",
        "bi_windup",
        "lzvn_encode",
        "ZSTD_DCtx_setParameter",
        "BrotliCalculateRingBufferSize",
        "ZSTDMT_endStream",
        "store_run_0",
        "deflateReset",
        "LZ4_compressHC2_limitedOutput",
        "lzham_z_deflate",
        "ZSTDMT_freeCCtx",
        "StoreVarLenUint8",
        "LzmaEnc_Create",
        "_ZN5lzham18lzham_decompressor17reset_huff_tablesEv",
        "_ZN5lzham12lzcompressor12coding_stats5clearEv",
        "_ZN5lzham19lzham_lib_compress2EPvPKhPmPhS3_13lzham_flush_t",
        "XXH64_mergeRound",
        "HUF_decompress4X1_usingDTable_internal_bmi2",
        "LZ4_compress_continue",
        "LZ4_compressHC_continue",
        "LzmaEnc_Encode",
        "ReadMatchDistances",
        "deflateStateCheck",
        "do_compress_3",
        "_ZN5lzham18search_accelerator16find_all_matchesEj",
        "HUF_decodeStreamX1",
        "libdeflate_crc32",
        "PrepareH4.isra.18",
        "LzmaEnc_CodeOneBlock",
        "ChooseDistanceParams",
        "BZ2_bzclose",
        "InitBlockSplitterCommand.constprop.4",
        "BrotliHistogramRemapCommand",
        "ZSTD_sizeof_DDict",
        "LZ_decompress_finish",
        "FLZe_longest_match_len",
        "find_match_5",
        "ZSTD_ldm_fillFastTables",
        "_ZN5lzham24lzham_lib_z_deflateInit2EP14lzham_z_streamiiiii",
        "FSE_decompress_usingDTable",
        "HUF_compress1X_usingCTable_internal_bmi2",
        "ZSTD_insertAndFindFirstIndexHash3",
        "ZSTDMT_compress_advanced",
        "_ZN5lzham12lzcompressor5state4initERNS_7CLZBaseEjj",
        "lzfse_encode_buffer",
        "RMF_bitpackInit",
        "FL2_CCtx_setParameter",
        "PrepareH2.isra.10",
        "ZSTD_DCtx_loadDictionary",
        "ZSTD_compressLiterals",
        "RefineEntropyCodesLiteral.constprop.6",
        "ZSTDMT_releaseAllJobResources",
        "Lizard_hashPtr",
        "FSE_readNCount",
        "BrotliZopfliComputeShortestPath",
        "LZMA2_encode",
        "InitZopfliCostModel.isra.17",
        "ZSTDMT_initCStream",
        "lzo1x_1_compress",
        "lzo2a_999_compress_callback",
        "EvaluateNode.constprop.20",
        "BZ2_bzCompress",
        "BZ2_bzBuffToBuffCompress",
        "BrotliEnsureRingBuffer",
        "ZSTDMT_compressStream_generic",
        "_ZNK5lzham11lzham_timer16get_elapsed_secsEv",
        "BrotliCreateHqZopfliBackwardReferences",
        "HUF_decompress1X2_DCtx_wksp",
        "_ZN5lzham18search_accelerator12find_matchesEjb",
        "ZSTDMT_releaseBuffer",
        "dispatch_0",
        "Mb_init",
        "do_compress_15",
        "ZSTD_decompressDCtx",
        "ZSTD_compressBegin",
        "HUF_decompress4X1_usingDTable",
        "_ZN5lzham23lzham_lib_z_inflateInitEP14lzham_z_stream",
        "SetCost",
        "FSE_normalizeCount",
        "SeqOutStreamBuf_Write",
        "HUF_readDTableX2",
        "pqdownheap",
        "deflate_decompress_default",
        "ZSTD_endStream",
        "ZSTD_initDCtx_internal",
        "EncodeContextMap",
        "FSE_buildCTable",
        "lzo1b_6_compress",
        "lzo1a_compress",
        "HUF_decompress4X1_DCtx",
        "ZSTD_getCParamsFromCDict",
        "BrotliInitZopfliNodes",
        "lzo1x_1_12_compress_core",
        "LZ4_compress_HC_continue",
        "ZSTD_DUBT_findBestMatch",
        "LZ_compress_member_position",
        "RMF_structuredIntegrityCheck",
        "LzmaProps_Decode.part.2",
        "do_compress_16",
        "BrotliCreateHuffmanTree",
        "HUF_decompress1X2_usingDTable_internal_bmi2",
        "FL2_getNextCompressedBuffer",
        "ZSTD_checkContinuity",
        "HUF_compressCTable_internal",
        "LZeb_reset",
        "BrotliStoreMetaBlockTrivial",
        "ZSTD_getCParamsFromCCtxParams",
        "BrotliHistogramRemapLiteral",
        "deflate_compress_lazy",
        "ZSTD_CCtx_loadDictionary",
        "Lizard_decompress_safe_partial",
        "do_compress_17",
        "deflate_stored",
        "ZSTD_createDCtx_advanced",
        "HUF_decompress4X2_DCtx_wksp_bmi2",
        "ZSTD_copyDDictParameters",
        "FL2_createCStreamMt",
        "RC_encodeDirect",
        "PrepareH65",
        "ZSTD_compressBlock_fast_extDict",
        "_ZN5lzham12symbol_codec22put_bits_align_to_byteEv",
        "BZ2_decompress",
        "_ZN5lzham12lzcompressor15init_seed_bytesEv",
        "BrotliCompressFragmentFastImpl11",
        "ZSTD_rescaleFreqs",
        "_ZN5lzham12lzcompressor5state19get_len2_match_costERNS_7CLZBaseEjjj",
        "BrotliCompressFragmentTwoPassImpl16.isra.9",
        "BrotliBuildHuffmanTable",
        "_ZNK5lzham12lzcompressor5state8get_costERNS_7CLZBaseERKNS_18search_acceleratorERKNS0_10lzdecisionE",
        "RMF_bitpackLimitLengths",
        "LZMA_fillDistancesPrices",
        "ZSTD_initStaticDDict",
        "BrotliHistogramBitCostDistanceCommand.part.2",
        "DICT_destruct",
        "_libdeflate_setup_cpu_features",
        "FL2_freeDCtx",
        "_ZN5lzham11lzham_timerC2Ey",
        "lzham_compress_deinit",
        "ZSTD_initFseState",
        "_ZN5lzham12lzcompressor23compress_block_internalEPKvj",
        "BrotliEncoderCompressStream",
        "StoreSymbolWithContext",
        "lzham_z_deflateInit2",
        "ZSTD_compressBlock",
        "FL2_createDCtxMt",
        "RMF_clampParams",
        "ZSTD_compress_advanced",
        "_ZN5lzham12symbol_codec8get_bitsEj.part.4",
        "ZSTD_decompressBlock",
        "LZMA2_initDecoder",
        "deflateParams",
        "DecodeVarLenUint8.isra.6",
        "FSE_buildCTable_wksp",
        "SafeProcessCommands",
        "ZSTD_ldm_getTableSize",
        "BuildAndStoreCommandPrefixCode",
        "LZMA_encodeLength_MidHigh",
        "lzham_decompress_memory",
        "FL2_freeCCtx",
        "StoreTrivialContextMap.part.5",
        "ZSTD_CCtx_reset",
        "CreateBackwardReferencesNH3.isra.35",
        "LZ_compress_finished",
        "code_match",
        "LzmaEnc_MemEncode",
        "BrotliEstimateBitCostsForLiterals",
        "lzo2a_decompress",
        "_ZN5lzham12lzcompressor5clearEv",
        "LZ_compress_sync_flush",
        "lzham_compress_init",
        "LZMA2_createECtx",
        "ZSTDMT_freeBufferPool",
        "lzo1b_999_compress_callback",
        "inflateEnd",
        "LZMA2_getDictSizeFromProp",
        "ZSTD_initCDict_internal",
        "lzo1_99_compress",
        "_ZN5lzham18lzham_decompressor16reset_all_tablesEv",
        "HUF_decompress4X_hufOnly_wksp_bmi2",
        "lzo1y_1_compress",
        "len_of_coded_match",
        "_ZN5lzham12symbol_codec20start_arith_decodingEv",
        "LZ4_decompress_fast_usingDict",
        "deflate_compress_greedy",
        "_ZN5lzham11lzham_timer9get_ticksEv",
        "DICT_init",
        "ZSTD_HcFindBestMatch_dictMatchState_selectMLS.constprop.5",
        "FL2_decompress",
        "LZ4_compress",
        "FL2_decompressStream",
        "SafeDecodeDistanceBlockSwitch",
        "LzmaDec_WriteRem",
        "LZ4_createHC",
        "_Z11lzham_tracePKcz",
        "StoreCommands",
        "Lizard_initStream",
        "RMF_bitpackExtendMatch",
        "lzo1y_999_compress_internal",
        "RC_encodeBitTree",
        "ZSTD_compressBlock_lazy2",
        "UpdateBits.constprop.0",
        "LZ4_decompress_safe",
        "FillDistancesPrices",
        "ZSTD_compressBegin_advanced_internal",
        "LzmaEnc_RestoreState",
        "ZSTD_initCStream_usingCDict",
        "BrotliBuildMetaBlockGreedy",
        "BrotliStoreUncompressedMetaBlock",
        "lzo1y_decompress_dict_safe",
        "CreateBackwardReferencesNH42.isra.41",
        "HUF_decompress",
        "ZSTD_DCtx_loadDictionary_advanced",
        "LZ4_compress_fast",
        "len_of_coded_match_1",
        "ZSTD_compressBlock_lazy_extDict",
        "FL2_estimateCStreamSize",
        "LZ_compress_open",
        "BlockSplitterAddSymbolDistance",
        "Bt4_MatchFinder_GetMatches",
        "FL2_compress",
        "lzo1_compress",
        "fastlz1_compress",
        "XXH32",
        "Lizard_count_2segments",
        "LzmaDec_DecodeReal2",
        "ZSTD_estimateCDictSize",
        "do_compress_0",
        "inflateGetDictionary",
        "_ZN5lzham22lzham_lib_z_inflateEndEP14lzham_z_stream",
        "LZd_try_verify_trailer",
        "find_match_4",
        "WrapRingBuffer",
        "WriteMetaBlockInternal",
        "LzmaEncode",
        "FL2_decompressMt",
        "ClusterBlocksCommand",
        "LZ4_decompress_fast",
        "ZSTD_createDDict",
        "ZSTD_getcBlockSize",
        "HUF_decodeStreamX2",
        "inflateValidate",
        "ZSTD_compress_usingDict",
        "LZMA_getDistSlot.part.3",
        "bsPutUInt32",
        "BrotliStoreHuffmanTree",
        "_ZN5lzham12lzcompressor5state5resetEv",
        "BrotliCompressFragmentTwoPassImpl14.isra.7",
        "ZSTD_resetCCtx_internal",
        "Lizard_saveDict",
        "XXH64_reset",
        "lzo1x_1_12_compress",
        "lzham_z_inflateReset",
        "LzmaDec_Allocate",
        "_ZN5lzham12symbol_codec19assemble_output_bufEv",
        "ZSTD_getDDict",
        "lzham_decompress_deinit",
        "LZ4_createStream",
        "DecodeContextMap",
        "ZSTD_compressBlock_fast_dictMatchState",
        "lzham_z_inflateInit",
        "ss_mintrosort.constprop.10",
        "LZ4_loadDictHC",
        "RMF_recurseListsBuffered.part.3",
        "BrotliCompareAndPushToQueueDistance",
        "LzmaEnc_SaveState",
        "lzo1y_decompress",
        "ZSTD_compressBlock_lazy2_dictMatchState",
        "find_match_0",
        "bi_flush",
        "deflate_decompress_bmi2",
        "LZeb_try_full_flush",
        "FL2_initDStream_prop",
        "BrotliHistogramReindexCommand",
        "lzo1x_1_15_compress",
        "BrotliFindAllStaticDictionaryMatches",
        "BIT_initDStream",
        "ShouldMergeBlock",
        "LZ_compress_write_size",
        "lzfse_encode_finish",
        "_lzo_config_check",
        "__lzo_init_v2",
        "LZ4_compressHC2_limitedOutput_withStateHC",
        "ZSTD_BtFindBestMatch_extDict_selectMLS.constprop.7",
        "lzham_z_inflateInit2",
        "fill_window",
        "inflateCodesUsed",
        "BrotliCompressFragmentTwoPassImpl15.isra.8",
        "BZ2_bzwrite",
        "ZSTD_sizeof_CCtx",
        "ZSTD_sizeof_CDict",
        "ZSTD_compressStream2",
        "ZSTD_findDecompressedSize",
        "_ZNK5lzham11lzham_timer14get_elapsed_usEv",
        "ZSTD_CCtxParams_init_advanced",
        "_ZN5lzham12symbol_codec5clearEv",
        "Hc4_MatchFinder_GetMatches",
        "crc32_combine_",
        "BrotliIsMostlyUTF8",
        "_ZN5lzham12lzcompressor5state26encode_reset_state_partialERNS_12symbol_codecERKNS_18search_acceleratorEj",
        "LZMA2_encMemoryUsage",
        "LZ4_loadDict",
        "BrotliZopfliCreateCommands",
        "_ZN5lzham11lzham_timer14get_init_ticksEv",
        "ZSTD_compressBlock_internal",
        "BrotliDecoderHuffmanTreeGroupInit",
        "ZSTD_updateTree",
        "CreateBackwardReferencesNH40.isra.39",
        "LZ4_compressHC_limitedOutput",
        "FSE_compress_usingCTable_generic",
        "FL2_estimateDStreamSize",
        "ZSTD_copyCCtx",
        "lzham_z_deflateEnd",
        "BrotliConvertBitDepthsToSymbols",
        "ZSTD_compressBlock_btlazy2_dictMatchState",
        "BrotliDecoderStateMetablockBegin",
        "BrotliAllocate",
        "BZ2_bzCompressEnd",
        "LZeb_encode_pair",
        "LZ4_uncompress",
        "HIST_countFast_wksp",
        "ZSTD_compress_advanced_internal",
        "ZSTD_count_0",
        "adler32_z",
        "lzo1x_999_compress_internal",
        "_ZN5lzham11lzham_timer13ticks_to_secsEy",
        "HUF_decompress4X2_usingDTable_internal_bmi2",
        "deflateGetDictionary",
        "ZSTD_noCompressLiterals",
        "HUF_selectDecoder",
        "STORE_RUN_2",
        "BZ2_bzWriteClose64",
        "inflateSyncPoint",
        "LZ_compress_finish",
        "HUF_compress_internal",
        "PrepareH3.isra.14",
        "ZSTD_resetCStream",
        "BrotliPopulationCostLiteral",
        "FillAlignPrices",
        "_ZN5lzham12lzcompressor12greedy_parseERNS0_18parse_thread_stateE",
        "lzfse_encode_base",
        "lzo1x_999_compress_level",
        "Shift",
        "LzmaEnc_Destroy",
        "ZSTD_compressBlock_btopt_dictMatchState",
        "XXH32_reset",
        "ZSTD_compressRleLiteralsBlock",
        "_tr_stored_block",
        "FL2_endStream",
        "HUF_compress1X_wksp",
        "lzo1x_999_compress",
        "_ZN5lzham12lzcompressor5state5clearEv",
        "HUF_decompress1X1_DCtx",
        "RMF_freeMatchTable",
        "BlockSplitterFinishBlockDistance",
        "ZSTD_initStats_ultra",
        "fastlz_compress_level",
        "BuildAndStoreBlockSwitchEntropyCodes",
        "ZSTD_freeDDict",
        "_ZN5lzham12lzcompressor18parse_job_callbackEyPv",
        "LZ_compress_data_position",
        "_ZNK5lzham12lzcompressor5state19get_rep_match_costsEjPyjiij",
        "BrotliDecoderStateCleanupAfterMetablock",
        "BrotliDecoderStateCleanup",
        "_lzo1b_do_compress",
        "lzo1b_9_compress",
        "deflate_flush_block",
        "LZMA2_encodeChunk",
        "LZ4_compress_HC",
        "ZSTD_decodeFrameHeader",
        "do_end_block_check",
        "LZ4_compressBound",
        "LzmaEncProps_GetDictSize",
        "FL2_compressStream",
        "_Z10vsprintf_sPcmPKcP13__va_list_tag",
        "_ZN5lzham12symbol_codec6decodeERNS_33quasi_adaptive_huffman_data_modelE",
        "LZ4_decompress_fast_continue",
        "ZSTD_loadDEntropy",
        "ZSTD_createCCtx",
        "ZSTDMT_getMTCtxParameter",
        "ZSTD_insertBt1",
        "ZSTDMT_flushProduced",
        "lzham_decompress_reinit",
        "ZSTDMT_expandJobsTable",
        "BrotliHistogramRemapDistance",
        "BZ2_hbAssignCodes",
        "GetBrotliStorage",
        "BrotliStoreMetaBlockHeader_0",
        "LzmaDec_AllocateProbs2.isra.1",
        "ZSTD_compressBlock_fast_extDict_generic",
        "lzo1c_999_compress_callback",
        "LZ4_attach_dictionary",
        "RMF_createMatchTable",
        "ZSTD_compressBlock_greedy_dictMatchState",
        "_ZN5lzham12lzcompressor5state17reset_update_rateEv",
        "_ZN5lzham18search_accelerator5resetEv",
        "BrotliOptimizeHuffmanCountsForRle",
        "InitializeH6.isra.23",
        "StoreDataWithHuffmanCodes",
        "LZ_decompress_open",
        "lzo1f_999_compress_callback",
        "ZSTDMT_createCompressionJob",
        "find_match",
        "BrotliInitEncoderDictionary",
        "CreateBackwardReferencesNH35.isra.43",
        "BZ2_bzWriteClose",
        "lzo1x_1_11_compress_core",
        "deflate_fast",
        "BuildHistograms.constprop.6",
        "_ZN5lzham12lzcompressor16send_zlib_headerEv",
        "BrotliInitMemoryManager",
        "inflateUndermine",
        "RMF_applyParameters_internal",
        "verify_encoder",
        "lzham_z_compress",
        "HIST_count_simple",
        "MatchFinder_ReadBlock",
        "LZ4_compress_limitedOutput",
        "ZSTD_compressBound",
        "_ZN5lzham25lzham_lib_compress_memoryEPK21lzham_compress_paramsPhPmPKhmPj",
        "Bt2_MatchFinder_GetMatches",
        "BrotliClusterHistogramsCommand",
        "deflateBound",
        "_ZN5lzham18search_accelerator17find_len2_matchesEv",
        "lzham_compress2",
        "ZSTD_initDStream_usingDict",
        "LZ4_compress_fast_extState_fastReset",
        "ZSTD_compressBegin_usingDict",
        "ReadHuffmanCode",
        "_ZN5lzham12lzcompressor12coding_stats6updateERKNS0_10lzdecisionERKNS0_5stateERKNS_18search_acceleratorEy",
        "_tr_flush_block",
        "lzfse_decode_buffer_with_scratch",
        "inflateReset2",
        "FSE_buildDTable",
        "Bt2_MatchFinder_Skip",
        "CreateBackwardReferencesNH5.isra.37",
        "ZSTD_updateStats",
        "lzo1c_decompress",
        "ZSTD_encodeSequences",
        "ZSTD_clearAllDicts",
        "inflateReset",
        "StoreCompressedMetaBlockHeader",
        "ZSTD_compressBlock_btlazy2",
        "lzo1_decompress",
        "ZSTD_decompress_usingDDict",
        "Rd_find_header",
        "BrotliDestroyBlockSplit",
        "tr_introsort.constprop.4",
        "ZSTD_compress_usingCDict",
        "do_compress_4",
        "Bt3_MatchFinder_Skip",
        "ZSTD_dParam_withinBounds",
        "ZSTDMT_resetCStream",
        "_ZN5lzham18lzham_decompressor4initEv",
        "Lizard_putPositionHLog",
        "_ZN5lzham12lzcompressor5state10encode_eobERNS_12symbol_codecERKNS_18search_acceleratorEj",
        "ZSTDMT_initCStream_advanced",
        "RangeEnc_ShiftLow",
        "libdeflate_zlib_decompress",
        "ZSTD_count_2",
        "lzo1y_1_compress_core",
        "Rd_try_reload",
        "lzo1x_1_compress_core",
        "lzo1z_decompress_dict_safe",
        "BZ2_bzread",
        "LZ4_decompress_safe_withSmallPrefix",
        "RMF_compatibleParameters",
        "HUF_compress1X_usingCTable_internal_default",
        "LZ4HC_init_internal",
        "BrotliCreateZopfliBackwardReferences",
        "HUF_decompress1X1_usingDTable_internal_default",
        "ZSTD_initDStream_usingDDict",
        "compress_block",
        "_ZN5lzham12symbol_codecD2Ev",
        "DICT_get",
        "ZSTD_initCCtx",
        "lzvn_decode",
        "MatchFinder_MoveBlock",
        "libdeflate_zlib_compress",
        "DecodeMetaBlockLength",
        "_ZN5lzham27lzham_lib_decompress_memoryEPK23lzham_decompress_paramsPhPmPKhmPj",
        "BrotliDecoderTakeOutput",
        "_ZN5lzham12lzcompressor5state5printERNS_12symbol_codecERNS_7CLZBaseERKNS_18search_acceleratorERKNS0_10lzdecisionE",
        "do_compress_10",
        "LzmaEnc_Destruct",
        "LzmaEncProps_Init",
        "ZSTD_findFrameSizeInfo",
        "ZSTD_CCtxParams_getParameter",
        "ZSTD_calloc",
        "ZSTD_compressContinue",
        "ZSTD_estimateCStreamSize_usingCCtxParams",
        "HUF_readCTable",
        "CreateBackwardReferencesNH54.isra.42",
        "fse_normalize_freq",
        "RefineEntropyCodesCommand.constprop.11",
        "EmitUncompressedMetaBlock",
        "HUF_decompress4X2_usingDTable",
        "ZSTD_decompressBegin",
        "_lzo1c_store_run",
        "ProcessCommands",
        "LZ4_compress_forceExtDict",
        "FL2_getDictionaryBuffer",
        "LZ_decompress_write_size",
        "_ZN5lzham12symbol_codec19arith_stop_encodingEv",
        "_ZN5lzham12symbol_codec17encode_arith_initEv",
        "ZSTD_estimateCCtxSize",
        "BrotliDecoderStateInit",
        "ZSTD_count_2segments_1",
        "lzfse_encode_translate",
        "ZSTD_createDDict_byReference",
        "LZ4HC_reverseCountPattern",
        "ZSTD_DCtx_loadDictionary_byReference",
        "BrotliDecoderDecompress",
        "ZSTD_assignParamsToCCtxParams",
        "ZSTD_createCCtxParams",
        "HUF_readDTableX1",
        "LZ_decompress_close",
        "MatchFinder_Free",
        "RMF_handleRepeat",
        "ZSTD_initCStream_usingCDict_advanced",
        "ZSTD_updateDUBT.isra.2",
        "better_match_0",
        "ZSTDMT_compressCCtx",
        "FL2_updateDictionary",
        "lzo1b_2_compress",
        "_ZN5lzham30lzham_lib_set_memory_callbacksEPFPvS0_mPmjS0_EPFmS0_S0_ES0_",
        "LZ4_decompress_safe_continue",
        "BrotliCompressBufferQuality10",
        "ZSTD_initDDict_internal",
        "ZSTD_getDictID_fromFrame",
        "FL2_createCCtx_internal",
        "BrotliBuildMetaBlock",
        "deflateSetDictionary",
        "_ZN5lzham13prefix_coding14generate_codesEjPKhPt",
        "CreateBackwardReferencesNH4.isra.36",
        "ZSTD_count_2segments_0",
        "deflate_compress_near_optimal",
        "inflate_fast",
        "LzmaDec_AllocateProbs",
        "LZMA_getLiteralPrice",
        "XXH64_update",
        "_ZN5lzham18lzham_lib_compressEPvPKhPmPhS3_j",
        "HUF_decompress4X2",
        "BuildAndStoreLiteralPrefixCode",
        "_ZN5lzham12symbol_codec6decodeERNS_18adaptive_bit_modelEb",
        "_ZN5lzham12symbol_codec10flush_bitsEv",
        "BrotliDecoderDestroyInstance",
        "Hc3Zip_MatchFinder_GetMatches",
        "_ZN5lzham23lzham_lib_z_deflateInitEP14lzham_z_streami",
        "HIST_count_wksp",
        "_ZN5lzham12symbol_codec11decode_bitsEj",
        "XXH64_digest",
        "LzmaEnc_CodeOneMemBlock",
        "LzmaEnc_Init",
        "RMF_calBufSize",
        "BZ2_bz__AssertH__fail",
        "BrotliHistogramBitCostDistanceLiteral.part.1",
        "do_compress_11",
        "Lizard_decompress_safe_forceExtDict"
    ],
    "turbobench___lzfse":
    [
        "fse_init_decoder_table",
        "lzvn_decode",
        "fse_normalize_freq",
        "lzfse_encode_buffer_with_scratch",
        "lzfse_decode",
        "lzfse_encode_base",
        "lzfse_encode_matches.part.1",
        "lzfse_backend_match",
        "lzfse_push_match",
        "lzfse_decode_buffer_with_scratch",
        "lzfse_encode_finish",
        "lzvn_encode_buffer",
        "fse_init_value_decoder_table",
        "lzvn_encode",
        "lzfse_encode_buffer",
        "fse_init_encoder_table",
        "lzfse_encode_translate",
        "lzfse_encode_init",
        "lzfse_decode_buffer",
        "lzfse_encode_scratch_size",
        "lzfse_decode_scratch_size"
    ],
    "turbobench___lzlib":
    [
        "verify_encoder",
        "LZ_compress_open",
        "LZ_compress_data_position",
        "LZ_compress_restart_member",
        "LZ_compress_sync_flush",
        "LZ_compress_finish",
        "do_compress",
        "Mb_init",
        "FLZe_longest_match_len",
        "LZ_decompress_sync_to_member",
        "LZ_decompress_finish",
        "LZ_decompress_read",
        "LZ_decompress_open",
        "LZ_decompress_write_size",
        "LZ_decompress_close",
        "Cb_read_data.part.5",
        "FLZe_encode_member",
        "Rd_try_reload",
        "LZ_compress_member_finished",
        "LZeb_reset",
        "LZ_decompress_finished",
        "LZ_compress_member_position",
        "LZe_sequence_optimizer",
        "LZ_compress_finished",
        "LZ_compress_write",
        "Rd_find_header",
        "LZ_decompress_reset",
        "LZ_compress_write_size",
        "LZ_compress_total_in_size",
        "LZ_compress_close",
        "LZ_compress_read",
        "LZe_get_match_pairs",
        "LZeb_encode_pair",
        "Mb_adjust_array",
        "LZd_try_verify_trailer",
        "LZeb_try_full_flush",
        "LZ_decompress_write",
        "LZ_compress_total_out_size",
        "Cb_write_data",
        "LZ_compress_errno",
        "LZ_min_dictionary_size",
        "LZ_decompress_errno"
    ],
    "turbobench___lzo":
    [
        "lzo1x_1_11_compress_core",
        "lzo1b_99_compress",
        "do_compress_17",
        "lzo1z_999_compress_dict",
        "lzo1y_999_compress_dict",
        "do_compress_13",
        "_lzo1c_do_compress",
        "do_compress_0",
        "code_match_1",
        "do_compress_18",
        "find_match",
        "do_compress_2",
        "lzo2a_999_compress_callback",
        "do_compress_14",
        "lzo1_99_compress",
        "lzo1b_999_compress_callback",
        "lzo1a_decompress",
        "lzo1x_1_compress_core",
        "store_run",
        "_lzo1b_store_run",
        "lzo1x_1_15_compress_core",
        "lzo1b_8_compress",
        "do_compress_4",
        "find_match_3",
        "do_compress_7",
        "len_of_coded_match_1",
        "lzo1f_999_compress_callback",
        "better_match",
        "lzo1b_6_compress",
        "do_compress_8",
        "lzo1y_1_compress_core",
        "lzo1x_999_compress_level",
        "do_compress_1",
        "_lzo1b_do_compress",
        "lzo1c_999_compress",
        "STORE_RUN_1",
        "do_compress_11",
        "find_match_4",
        "lzo1b_2_compress",
        "_lzo_config_check",
        "lzo1y_optimize",
        "do_compress_15",
        "lzo1b_7_compress",
        "lzo1x_1_11_compress",
        "do_compress_16",
        "STORE_RUN_2",
        "lzo1a_99_compress",
        "find_match_5",
        "do_compress_3",
        "do_compress_10",
        "find_match_0",
        "lzo1x_1_12_compress",
        "do_compress_5",
        "lzo1x_1_15_compress",
        "lzo1c_999_compress_callback",
        "better_match_0",
        "lzo1y_999_compress_level",
        "lzo1x_999_compress_internal",
        "store_run_0",
        "lzo1y_999_compress_internal",
        "STORE_RUN",
        "lzo1_decompress",
        "_lzo1c_store_run",
        "lzo1x_optimize",
        "code_match_0",
        "code_match",
        "lzo1x_1_compress",
        "len_of_coded_match",
        "lzo1z_999_compress",
        "lzo1y_1_compress",
        "lzo1b_1_compress",
        "lzo1y_decompress_dict_safe",
        "lzo1x_999_compress_dict",
        "len_of_coded_match_0",
        "do_compress_12",
        "do_compress_9",
        "lzo1b_9_compress",
        "lzo1f_999_compress",
        "lzo1z_999_compress_internal",
        "lzo1a_compress",
        "lzo1y_999_compress",
        "lzo1z_decompress_dict_safe",
        "__lzo_init_v2",
        "better_match_1",
        "lzo1z_999_compress_level",
        "STORE_RUN_0",
        "do_compress_19",
        "find_match_2",
        "do_compress_6",
        "lzo1_compress",
        "lzo1b_999_compress",
        "lzo1b_4_compress",
        "lzo1x_decompress_dict_safe",
        "lzo1x_1_12_compress_core",
        "find_match_1",
        "lzo1b_5_compress",
        "lzo1f_1_compress",
        "lzo1x_999_compress",
        "do_compress",
        "lzo1b_3_compress",
        "lzo1c_1_compress",
        "lzo_memset",
        "lzo1c_7_compress",
        "lzo1c_6_compress",
        "lzo1c_5_compress",
        "lzo_memcmp",
        "lzo1c_4_compress",
        "lzo1c_2_compress",
        "lzo1c_8_compress",
        "lzo2a_999_compress",
        "lzo1c_9_compress",
        "lzo_memmove",
        "lzo1c_99_compress",
        "lzo1c_3_compress",
        "lzo_memcpy"
    ],
    "turbobench___minizip":
    [
        "BZ2_bzDecompressInit",
        "BZ2_bzBuffToBuffDecompress",
        "BZ2_hbAssignCodes",
        "BZ2_hbCreateDecodeTables",
        "BZ2_bzDecompressEnd",
        "BZ2_bzCompress",
        "bsPutUInt32",
        "BZ2_bzDecompress",
        "BZ2_bzCompressInit",
        "add_pair_to_block",
        "BZ2_blockSort",
        "BZ2_compressBlock",
        "BZ2_decompress",
        "handle_compress.isra.2",
        "BZ2_indexIntoF",
        "BZ2_bzBuffToBuffCompress",
        "BZ2_hbMakeCodeLengths",
        "BZ2_bzCompressEnd"
    ],
    "turbobench___precomp":
    [
        "_tr_align",
        "deflatePending",
        "BZ2_bzclose",
        "BrotliHistogramBitCostDistanceLiteral.part.1",
        "PrepareH5",
        "ComputeDistanceCost",
        "BZ2_bzread",
        "BlockSplitterAddSymbolDistance",
        "BrotliEncoderDestroyInstance",
        "BrotliClusterHistogramsDistance",
        "BrotliStoreMetaBlockTrivial",
        "BrotliHistogramBitCostDistanceDistance.part.3",
        "_tr_stored_block",
        "CreateBackwardReferencesNH2.isra.34",
        "BZ2_hbAssignCodes",
        "BZ2_bzDecompressEnd",
        "StoreCommands",
        "handle_compress.isra.2",
        "BrotliCompressFragmentTwoPassImpl13.isra.6",
        "deflateSetHeader",
        "deflate_stored",
        "BrotliWriteHuffmanTree",
        "BrotliDecoderDecompressStream",
        "DecodeDistanceBlockSwitch",
        "BrotliClusterHistogramsLiteral",
        "BrotliFindAllStaticDictionaryMatches",
        "read_buf",
        "CreateBackwardReferencesNH42.isra.41",
        "BrotliCompressFragmentTwoPass",
        "PrepareH40",
        "BZ2_bzCompress",
        "BrotliCompressFragmentTwoPassImpl12.isra.5",
        "SetCost",
        "deflateCopy",
        "add_pair_to_block",
        "_tr_init",
        "BZ2_bzReadOpen",
        "deflatePrime",
        "BrotliDecoderHuffmanTreeGroupInit",
        "PrepareH3.isra.14",
        "BZ2_hbCreateDecodeTables",
        "BZ2_indexIntoF",
        "PrepareH2.isra.10",
        "BrotliWarmupBitReader",
        "CreateBackwardReferencesNH6.isra.38",
        "ZopfliCostModelSetFromLiteralCosts",
        "BZ2_bzReadClose",
        "BrotliStoreUncompressedMetaBlock",
        "BrotliEncoderCreateInstance",
        "SafeDecodeCommandBlockSwitch",
        "deflateBound",
        "EvaluateNode.constprop.20",
        "deflateInit_",
        "crc32_little",
        "BrotliConvertBitDepthsToSymbols",
        "CreateBackwardReferencesNH5.isra.37",
        "BrotliStoreMetaBlockFast",
        "BrotliBuildHistogramsWithContext",
        "BrotliPopulationCostCommand",
        "PrepareH6",
        "inflateSync",
        "SafeDecodeSymbol",
        "syncsearch",
        "WriteRingBuffer",
        "EmitUncompressedMetaBlock",
        "BrotliStoreMetaBlockHeader_0",
        "BrotliCompressBufferQuality10",
        "BuildAndStoreBlockSplitCode",
        "BrotliCompressFragmentTwoPassImpl8.isra.1",
        "inflate",
        "BrotliCompressFragmentFastImpl9",
        "BrotliBuildMetaBlockGreedy",
        "BrotliIsMostlyUTF8",
        "BrotliHistogramRemapLiteral",
        "BrotliInitDistanceParams",
        "WriteMetaBlockInternal",
        "deflateResetKeep",
        "deflate_fast",
        "BrotliBuildAndStoreHuffmanTreeFast",
        "BrotliDecoderDecompress",
        "BrotliBuildCodeLengthsHuffmanTable",
        "ReadHuffmanCode",
        "deflateSetDictionary",
        "BrotliEncoderCompressStream",
        "BrotliPopulationCostLiteral",
        "compress_block",
        "CreateBackwardReferencesNH3.isra.35",
        "inflateGetHeader",
        "BrotliCompareAndPushToQueueLiteral",
        "BZ2_bz__AssertH__fail",
        "BrotliStoreMetaBlockHeader",
        "CopyUncompressedBlockToOutput",
        "WrapRingBuffer",
        "InitBlockSplitterLiteral.constprop.5",
        "BrotliCompressFragmentTwoPassImpl9.isra.2",
        "PrepareH55",
        "gf2_matrix_square",
        "send_tree",
        "SafeDecodeDistanceBlockSwitch",
        "inflateInit2_",
        "SafeDecodeLiteralBlockSwitch",
        "updatewindow",
        "adler32_z",
        "inflateReset2",
        "BrotliCompareAndPushToQueueCommand",
        "deflateParams",
        "BrotliHistogramCombineDistance",
        "BrotliPopulationCostDistance",
        "BlockSplitIteratorNext",
        "InverseMoveToFrontTransform",
        "BlockSplitterAddSymbolCommand",
        "BrotliHistogramCombineLiteral",
        "BZ2_bzWriteClose",
        "BrotliCompressFragmentFastImpl15",
        "BlockSplitterFinishBlockCommand",
        "BuildAndStoreHuffmanTree",
        "ContextBlockSplitterFinishBlock",
        "pqdownheap",
        "fill_window",
        "GetBrotliStorage",
        "BrotliCompressFragmentTwoPassImpl15.isra.8",
        "BlockSplitterAddSymbolLiteral",
        "InitializeH6.isra.23",
        "inflateMark",
        "CreateBackwardReferencesNH40.isra.39",
        "scan_tree",
        "build_tree",
        "BrotliStoreHuffmanTree",
        "Shift",
        "RefineEntropyCodesLiteral.constprop.6",
        "BrotliCreateHuffmanTree",
        "CreateBackwardReferencesNH4.isra.36",
        "PrepareH42",
        "BrotliZopfliComputeShortestPath",
        "BZ2_bzCompressInit",
        "bsPutUInt32",
        "BrotliBuildHuffmanTable",
        "BZ2_bzBuffToBuffDecompress",
        "BrotliAllocate",
        "BZ2_bzRead",
        "BrotliBuildSimpleHuffmanTable",
        "BZ2_bzWriteOpen",
        "BrotliDecoderStateCleanupAfterMetablock",
        "PrepareH41",
        "BZ2_bzBuffToBuffCompress",
        "BrotliCompressFragmentFastImpl13",
        "inflate_fast",
        "BrotliHistogramRemapCommand",
        "BrotliTransformDictionaryWord",
        "UpdateLastProcessedPos.isra.57",
        "BrotliCompareAndPushToQueueDistance",
        "deflateStateCheck",
        "inflateGetDictionary",
        "BlockSplitterFinishBlockDistance",
        "BrotliDecoderDestroyInstance",
        "BZ2_bzWrite",
        "deflateEnd",
        "inflateCopy",
        "PrepareHROLLING_FAST.isra.38.part.39",
        "PrepareH35",
        "BZ2_bzdopen",
        "BuildAndStoreCommandPrefixCode",
        "BrotliHistogramReindexLiteral",
        "BrotliCreateZopfliBackwardReferences",
        "BrotliCompressFragmentFastImpl11",
        "BrotliHistogramCombineCommand",
        "BrotliCompressFragmentFast",
        "CreateBackwardReferencesNH65.isra.45",
        "flush_pending",
        "BrotliEstimateBitCostsForLiterals",
        "inflateSyncPoint",
        "fallbackSort",
        "BrotliInitMemoryManager",
        "BrotliCreateHqZopfliBackwardReferences",
        "InitBlockSplitterCommand.constprop.4",
        "BZ2_hbMakeCodeLengths",
        "deflateTune",
        "EncodeData",
        "BZ2_bzCompressEnd",
        "BuildAndStoreLiteralPrefixCode",
        "slide_hash",
        "ShouldCompress.part.56",
        "bzopen_or_bzdopen",
        "BrotliDecoderStateInit",
        "BuildHistograms.constprop.6",
        "PrepareH65",
        "DecodeCommandBlockSwitch",
        "InitZopfliCostModel.isra.17",
        "RefineEntropyCodesDistance.constprop.16",
        "inflateResetKeep",
        "UpdateBits.constprop.0",
        "CreateBackwardReferencesNH41.isra.40",
        "BrotliHistogramRemapDistance",
        "BrotliInitEncoderDictionary",
        "BuildAndStoreBlockSwitchEntropyCodes",
        "BrotliDecoderStateMetablockBegin",
        "DecodeVarLenUint8.isra.6",
        "UpdateNodes",
        "BZ2_compressBlock",
        "deflateInit2_",
        "deflateGetDictionary",
        "BrotliCompressFragmentTwoPassImpl17.isra.10",
        "GetHashTable",
        "BrotliCompressFragmentTwoPassImpl16.isra.9",
        "ProcessCommands",
        "BrotliBuildMetaBlock",
        "inflateCodesUsed",
        "inflate_table",
        "BZ2_bzwrite",
        "inflateEnd",
        "adler32_combine_.part.0",
        "StoreSymbol",
        "inflateInit_",
        "ChooseDistanceParams",
        "BrotliCompressFragmentTwoPassImpl10.isra.3",
        "ClusterBlocksLiteral",
        "StoreSymbolWithContext",
        "DecodeLiteralBlockSwitch",
        "BrotliOptimizeHistograms",
        "InjectFlushOrPushOutput",
        "BrotliDecoderTakeOutput",
        "inflateValidate",
        "BZ2_bzopen",
        "InitBlockSplitterDistance.constprop.3",
        "BrotliCreateBackwardReferences",
        "BrotliDestroyBlockSplit",
        "BrotliCalculateRingBufferSize",
        "StoreDataWithHuffmanCodes",
        "inflateSetDictionary",
        "DecodeMetaBlockLength",
        "deflate",
        "StoreTrivialContextMap.part.5",
        "BZ2_bzDecompressInit",
        "BrotliDecoderCreateInstance",
        "_tr_flush_block",
        "BZ2_blockSort",
        "BrotliSetDepth",
        "BrotliEncoderCompress",
        "BZ2_bzWriteClose64",
        "BrotliSplitBlock",
        "inflateReset",
        "BrotliHistogramReindexDistance",
        "deflateReset",
        "bi_windup",
        "crc32_combine_",
        "BrotliDecoderStateCleanup",
        "bi_flush",
        "BrotliStoreMetaBlock",
        "SafeProcessCommands",
        "CreateBackwardReferencesNH54.isra.42",
        "BrotliHistogramBitCostDistanceCommand.part.2",
        "inflatePrime",
        "ShouldCompress",
        "deflate_slow",
        "BrotliClusterHistogramsCommand",
        "DecodeContextMap",
        "CreateBackwardReferencesNH35.isra.43",
        "StoreCompressedMetaBlockHeader",
        "BrotliInitZopfliNodes",
        "inflateUndermine",
        "BlockSplitterFinishBlockLiteral",
        "EmitUncompressedMetaBlock_0",
        "BrotliCompressFragmentTwoPassImpl11.isra.4",
        "StoreVarLenUint8",
        "ComputeShortestPathFromNodes",
        "RefineEntropyCodesCommand.constprop.11",
        "BrotliCompressFragmentTwoPassImpl14.isra.7",
        "BrotliHistogramReindexCommand",
        "BrotliEnsureRingBuffer",
        "EncodeWindowBits",
        "BrotliZopfliCreateCommands",
        "PrepareH54.isra.34",
        "EncodeContextMap",
        "BZ2_decompress",
        "BrotliOptimizeHuffmanCountsForRle",
        "PrepareH4.isra.18",
        "BZ2_bzDecompress",
        "CreateBackwardReferencesNH55.isra.44",
        "inflateStateCheck",
        "ClusterBlocksCommand",
        "longest_match",
        "ShouldMergeBlock",
        "ClusterBlocksDistance"
    ],
    "turbobench___quicklz":
    [
        "qlz_decompress_core.isra.1",
        "qlz_compress_core_0",
        "qlz_compress3",
        "qlz_decompress2"
    ],
    "turbobench___zlib":
    [
        "inflate_table",
        "scan_tree",
        "syncsearch",
        "send_tree",
        "inflateResetKeep",
        "_tr_align",
        "updatewindow",
        "inflate",
        "deflateInit2_",
        "inflateSyncPoint",
        "deflate_stored",
        "deflateCopy",
        "deflatePending",
        "deflateParams",
        "gf2_matrix_square",
        "_tr_stored_block",
        "deflateResetKeep",
        "deflate_slow",
        "inflateGetDictionary",
        "inflateSetDictionary",
        "inflateStateCheck",
        "deflateBound",
        "flush_pending",
        "inflateReset2",
        "deflateStateCheck",
        "bi_windup",
        "deflateTune",
        "build_tree",
        "crc32_little",
        "inflateInit2_",
        "adler32_z",
        "pqdownheap",
        "_tr_flush_block",
        "compress_block",
        "crc32_combine_",
        "inflateValidate",
        "_tr_init",
        "deflateInit_",
        "deflateGetDictionary",
        "inflateReset",
        "bi_flush",
        "inflateCodesUsed",
        "inflateEnd",
        "deflateReset",
        "slide_hash",
        "fill_window",
        "deflateEnd",
        "read_buf",
        "inflate_fast",
        "inflateUndermine",
        "inflateCopy",
        "deflatePrime",
        "adler32_combine_.part.0",
        "deflateSetHeader",
        "inflatePrime",
        "deflate_fast",
        "longest_match",
        "inflateMark",
        "deflateSetDictionary",
        "deflate",
        "inflateSync",
        "inflateInit_",
        "inflateGetHeader"
    ],
    "turbobench___zlib-ng":
    [
        "syncsearch",
        "deflate_stored",
        "scan_tree",
        "read_buf",
        "fill_window",
        "deflateStateCheck",
        "send_tree",
        "pqdownheap",
        "crc32_little",
        "inflateStateCheck",
        "bi_flush",
        "deflate_fast",
        "flush_pending",
        "compress_block",
        "build_tree",
        "deflate_slow",
        "bi_windup"
    ],
    "turbobench___zstd":
    [
        "ZSTD_getcBlockSize",
        "ZSTD_initCStream",
        "ZSTD_ldm_adjustParameters",
        "ZSTD_compressBlock_btopt",
        "ZSTD_initCStream_advanced",
        "ZSTD_fillDoubleHashTable",
        "ZSTD_compressBlock_doubleFast_extDict_generic",
        "ZSTD_compressContinue",
        "ZSTD_DCtx_setParameter",
        "ZSTD_compressContinue_internal",
        "ZSTD_loadDictionaryContent",
        "ZSTD_createCCtx_advanced",
        "ZSTD_initStaticDStream",
        "ZSTD_compressBlock_fast",
        "FSE_optimalTableLog_internal",
        "ZSTDMT_expandBufferPool",
        "ZSTD_sizeof_DCtx",
        "ZSTD_compressBlock_doubleFast_dictMatchState",
        "ZSTD_compress_usingCDict_advanced",
        "ZSTD_compressBegin_usingCDict_advanced",
        "ZSTD_compressBlock_fast_extDict",
        "ZSTD_count_2segments_2",
        "ZSTD_compressBlock_doubleFast_extDict",
        "UTIL_getTotalFileSize",
        "ZSTD_dParam_getBounds",
        "ZSTD_resetCStream",
        "divbwt",
        "ZSTD_setBasePrices",
        "ZSTD_DCtx_refPrefix",
        "HUF_readDTableX1",
        "ZSTD_sizeof_DDict",
        "ZSTDMT_flushStream",
        "ZSTD_makeCCtxParamsFromCParams",
        "ZSTD_CCtx_loadDictionary",
        "ZSTD_DCtx_loadDictionary",
        "HUF_decompress4X1_usingDTable",
        "HUF_buildCTable_wksp",
        "ZSTDMT_compress_advanced",
        "ZSTD_compressBlock_btultra_dictMatchState",
        "HUF_decompress1X_DCtx_wksp",
        "ZSTD_count_0",
        "HUF_compressCTable_internal",
        "FSE_normalizeCount",
        "ZSTD_decompressDCtx",
        "ZSTDMT_flushProduced",
        "HUF_decompress4X2_usingDTable_internal_default",
        "ZSTD_selectEncodingType",
        "HUF_writeCTable",
        "ZSTD_compressStream",
        "ZSTD_count_2segments_1",
        "ZSTD_estimateCCtxSize_usingCParams",
        "HUF_decompress1X1_DCtx_wksp",
        "ZSTD_updateRep",
        "HUF_decompress4X_hufOnly_wksp_bmi2",
        "ZSTD_createCStream_advanced",
        "HUF_decompress1X1_DCtx_wksp_bmi2",
        "ZSTD_findDecompressedSize",
        "ZSTD_compressBlock_lazy_dictMatchState",
        "ZSTD_CCtx_refPrefix",
        "ZSTD_initStats_ultra",
        "FSE_buildDTable",
        "ZSTD_compress_advanced",
        "ZSTD_adjustCParams_internal",
        "FSE_compress2",
        "ZSTDMT_CCtxParam_setMTCtxParameter",
        "ZSTD_DCtx_loadDictionary_byReference",
        "HUF_decompress4X1_usingDTable_internal_default",
        "HUF_readDTableX2",
        "UTIL_prepareFileList",
        "ZSTD_compress_usingDict",
        "ZSTD_insertBt1",
        "ZSTD_sizeof_CCtx",
        "ZSTD_compressBlock_btultra_extDict",
        "ZSTD_updateDUBT.isra.2",
        "ZSTD_createCCtxParams",
        "ZSTD_flushStream",
        "ZSTD_rescaleFreqs",
        "ZSTD_decodeLiteralsBlock",
        "FSE_decompress",
        "HUF_readDTableX1_wksp",
        "ZSTD_freeDCtx",
        "HUF_decompress1X_DCtx",
        "ZSTD_fillHashTable",
        "ZSTD_CCtxParams_getParameter",
        "ZSTD_compressBegin_advanced",
        "ZSTDMT_initCStream_internal",
        "UTIL_clockSpanNano",
        "ZSTD_compressRleLiteralsBlock",
        "ZSTD_reset_matchState",
        "HUF_decompress1X1",
        "HUF_selectDecoder",
        "ZSTD_compressBlock_fast_extDict_generic",
        "ZSTD_ldm_generateSequences",
        "ZSTD_count_2segments_0",
        "ZSTD_createCDict_byReference",
        "ZSTD_CCtx_reset",
        "divsufsort",
        "ZSTD_decodeSeqHeaders",
        "ZSTD_compressBlock_btultra",
        "ZSTD_dParam_withinBounds",
        "HUF_decompress4X_DCtx",
        "HUF_decompress",
        "ZSTDMT_endStream",
        "ZSTDMT_freeCCtxPool",
        "ZSTD_decompressBlock_internal",
        "tr_introsort.constprop.4",
        "ZSTDMT_initCStream",
        "ZSTD_getDDict",
        "ZSTD_initStaticCCtx",
        "ZSTD_buildSeqTable",
        "HUF_compress1X_usingCTable_internal_bmi2",
        "ZSTD_initDDict_internal",
        "ZSTDMT_initCStream_advanced",
        "ZSTD_createDDict_advanced",
        "XXH64_mergeRound",
        "ZSTD_assignParamsToCCtxParams",
        "HUF_compress4X_wksp",
        "ZSTD_decompressContinue",
        "HIST_countFast_wksp",
        "ZSTD_encodeSequences_bmi2",
        "ZSTD_referenceExternalSequences",
        "ZSTD_compressBlock_greedy_dictMatchState",
        "FSE_compress_wksp",
        "ZSTD_DCtx_refPrefix_advanced",
        "ZSTD_estimateDStreamSize_fromFrame",
        "ZSTD_getCParamsFromCDict",
        "HUF_decompress4X_usingDTable",
        "HUF_compress1X_wksp",
        "ZSTD_BtFindBestMatch_extDict_selectMLS.constprop.7",
        "ZSTD_createCDict",
        "HUF_decompress1X2_DCtx_wksp",
        "ZSTD_initFseState",
        "HUF_compress4X_usingCTable_internal",
        "ZSTD_count_1",
        "ZSTDMT_resetCStream",
        "FSE_buildCTable_rle",
        "ZSTD_loadDEntropy",
        "ZSTD_estimateCStreamSize_usingCParams",
        "ZSTD_getFrameHeader_advanced",
        "ZSTDMT_releaseAllJobResources",
        "FSE_buildCTable",
        "ZSTD_compressBound",
        "ZSTDMT_waitForLdmComplete",
        "FSE_compress_usingCTable_generic",
        "ZSTD_decompressStream",
        "ZSTD_initStaticDCtx",
        "HUF_decompress4X1_usingDTable_internal_bmi2",
        "ZSTDMT_releaseBuffer",
        "ss_mintrosort.constprop.10",
        "FSE_decompress_usingDTable",
        "ZSTD_findFrameSizeInfo",
        "ZSTD_initCStream_usingCDict",
        "HUF_readDTableX2_wksp",
        "ZSTD_initCDict_internal",
        "ZSTD_createDCtx_advanced",
        "FSE_decompress_wksp",
        "ZSTDMT_compressionJob",
        "ZSTD_free",
        "ZSTD_decompressBound",
        "ZSTD_checkCParams",
        "ZSTD_compressBlock_lazy2",
        "UTIL_countPhysicalCores",
        "ZSTD_DCtx_reset",
        "HUF_decompress1X1_usingDTable_internal_bmi2",
        "ZSTD_HcFindBestMatch_dictMatchState_selectMLS.constprop.5",
        "ZSTD_freeCCtxParams",
        "ZSTD_compressBegin",
        "HUF_compress1X_repeat",
        "ZSTD_initStaticCDict",
        "ZSTD_decompress",
        "ZSTD_copyDDictParameters",
        "ZSTD_noCompressLiterals",
        "ZSTD_decompressMultiFrame",
        "ZSTD_checkContinuity",
        "ZSTDMT_initCStream_usingCDict",
        "ZSTD_buildFSETable",
        "ZSTD_initDCtx_internal",
        "ZSTD_compress_advanced_internal",
        "ZSTD_compressBegin_advanced_internal",
        "ZSTDMT_expandJobsTable",
        "HUF_decompress1X2_usingDTable_internal_default",
        "ZSTD_compressBlock_btopt_extDict",
        "ZSTD_ldm_getTableSize",
        "ZSTD_createDDict",
        "UTIL_getFileStat",
        "ZSTD_NCountCost",
        "ZSTD_ldm_fillFastTables",
        "ZSTD_createCStream",
        "ZSTD_compressBlock_lazy2_extDict",
        "ZSTDMT_initJobCCtxParams",
        "HUF_decompress4X1_DCtx_wksp_bmi2",
        "ZSTD_DCtx_setMaxWindowSize",
        "HUF_decodeStreamX1",
        "UTIL_getFileSize",
        "ZSTDMT_flushStream_internal",
        "ZSTDMT_freeBufferPool",
        "ZSTDMT_freeCCtx",
        "HUF_decompress4X2_usingDTable",
        "ZSTD_insertAndFindFirstIndex_internal.isra.1",
        "ZSTD_CCtx_loadDictionary_advanced",
        "ZSTDMT_compress_advanced_internal",
        "HUF_decompress1X2",
        "HIST_count_wksp",
        "ZSTD_createCDict_advanced",
        "ZSTD_updateStats",
        "ZSTDMT_compressStream_generic",
        "ZSTD_CCtx_refPrefix_advanced",
        "ZSTD_freeDStream",
        "HUF_decompress1X1_DCtx",
        "ZSTD_estimateCCtxSize_usingCCtxParams",
        "HUF_decompress4X2_DCtx_wksp",
        "ZSTD_freeCStream",
        "UTIL_clockSpanMicro",
        "ZSTDMT_getBuffer",
        "ZSTD_CCtx_refCDict",
        "ZSTDMT_sizeof_CCtx",
        "ZSTD_clearAllDicts",
        "ZSTDMT_compressCCtx",
        "ZSTD_compressEnd",
        "ZSTD_compressBlock_btlazy2",
        "ZSTD_seqToCodes",
        "ZSTD_getDictID_fromFrame",
        "ZSTD_compressBlock_btlazy2_extDict",
        "UTIL_createFileList",
        "HUF_decompress4X1_DCtx_wksp",
        "HUF_compress_internal",
        "UTIL_waitForNextTick",
        "ZSTD_DCtx_loadDictionary_advanced",
        "HUF_decompress4X2_usingDTable_internal_bmi2",
        "ZSTDMT_serialState_reset",
        "ZSTD_decompress_usingDDict",
        "ZSTD_CCtx_setParameter",
        "HUF_decompress4X2_DCtx_wksp_bmi2",
        "FSE_writeNCount",
        "ZSTD_initCStream_internal",
        "ZSTD_freeCDict",
        "HUF_decompress4X_hufOnly",
        "ZSTD_sizeof_CDict",
        "ZSTD_getCParamsFromCCtxParams",
        "FSE_buildCTable_wksp",
        "BIT_initDStream",
        "ZSTD_compressBlock_greedy_extDict",
        "ZSTD_CCtxParams_setParameter",
        "ZSTD_reduceTable",
        "ZSTD_ldm_makeEntryAndInsertByTag.isra.5",
        "HIST_count_parallel_wksp",
        "HUF_decompress4X_hufOnly_wksp",
        "ZSTD_decompressBegin_usingDict",
        "HUF_decompress4X1",
        "ZSTD_DCtx_refDDict",
        "ZSTD_CCtx_loadDictionary_byReference",
        "ZSTD_compressBegin_internal",
        "ZSTD_freeCCtx",
        "ZSTD_compress_usingCDict",
        "ZSTD_compressBegin_usingDict",
        "ZSTD_estimateCDictSize",
        "HUF_compress",
        "ZSTD_CCtxParams_init_advanced",
        "ZSTD_createCCtx",
        "ZSTD_initStaticDDict",
        "FSE_readNCount",
        "ZSTD_compressBlock_lazy_extDict",
        "HIST_count_simple",
        "ZSTD_DUBT_findBestMatch",
        "HUF_readCTable",
        "HUF_compress4X_repeat",
        "UTIL_isDirectory",
        "ZSTD_estimateCStreamSize_usingCCtxParams",
        "ZSTD_compress2",
        "UTIL_setFileStat",
        "HUF_compress1X",
        "ZSTD_decompressStream_simpleArgs",
        "ZSTDMT_createCompressionJob",
        "ZSTD_resetCCtx_internal",
        "ZSTD_compressStream2",
        "ZSTD_estimateCDictSize_advanced",
        "ZSTD_encodeSequences",
        "ZSTD_calloc",
        "ZSTD_insertAndFindFirstIndexHash3",
        "FSE_compress",
        "ZSTD_compressBlock",
        "ZSTD_compress",
        "ZSTD_compressBlock_lazy",
        "UTIL_isLink",
        "ZSTD_createDCtx",
        "ZSTDMT_updateCParams_whileCompressing",
        "ZSTD_ldm_skipSequences",
        "ZSTD_estimateCCtxSize",
        "HUF_compress1X_usingCTable_internal_default",
        "ZSTD_compressBlock_fast_dictMatchState",
        "ZSTD_updateTree",
        "ZSTD_decompressBegin_usingDDict",
        "ZSTD_compressStream2_simpleArgs",
        "HUF_decompress4X1_DCtx",
        "ZSTD_adjustCParams",
        "ZSTD_getFrameContentSize",
        "ZSTD_compressBlock_greedy",
        "ZSTDMT_compressStream",
        "ZSTD_initCStream_usingDict",
        "HUF_decompress4X2_DCtx",
        "ZSTD_compressBlock_internal",
        "ZSTD_initCCtx",
        "ss_swapmerge.constprop.6",
        "ZSTD_initDStream",
        "HUF_decompress1X2_usingDTable_internal_bmi2",
        "ZSTD_endStream",
        "sort_typeBstar.isra.2",
        "ZSTD_initCStream_srcSize",
        "ZSTD_estimateCStreamSize",
        "ZSTD_freeDDict",
        "ZSTD_decompressBegin",
        "ZSTD_compressBlock_lazy2_dictMatchState",
        "ZSTD_count",
        "HIST_count",
        "HUF_decompress1X2_DCtx",
        "ZSTD_cParam_getBounds",
        "HUF_decompress4X2",
        "ZSTD_compressBlock_btlazy2_dictMatchState",
        "ZSTD_decompress_usingDict",
        "ZSTD_compressLiterals",
        "ZSTD_buildCTable",
        "UTIL_fileExist",
        "ZSTD_createDDict_byReference",
        "ZSTD_compressCCtx",
        "HUF_decompress4X_usingDTable_bmi2",
        "ZSTD_decompressBlock",
        "ZSTD_initDStream_usingDDict",
        "HUF_decodeStreamX2",
        "ZSTDMT_getMTCtxParameter",
        "ZSTD_decodeFrameHeader",
        "HUF_readStats",
        "ZSTD_compressBlock_btopt_dictMatchState",
        "ZSTD_initCStream_usingCDict_advanced",
        "ZSTD_BtFindBestMatch_dictMatchState_selectMLS.constprop.8",
        "ZSTD_sizeof_matchState",
        "ZSTD_initDStream_usingDict",
        "ZSTD_frameHeaderSize_internal",
        "ZSTD_count_2segments",
        "HUF_compress2",
        "ZSTD_decompressSequences_bmi2.constprop.9",
        "ZSTD_BtFindBestMatch_selectMLS.constprop.9",
        "HUF_decompress1X_usingDTable_bmi2",
        "ZSTD_createDStream",
        "ZSTD_cParam_withinBounds",
        "HUF_decompress1X1_usingDTable_internal_default",
        "ZSTD_compressBegin_usingCDict",
        "ZSTD_ldm_blockCompress",
        "FSE_writeNCount_generic",
        "ZSTD_compressBlock_btultra2",
        "ZSTD_copyCCtx",
        "ZSTD_getDecompressedSize",
        "ZSTD_invalidateRepCodes",
        "ZSTD_copy16",
        "ZSTD_fracWeight",
        "ZSTD_getErrorString",
        "ZSTD_insertAndFindFirstIndex",
        "ZSTD_frameHeaderSize",
        "ZSTD_DDict_dictSize",
        "ZSTD_malloc",
        "ZSTD_resetSeqStore",
        "ZSTD_getDictID_fromDict",
        "ZSTD_createDStream_advanced",
        "ZSTD_copyDCtx",
        "ZSTD_CCtx_getParameter",
        "ZSTD_getErrorCode",
        "ZSTD_getParams",
        "ZSTD_initStaticCStream",
        "ZSTD_resetDStream",
        "ZSTD_getCParams",
        "ZSTD_getErrorName",
        "ZSTD_getDictID_fromDDict",
        "ZSTD_sizeof_DStream",
        "ZSTD_ldm_getMaxNbSeq",
        "ZSTD_findFrameCompressedSize",
        "ZSTD_DDict_dictContent",
        "ZSTD_getFrameHeader",
        "ZSTD_writeLastEmptyBlock",
        "ZSTD_sizeof_CStream",
        "ZSTD_DCtx_setFormat",
        "ZSTD_selectBlockCompressor"
    ]
}